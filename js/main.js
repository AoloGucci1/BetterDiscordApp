var Core =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/builtins/24hour.js":
/*!********************************!*\
  !*** ./src/builtins/24hour.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class TwentyFourHour extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"24Hour\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get id() {\n    return \"twentyFourHour\";\n  }\n\n  enabled() {\n    this.inject24Hour();\n  }\n\n  disabled() {\n    this.unpatchAll();\n  }\n\n  inject24Hour() {\n    const twelveHour = new RegExp(`([0-9]{1,2}):([0-9]{1,2})\\\\s(AM|PM)`);\n\n    const convert = (thisObject, args, returnValue) => {\n      const matched = returnValue.match(twelveHour);\n      if (!matched || matched.length !== 4) return;\n      if (matched[3] === \"AM\") return returnValue = returnValue.replace(matched[0], `${matched[1] === \"12\" ? \"00\" : matched[1].padStart(2, \"0\")}:${matched[2]}`);\n      return returnValue = returnValue.replace(matched[0], `${matched[1] === \"12\" ? \"12\" : parseInt(matched[1]) + 12}:${matched[2]}`);\n    };\n\n    this.after(modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].TimeFormatter, \"calendarFormat\", convert); // Called in Cozy mode\n\n    this.after(modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].TimeFormatter, \"dateFormat\", convert); // Called in Compact mode\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zLzI0aG91ci5qcz9kZTc4Il0sIm5hbWVzIjpbIlR3ZW50eUZvdXJIb3VyIiwiQnVpbHRpbiIsIm5hbWUiLCJjYXRlZ29yeSIsImlkIiwiZW5hYmxlZCIsImluamVjdDI0SG91ciIsImRpc2FibGVkIiwidW5wYXRjaEFsbCIsInR3ZWx2ZUhvdXIiLCJSZWdFeHAiLCJjb252ZXJ0IiwidGhpc09iamVjdCIsImFyZ3MiLCJyZXR1cm5WYWx1ZSIsIm1hdGNoZWQiLCJtYXRjaCIsImxlbmd0aCIsInJlcGxhY2UiLCJwYWRTdGFydCIsInBhcnNlSW50IiwiYWZ0ZXIiLCJEaXNjb3JkTW9kdWxlcyIsIlRpbWVGb3JtYXR0ZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFZSxtRUFBSSxNQUFNQSxjQUFOLFNBQTZCQyx3REFBN0IsQ0FBcUM7QUFDcEQsTUFBSUMsSUFBSixHQUFXO0FBQUMsV0FBTyxRQUFQO0FBQWlCOztBQUM3QixNQUFJQyxRQUFKLEdBQWU7QUFBQyxXQUFPLFNBQVA7QUFBa0I7O0FBQ2xDLE1BQUlDLEVBQUosR0FBUztBQUFDLFdBQU8sZ0JBQVA7QUFBeUI7O0FBRW5DQyxTQUFPLEdBQUc7QUFDTixTQUFLQyxZQUFMO0FBQ0g7O0FBRURDLFVBQVEsR0FBRztBQUNQLFNBQUtDLFVBQUw7QUFDSDs7QUFFREYsY0FBWSxHQUFHO0FBQ1gsVUFBTUcsVUFBVSxHQUFHLElBQUlDLE1BQUosQ0FBWSxxQ0FBWixDQUFuQjs7QUFDQSxVQUFNQyxPQUFPLEdBQUcsQ0FBQ0MsVUFBRCxFQUFhQyxJQUFiLEVBQW1CQyxXQUFuQixLQUFtQztBQUMvQyxZQUFNQyxPQUFPLEdBQUdELFdBQVcsQ0FBQ0UsS0FBWixDQUFrQlAsVUFBbEIsQ0FBaEI7QUFDQSxVQUFJLENBQUNNLE9BQUQsSUFBWUEsT0FBTyxDQUFDRSxNQUFSLEtBQW1CLENBQW5DLEVBQXNDO0FBQ3RDLFVBQUlGLE9BQU8sQ0FBQyxDQUFELENBQVAsS0FBZSxJQUFuQixFQUF5QixPQUFPRCxXQUFXLEdBQUdBLFdBQVcsQ0FBQ0ksT0FBWixDQUFvQkgsT0FBTyxDQUFDLENBQUQsQ0FBM0IsRUFBaUMsR0FBRUEsT0FBTyxDQUFDLENBQUQsQ0FBUCxLQUFlLElBQWYsR0FBc0IsSUFBdEIsR0FBNkJBLE9BQU8sQ0FBQyxDQUFELENBQVAsQ0FBV0ksUUFBWCxDQUFvQixDQUFwQixFQUF1QixHQUF2QixDQUE0QixJQUFHSixPQUFPLENBQUMsQ0FBRCxDQUFJLEVBQTFHLENBQXJCO0FBQ3pCLGFBQU9ELFdBQVcsR0FBR0EsV0FBVyxDQUFDSSxPQUFaLENBQW9CSCxPQUFPLENBQUMsQ0FBRCxDQUEzQixFQUFpQyxHQUFFQSxPQUFPLENBQUMsQ0FBRCxDQUFQLEtBQWUsSUFBZixHQUFzQixJQUF0QixHQUE2QkssUUFBUSxDQUFDTCxPQUFPLENBQUMsQ0FBRCxDQUFSLENBQVIsR0FBdUIsRUFBRyxJQUFHQSxPQUFPLENBQUMsQ0FBRCxDQUFJLEVBQXhHLENBQXJCO0FBQ0gsS0FMRDs7QUFPQSxTQUFLTSxLQUFMLENBQVdDLHNEQUFjLENBQUNDLGFBQTFCLEVBQXlDLGdCQUF6QyxFQUEyRFosT0FBM0QsRUFUVyxDQVMwRDs7QUFDckUsU0FBS1UsS0FBTCxDQUFXQyxzREFBYyxDQUFDQyxhQUExQixFQUF5QyxZQUF6QyxFQUF1RFosT0FBdkQsRUFWVyxDQVVzRDtBQUNwRTs7QUF4Qm1ELENBQXpDLEVBQWYiLCJmaWxlIjoiLi9zcmMvYnVpbHRpbnMvMjRob3VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1aWx0aW4gZnJvbSBcIi4uL3N0cnVjdHMvYnVpbHRpblwiO1xyXG5pbXBvcnQge0Rpc2NvcmRNb2R1bGVzfSBmcm9tIFwibW9kdWxlc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IGNsYXNzIFR3ZW50eUZvdXJIb3VyIGV4dGVuZHMgQnVpbHRpbiB7XHJcbiAgICBnZXQgbmFtZSgpIHtyZXR1cm4gXCIyNEhvdXJcIjt9XHJcbiAgICBnZXQgY2F0ZWdvcnkoKSB7cmV0dXJuIFwiZ2VuZXJhbFwiO31cclxuICAgIGdldCBpZCgpIHtyZXR1cm4gXCJ0d2VudHlGb3VySG91clwiO31cclxuXHJcbiAgICBlbmFibGVkKCkge1xyXG4gICAgICAgIHRoaXMuaW5qZWN0MjRIb3VyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZGlzYWJsZWQoKSB7XHJcbiAgICAgICAgdGhpcy51bnBhdGNoQWxsKCk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5qZWN0MjRIb3VyKCkge1xyXG4gICAgICAgIGNvbnN0IHR3ZWx2ZUhvdXIgPSBuZXcgUmVnRXhwKGAoWzAtOV17MSwyfSk6KFswLTldezEsMn0pXFxcXHMoQU18UE0pYCk7XHJcbiAgICAgICAgY29uc3QgY29udmVydCA9ICh0aGlzT2JqZWN0LCBhcmdzLCByZXR1cm5WYWx1ZSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBtYXRjaGVkID0gcmV0dXJuVmFsdWUubWF0Y2godHdlbHZlSG91cik7XHJcbiAgICAgICAgICAgIGlmICghbWF0Y2hlZCB8fCBtYXRjaGVkLmxlbmd0aCAhPT0gNCkgcmV0dXJuO1xyXG4gICAgICAgICAgICBpZiAobWF0Y2hlZFszXSA9PT0gXCJBTVwiKSByZXR1cm4gcmV0dXJuVmFsdWUgPSByZXR1cm5WYWx1ZS5yZXBsYWNlKG1hdGNoZWRbMF0sIGAke21hdGNoZWRbMV0gPT09IFwiMTJcIiA/IFwiMDBcIiA6IG1hdGNoZWRbMV0ucGFkU3RhcnQoMiwgXCIwXCIpfToke21hdGNoZWRbMl19YCk7XHJcbiAgICAgICAgICAgIHJldHVybiByZXR1cm5WYWx1ZSA9IHJldHVyblZhbHVlLnJlcGxhY2UobWF0Y2hlZFswXSwgYCR7bWF0Y2hlZFsxXSA9PT0gXCIxMlwiID8gXCIxMlwiIDogcGFyc2VJbnQobWF0Y2hlZFsxXSkgKyAxMn06JHttYXRjaGVkWzJdfWApO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuYWZ0ZXIoRGlzY29yZE1vZHVsZXMuVGltZUZvcm1hdHRlciwgXCJjYWxlbmRhckZvcm1hdFwiLCBjb252ZXJ0KTsgLy8gQ2FsbGVkIGluIENvenkgbW9kZVxyXG4gICAgICAgIHRoaXMuYWZ0ZXIoRGlzY29yZE1vZHVsZXMuVGltZUZvcm1hdHRlciwgXCJkYXRlRm9ybWF0XCIsIGNvbnZlcnQpOyAvLyBDYWxsZWQgaW4gQ29tcGFjdCBtb2RlXHJcbiAgICB9XHJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/builtins/24hour.js\n");

/***/ }),

/***/ "./src/builtins/builtins.js":
/*!**********************************!*\
  !*** ./src/builtins/builtins.js ***!
  \**********************************/
/*! exports provided: VoiceMode, ClassNormalizer, DeveloperMode, PublicServers, DarkMode, MinimalMode, TwentyFourHour, ColoredText, VoiceDisconnect, EmoteMenu, EmoteAutocaps, EmoteModule, WindowPrefs, CustomCSS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _voicemode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./voicemode */ \"./src/builtins/voicemode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VoiceMode\", function() { return _voicemode__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _classnormalizer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classnormalizer */ \"./src/builtins/classnormalizer.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ClassNormalizer\", function() { return _classnormalizer__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _developermode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./developermode */ \"./src/builtins/developermode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DeveloperMode\", function() { return _developermode__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _publicservers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./publicservers */ \"./src/builtins/publicservers.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"PublicServers\", function() { return _publicservers__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _darkmode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./darkmode */ \"./src/builtins/darkmode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DarkMode\", function() { return _darkmode__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _minimalmode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./minimalmode */ \"./src/builtins/minimalmode.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MinimalMode\", function() { return _minimalmode__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _24hour__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./24hour */ \"./src/builtins/24hour.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"TwentyFourHour\", function() { return _24hour__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _coloredtext__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./coloredtext */ \"./src/builtins/coloredtext.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ColoredText\", function() { return _coloredtext__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _voicedisconnect__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./voicedisconnect */ \"./src/builtins/voicedisconnect.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"VoiceDisconnect\", function() { return _voicedisconnect__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var _emotemenu__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./emotemenu */ \"./src/builtins/emotemenu.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EmoteMenu\", function() { return _emotemenu__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\n\n/* harmony import */ var _emoteautocaps__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./emoteautocaps */ \"./src/builtins/emoteautocaps.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EmoteAutocaps\", function() { return _emoteautocaps__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n/* harmony import */ var _emotes__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./emotes */ \"./src/builtins/emotes.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EmoteModule\", function() { return _emotes__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; });\n\n/* harmony import */ var _windowprefs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./windowprefs */ \"./src/builtins/windowprefs.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WindowPrefs\", function() { return _windowprefs__WEBPACK_IMPORTED_MODULE_12__[\"default\"]; });\n\n/* harmony import */ var _customcss__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./customcss */ \"./src/builtins/customcss.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CustomCSS\", function() { return _customcss__WEBPACK_IMPORTED_MODULE_13__[\"default\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL2J1aWx0aW5zLmpzPzU5YTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiIuL3NyYy9idWlsdGlucy9idWlsdGlucy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBWb2ljZU1vZGV9IGZyb20gXCIuL3ZvaWNlbW9kZVwiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgQ2xhc3NOb3JtYWxpemVyfSBmcm9tIFwiLi9jbGFzc25vcm1hbGl6ZXJcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIERldmVsb3Blck1vZGV9IGZyb20gXCIuL2RldmVsb3Blcm1vZGVcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIFB1YmxpY1NlcnZlcnN9IGZyb20gXCIuL3B1YmxpY3NlcnZlcnNcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIERhcmtNb2RlfSBmcm9tIFwiLi9kYXJrbW9kZVwiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgTWluaW1hbE1vZGV9IGZyb20gXCIuL21pbmltYWxtb2RlXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBUd2VudHlGb3VySG91cn0gZnJvbSBcIi4vMjRob3VyXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBDb2xvcmVkVGV4dH0gZnJvbSBcIi4vY29sb3JlZHRleHRcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIFZvaWNlRGlzY29ubmVjdH0gZnJvbSBcIi4vdm9pY2VkaXNjb25uZWN0XCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBFbW90ZU1lbnV9IGZyb20gXCIuL2Vtb3RlbWVudVwiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgRW1vdGVBdXRvY2Fwc30gZnJvbSBcIi4vZW1vdGVhdXRvY2Fwc1wiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgRW1vdGVNb2R1bGV9IGZyb20gXCIuL2Vtb3Rlc1wiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgV2luZG93UHJlZnN9IGZyb20gXCIuL3dpbmRvd3ByZWZzXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBDdXN0b21DU1N9IGZyb20gXCIuL2N1c3RvbWNzc1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/builtins/builtins.js\n");

/***/ }),

/***/ "./src/builtins/classnormalizer.js":
/*!*****************************************!*\
  !*** ./src/builtins/classnormalizer.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\n\nconst normalizedPrefix = \"da\";\nconst randClass = new RegExp(`^(?!${normalizedPrefix}-)((?:[A-Za-z]|[0-9]|-)+)-(?:[A-Za-z]|[0-9]|-|_){6}$`);\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class ClassNormalizer extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get id() {\n    return \"classNormalizer\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get name() {\n    return \"ClassNormalizer\";\n  }\n\n  enabled() {\n    if (this.hasPatched) return;\n    this.patchClassModules(modules__WEBPACK_IMPORTED_MODULE_1__[\"WebpackModules\"].getModules(this.moduleFilter.bind(this)));\n    this.normalizeElement(document.querySelector(\"#app-mount\"));\n    this.hasPatched = true;\n    this.patchDOMMethods();\n  }\n\n  disabled() {\n    if (!this.hasPatched) return;\n    this.unpatchClassModules(modules__WEBPACK_IMPORTED_MODULE_1__[\"WebpackModules\"].getModules(this.moduleFilter.bind(this)));\n    this.revertElement(document.querySelector(\"#app-mount\"));\n    this.hasPatched = false;\n  }\n\n  patchClassModules(modules) {\n    for (const module of modules) {\n      this.patchClassModule(normalizedPrefix, module);\n    }\n  }\n\n  unpatchClassModules(modules) {\n    for (const module of modules) {\n      this.unpatchClassModule(normalizedPrefix, module);\n    }\n  }\n\n  shouldIgnore(value) {\n    if (!isNaN(value)) return true;\n    if (value.endsWith(\"px\") || value.endsWith(\"ch\") || value.endsWith(\"em\") || value.endsWith(\"ms\")) return true;\n    if (value.startsWith(\"layerContainer-\")) return true;\n    if (value.startsWith(\"#\") && (value.length == 7 || value.length == 4)) return true;\n    if (value.includes(\"calc(\") || value.includes(\"rgba\")) return true;\n    return false;\n  }\n\n  moduleFilter(module) {\n    if (typeof module !== \"object\" || Array.isArray(module)) return false;\n    if (module.__esModule) return false;\n    if (!Object.keys(module).length) return false;\n\n    for (const baseClassName in module) {\n      const value = module[baseClassName];\n      if (typeof value !== \"string\") return false;\n      if (this.shouldIgnore(value)) continue;\n      if (value.split(\"-\").length === 1) return false;\n      if (!randClass.test(value.split(\" \")[0])) return false;\n    }\n\n    return true;\n  }\n\n  patchClassModule(componentName, classNames) {\n    for (const baseClassName in classNames) {\n      const value = classNames[baseClassName];\n      if (this.shouldIgnore(value)) continue;\n      const classList = value.split(\" \");\n\n      for (const normalClass of classList) {\n        const match = normalClass.match(randClass)[1];\n        if (!match) continue; // Shouldn't ever happen since they passed the moduleFilter, but you never know\n\n        const camelCase = match.split(\"-\").map((s, i) => i ? s[0].toUpperCase() + s.slice(1) : s).join(\"\");\n        classNames[baseClassName] += ` ${componentName}-${camelCase}`;\n      }\n    }\n  }\n\n  unpatchClassModule(componentName, classNames) {\n    for (const baseClassName in classNames) {\n      const value = classNames[baseClassName];\n      if (this.shouldIgnore(value)) continue;\n      let newString = \"\";\n      const classList = value.split(\" \");\n\n      for (const normalClass of classList) {\n        if (normalClass.startsWith(`${componentName}-`)) continue;\n        newString += ` ${normalClass}`;\n      }\n\n      classNames[baseClassName] = newString.trim();\n    }\n  }\n\n  normalizeElement(element) {\n    if (!(element instanceof Element)) return;\n    const classes = element.classList;\n\n    for (let c = 0, clen = classes.length; c < clen; c++) {\n      if (!randClass.test(classes[c])) continue;\n      const match = classes[c].match(randClass)[1];\n      const newClass = match.split(\"-\").map((s, i) => i ? s[0].toUpperCase() + s.slice(1) : s).join(\"\");\n      element.classList.add(`${normalizedPrefix}-${newClass}`);\n    }\n\n    for (const child of element.children) this.normalizeElement(child);\n  }\n\n  revertElement(element) {\n    if (!(element instanceof Element)) return;\n    if (element.children && element.children.length) this.revertElement(element.children[0]);\n    if (element.nextElementSibling) this.revertElement(element.nextElementSibling);\n    const classes = element.classList;\n    const toRemove = [];\n\n    for (let c = 0; c < classes.length; c++) {\n      if (classes[c].startsWith(`${normalizedPrefix}-`)) toRemove.push(classes[c]);\n    }\n\n    element.classList.remove(...toRemove);\n  }\n\n  patchDOMMethods() {\n    const contains = DOMTokenList.prototype.contains;\n\n    DOMTokenList.prototype.contains = function (token) {\n      const tokens = token.split(\" \");\n      return tokens.every(t => contains.call(this, t));\n    };\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/builtins/classnormalizer.js\n");

/***/ }),

/***/ "./src/builtins/coloredtext.js":
/*!*************************************!*\
  !*** ./src/builtins/coloredtext.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\n\nconst MessageContent = modules__WEBPACK_IMPORTED_MODULE_1__[\"WebpackModules\"].getModule(m => m.defaultProps && m.defaultProps.hasOwnProperty(\"disableButtons\"));\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class ColoredText extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"ColoredText\";\n  }\n\n  get category() {\n    return \"appearance\";\n  }\n\n  get id() {\n    return \"coloredText\";\n  }\n\n  enabled() {\n    this.injectColoredText();\n  }\n\n  disabled() {\n    this.unpatchAll();\n  }\n\n  injectColoredText() {\n    this.after(MessageContent.prototype, \"render\", (thisObject, args, retVal) => {\n      this.after(retVal.props, \"children\", {\n        silent: true,\n        after: ({\n          returnValue\n        }) => {\n          const markup = returnValue.props.children[1];\n          const roleColor = thisObject.props.message.colorString;\n          if (markup && roleColor) markup.props.style = {\n            color: roleColor\n          };\n        }\n      });\n    });\n  }\n\n  removeColoredText() {\n    document.querySelectorAll(\".markup-2BOw-j\").forEach(elem => {\n      elem.style.setProperty(\"color\", \"\");\n    });\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL2NvbG9yZWR0ZXh0LmpzP2RlMDkiXSwibmFtZXMiOlsiTWVzc2FnZUNvbnRlbnQiLCJXZWJwYWNrTW9kdWxlcyIsImdldE1vZHVsZSIsIm0iLCJkZWZhdWx0UHJvcHMiLCJoYXNPd25Qcm9wZXJ0eSIsIkNvbG9yZWRUZXh0IiwiQnVpbHRpbiIsIm5hbWUiLCJjYXRlZ29yeSIsImlkIiwiZW5hYmxlZCIsImluamVjdENvbG9yZWRUZXh0IiwiZGlzYWJsZWQiLCJ1bnBhdGNoQWxsIiwiYWZ0ZXIiLCJwcm90b3R5cGUiLCJ0aGlzT2JqZWN0IiwiYXJncyIsInJldFZhbCIsInByb3BzIiwic2lsZW50IiwicmV0dXJuVmFsdWUiLCJtYXJrdXAiLCJjaGlsZHJlbiIsInJvbGVDb2xvciIsIm1lc3NhZ2UiLCJjb2xvclN0cmluZyIsInN0eWxlIiwiY29sb3IiLCJyZW1vdmVDb2xvcmVkVGV4dCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlbGVtIiwic2V0UHJvcGVydHkiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQSxNQUFNQSxjQUFjLEdBQUdDLHNEQUFjLENBQUNDLFNBQWYsQ0FBeUJDLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxZQUFGLElBQWtCRCxDQUFDLENBQUNDLFlBQUYsQ0FBZUMsY0FBZixDQUE4QixnQkFBOUIsQ0FBaEQsQ0FBdkI7QUFFZSxtRUFBSSxNQUFNQyxXQUFOLFNBQTBCQyx3REFBMUIsQ0FBa0M7QUFDakQsTUFBSUMsSUFBSixHQUFXO0FBQUMsV0FBTyxhQUFQO0FBQXNCOztBQUNsQyxNQUFJQyxRQUFKLEdBQWU7QUFBQyxXQUFPLFlBQVA7QUFBcUI7O0FBQ3JDLE1BQUlDLEVBQUosR0FBUztBQUFDLFdBQU8sYUFBUDtBQUFzQjs7QUFFaENDLFNBQU8sR0FBRztBQUNOLFNBQUtDLGlCQUFMO0FBQ0g7O0FBRURDLFVBQVEsR0FBRztBQUNQLFNBQUtDLFVBQUw7QUFDSDs7QUFFREYsbUJBQWlCLEdBQUc7QUFDaEIsU0FBS0csS0FBTCxDQUFXZixjQUFjLENBQUNnQixTQUExQixFQUFxQyxRQUFyQyxFQUErQyxDQUFDQyxVQUFELEVBQWFDLElBQWIsRUFBbUJDLE1BQW5CLEtBQThCO0FBQ3pFLFdBQUtKLEtBQUwsQ0FBV0ksTUFBTSxDQUFDQyxLQUFsQixFQUF5QixVQUF6QixFQUFxQztBQUFDQyxjQUFNLEVBQUUsSUFBVDtBQUFlTixhQUFLLEVBQUUsQ0FBQztBQUFDTztBQUFELFNBQUQsS0FBbUI7QUFDMUUsZ0JBQU1DLE1BQU0sR0FBR0QsV0FBVyxDQUFDRixLQUFaLENBQWtCSSxRQUFsQixDQUEyQixDQUEzQixDQUFmO0FBQ0EsZ0JBQU1DLFNBQVMsR0FBR1IsVUFBVSxDQUFDRyxLQUFYLENBQWlCTSxPQUFqQixDQUF5QkMsV0FBM0M7QUFDQSxjQUFJSixNQUFNLElBQUlFLFNBQWQsRUFBeUJGLE1BQU0sQ0FBQ0gsS0FBUCxDQUFhUSxLQUFiLEdBQXFCO0FBQUNDLGlCQUFLLEVBQUVKO0FBQVIsV0FBckI7QUFDNUI7QUFKb0MsT0FBckM7QUFLSCxLQU5EO0FBT0g7O0FBRURLLG1CQUFpQixHQUFHO0FBQ2hCQyxZQUFRLENBQUNDLGdCQUFULENBQTBCLGdCQUExQixFQUE0Q0MsT0FBNUMsQ0FBb0RDLElBQUksSUFBSTtBQUN4REEsVUFBSSxDQUFDTixLQUFMLENBQVdPLFdBQVgsQ0FBdUIsT0FBdkIsRUFBZ0MsRUFBaEM7QUFDSCxLQUZEO0FBR0g7O0FBM0JnRCxDQUF0QyxFQUFmIiwiZmlsZSI6Ii4vc3JjL2J1aWx0aW5zL2NvbG9yZWR0ZXh0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1aWx0aW4gZnJvbSBcIi4uL3N0cnVjdHMvYnVpbHRpblwiO1xyXG5pbXBvcnQge1dlYnBhY2tNb2R1bGVzfSBmcm9tIFwibW9kdWxlc1wiO1xyXG5cclxuY29uc3QgTWVzc2FnZUNvbnRlbnQgPSBXZWJwYWNrTW9kdWxlcy5nZXRNb2R1bGUobSA9PiBtLmRlZmF1bHRQcm9wcyAmJiBtLmRlZmF1bHRQcm9wcy5oYXNPd25Qcm9wZXJ0eShcImRpc2FibGVCdXR0b25zXCIpKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBDb2xvcmVkVGV4dCBleHRlbmRzIEJ1aWx0aW4ge1xyXG4gICAgZ2V0IG5hbWUoKSB7cmV0dXJuIFwiQ29sb3JlZFRleHRcIjt9XHJcbiAgICBnZXQgY2F0ZWdvcnkoKSB7cmV0dXJuIFwiYXBwZWFyYW5jZVwiO31cclxuICAgIGdldCBpZCgpIHtyZXR1cm4gXCJjb2xvcmVkVGV4dFwiO31cclxuXHJcbiAgICBlbmFibGVkKCkge1xyXG4gICAgICAgIHRoaXMuaW5qZWN0Q29sb3JlZFRleHQoKTtcclxuICAgIH1cclxuXHJcbiAgICBkaXNhYmxlZCgpIHtcclxuICAgICAgICB0aGlzLnVucGF0Y2hBbGwoKTtcclxuICAgIH1cclxuXHJcbiAgICBpbmplY3RDb2xvcmVkVGV4dCgpIHtcclxuICAgICAgICB0aGlzLmFmdGVyKE1lc3NhZ2VDb250ZW50LnByb3RvdHlwZSwgXCJyZW5kZXJcIiwgKHRoaXNPYmplY3QsIGFyZ3MsIHJldFZhbCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFmdGVyKHJldFZhbC5wcm9wcywgXCJjaGlsZHJlblwiLCB7c2lsZW50OiB0cnVlLCBhZnRlcjogKHtyZXR1cm5WYWx1ZX0pID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IG1hcmt1cCA9IHJldHVyblZhbHVlLnByb3BzLmNoaWxkcmVuWzFdO1xyXG4gICAgICAgICAgICAgICAgY29uc3Qgcm9sZUNvbG9yID0gdGhpc09iamVjdC5wcm9wcy5tZXNzYWdlLmNvbG9yU3RyaW5nO1xyXG4gICAgICAgICAgICAgICAgaWYgKG1hcmt1cCAmJiByb2xlQ29sb3IpIG1hcmt1cC5wcm9wcy5zdHlsZSA9IHtjb2xvcjogcm9sZUNvbG9yfTtcclxuICAgICAgICAgICAgfX0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZUNvbG9yZWRUZXh0KCkge1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubWFya3VwLTJCT3ctalwiKS5mb3JFYWNoKGVsZW0gPT4ge1xyXG4gICAgICAgICAgICBlbGVtLnN0eWxlLnNldFByb3BlcnR5KFwiY29sb3JcIiwgXCJcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/builtins/coloredtext.js\n");

/***/ }),

/***/ "./src/builtins/customcss.js":
/*!***********************************!*\
  !*** ./src/builtins/customcss.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _ui_customcss_csseditor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/customcss/csseditor */ \"./src/ui/customcss/csseditor.jsx\");\n/* harmony import */ var _ui_floating_container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/floating/container */ \"./src/ui/floating/container.jsx\");\n/* harmony import */ var _ui_settings_title__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/settings/title */ \"./src/ui/settings/title.jsx\");\n/* harmony import */ var _modules_utilities__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../modules/utilities */ \"./src/modules/utilities.js\");\n\n\n\n\n\n\n\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n\nconst electron = __webpack_require__(/*! electron */ \"electron\");\n\nconst UserSettings = modules__WEBPACK_IMPORTED_MODULE_1__[\"WebpackModules\"].getByProps(\"updateAccount\");\nconst Dispatcher = modules__WEBPACK_IMPORTED_MODULE_1__[\"WebpackModules\"].getByProps(\"dirtyDispatch\");\nconst ActionTypes = modules__WEBPACK_IMPORTED_MODULE_1__[\"WebpackModules\"].getByProps(\"ActionTypes\").ActionTypes;\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class CustomCSS extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"Custom CSS\";\n  }\n\n  get category() {\n    return \"customcss\";\n  }\n\n  get id() {\n    return \"customcss\";\n  }\n\n  get startDetached() {\n    return modules__WEBPACK_IMPORTED_MODULE_1__[\"Settings\"].get(this.collection, this.category, \"startDetached\");\n  }\n\n  get nativeOpen() {\n    return modules__WEBPACK_IMPORTED_MODULE_1__[\"Settings\"].get(this.collection, this.category, \"nativeOpen\");\n  }\n\n  constructor() {\n    super();\n    this.savedCss = \"\";\n    this.insertedCss = \"\";\n    this.isDetached = false;\n  }\n\n  async enabled() {\n    if (!window.ace) {\n      modules__WEBPACK_IMPORTED_MODULE_1__[\"DOMManager\"].injectScript(\"ace-script\", \"https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.9/ace.js\").then(() => {\n        if (window.require.original) window.require = window.require.original;\n      });\n    }\n\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"Settings\"].registerPanel(this.id, modules__WEBPACK_IMPORTED_MODULE_1__[\"Strings\"].Panels.customcss, {\n      order: 2,\n      element: () => [modules__WEBPACK_IMPORTED_MODULE_1__[\"React\"].createElement(_ui_settings_title__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        text: modules__WEBPACK_IMPORTED_MODULE_1__[\"Strings\"].CustomCSS.editorTitle\n      }), modules__WEBPACK_IMPORTED_MODULE_1__[\"React\"].createElement(_ui_customcss_csseditor__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        css: this.savedCss,\n        save: this.saveCSS.bind(this),\n        update: this.insertCSS.bind(this),\n        openNative: this.openNative.bind(this),\n        openDetached: this.openDetached.bind(this),\n        onChange: this.onChange.bind(this)\n      })],\n      onClick: thisObject => {\n        if (this.isDetached) return;\n        if (this.nativeOpen) return this.openNative();else if (this.startDetached) return this.openDetached();\n        const settingsView = _modules_utilities__WEBPACK_IMPORTED_MODULE_5__[\"default\"].findInRenderTree(thisObject._reactInternalFiber, m => m && m.onSetSection, {\n          walkable: [\"child\", \"memoizedProps\", \"props\", \"children\"]\n        });\n        if (settingsView && settingsView.onSetSection) settingsView.onSetSection(this.id);\n      }\n    });\n    this.loadCSS();\n    this.insertCSS(this.savedCss);\n    this.watchContent();\n  }\n\n  disabled() {\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"Settings\"].removePanel(this.id);\n    this.unwatchContent();\n  }\n\n  watchContent() {\n    if (this.watcher) return this.error(\"Already watching content.\");\n    const timeCache = {};\n    this.log(\"Starting to watch content.\");\n    this.watcher = fs.watch(modules__WEBPACK_IMPORTED_MODULE_1__[\"DataStore\"].customCSS, {\n      persistent: false\n    }, async (eventType, filename) => {\n      if (!eventType || !filename) return;\n      await new Promise(r => setTimeout(r, 50));\n\n      try {\n        fs.statSync(modules__WEBPACK_IMPORTED_MODULE_1__[\"DataStore\"].customCSS);\n      } catch (err) {\n        if (err.code !== \"ENOENT\") return;\n        delete timeCache[filename];\n        this.saveCSS(\"\");\n      }\n\n      const stats = fs.statSync(modules__WEBPACK_IMPORTED_MODULE_1__[\"DataStore\"].customCSS);\n      if (!stats || !stats.mtime || !stats.mtime.getTime()) return;\n      if (typeof stats.mtime.getTime() !== \"number\") return;\n      if (timeCache[filename] == stats.mtime.getTime()) return;\n      timeCache[filename] = stats.mtime.getTime();\n\n      if (eventType == \"change\") {\n        const newCSS = modules__WEBPACK_IMPORTED_MODULE_1__[\"DataStore\"].loadCustomCSS();\n        if (newCSS == this.savedCss) return;\n        this.savedCss = newCSS;\n        this.insertCSS(this.savedCss);\n        modules__WEBPACK_IMPORTED_MODULE_1__[\"Events\"].emit(\"customcss-updated\", this.savedCss);\n      }\n    });\n  }\n\n  unwatchContent() {\n    if (!this.watcher) return this.error(\"Was not watching content.\");\n    this.watcher.close();\n    delete this.watcher;\n    this.log(\"No longer watching content.\");\n  }\n\n  onChange(value) {\n    if (!modules__WEBPACK_IMPORTED_MODULE_1__[\"Settings\"].get(\"settings\", \"customcss\", \"liveUpdate\")) return;\n    this.insertCSS(value);\n    this.saveCSS(value);\n  }\n\n  loadCSS() {\n    this.savedCss = modules__WEBPACK_IMPORTED_MODULE_1__[\"DataStore\"].loadCustomCSS();\n  }\n\n  insertCSS(newCss) {\n    if (typeof newCss === \"undefined\") newCss = this.insertedCss;else this.insertedCss = newCss;\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"DOMManager\"].updateCustomCSS(newCss);\n  }\n\n  saveCSS(newCss) {\n    if (typeof newCss !== \"undefined\") this.savedCss = newCss;\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"DataStore\"].saveCustomCSS(this.savedCss);\n  }\n\n  openNative() {\n    electron.shell.openExternal(`file://${modules__WEBPACK_IMPORTED_MODULE_1__[\"DataStore\"].customCSS}`);\n  }\n\n  openDetached(currentCSS) {\n    const editorRef = modules__WEBPACK_IMPORTED_MODULE_1__[\"React\"].createRef();\n    const editor = modules__WEBPACK_IMPORTED_MODULE_1__[\"React\"].createElement(_ui_customcss_csseditor__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      id: \"bd-floating-editor\",\n      ref: editorRef,\n      css: currentCSS,\n      save: this.saveCSS.bind(this),\n      update: this.insertCSS.bind(this),\n      openNative: this.openNative.bind(this),\n      onChange: this.onChange.bind(this)\n    });\n    _ui_floating_container__WEBPACK_IMPORTED_MODULE_3__[\"default\"].open({\n      onClose: () => {\n        this.isDetached = false;\n      },\n      onResize: () => {\n        if (!editorRef || !editorRef.current || !editorRef.current.resize) return;\n        editorRef.current.resize();\n      },\n      title: modules__WEBPACK_IMPORTED_MODULE_1__[\"Strings\"].CustomCSS.editorTitle,\n      id: \"floating-editor-window\",\n      height: 470,\n      width: 410,\n      center: true,\n      resizable: true,\n      children: editor,\n      confirmClose: () => {\n        if (!editorRef || !editorRef.current) return false;\n        return editorRef.current.hasUnsavedChanges;\n      },\n      confirmationText: modules__WEBPACK_IMPORTED_MODULE_1__[\"Strings\"].CustomCSS.confirmationText\n    });\n    this.isDetached = true;\n    UserSettings.close();\n    Dispatcher.dirtyDispatch({\n      type: ActionTypes.LAYER_POP\n    });\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/builtins/customcss.js\n");

/***/ }),

/***/ "./src/builtins/darkmode.js":
/*!**********************************!*\
  !*** ./src/builtins/darkmode.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class DarkMode extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"DarkMode\";\n  }\n\n  get category() {\n    return \"appearance\";\n  }\n\n  get id() {\n    return \"darkMode\";\n  }\n\n  enabled() {\n    document.getElementById(\"app-mount\").classList.add(\"bda-dark\", \"bd-dark\");\n  }\n\n  disabled() {\n    document.getElementById(\"app-mount\").classList.remove(\"bda-dark\", \"bd-dark\");\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL2Rhcmttb2RlLmpzPzVkZGUiXSwibmFtZXMiOlsiRGFya01vZGUiLCJCdWlsdGluIiwibmFtZSIsImNhdGVnb3J5IiwiaWQiLCJlbmFibGVkIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNsYXNzTGlzdCIsImFkZCIsImRpc2FibGVkIiwicmVtb3ZlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFFZSxtRUFBSSxNQUFNQSxRQUFOLFNBQXVCQyx3REFBdkIsQ0FBK0I7QUFDOUMsTUFBSUMsSUFBSixHQUFXO0FBQUMsV0FBTyxVQUFQO0FBQW1COztBQUMvQixNQUFJQyxRQUFKLEdBQWU7QUFBQyxXQUFPLFlBQVA7QUFBcUI7O0FBQ3JDLE1BQUlDLEVBQUosR0FBUztBQUFDLFdBQU8sVUFBUDtBQUFtQjs7QUFFN0JDLFNBQU8sR0FBRztBQUNOQyxZQUFRLENBQUNDLGNBQVQsQ0FBd0IsV0FBeEIsRUFBcUNDLFNBQXJDLENBQStDQyxHQUEvQyxDQUFtRCxVQUFuRCxFQUErRCxTQUEvRDtBQUNIOztBQUVEQyxVQUFRLEdBQUc7QUFDUEosWUFBUSxDQUFDQyxjQUFULENBQXdCLFdBQXhCLEVBQXFDQyxTQUFyQyxDQUErQ0csTUFBL0MsQ0FBc0QsVUFBdEQsRUFBa0UsU0FBbEU7QUFDSDs7QUFYNkMsQ0FBbkMsRUFBZiIsImZpbGUiOiIuL3NyYy9idWlsdGlucy9kYXJrbW9kZS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCdWlsdGluIGZyb20gXCIuLi9zdHJ1Y3RzL2J1aWx0aW5cIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBEYXJrTW9kZSBleHRlbmRzIEJ1aWx0aW4ge1xyXG4gICAgZ2V0IG5hbWUoKSB7cmV0dXJuIFwiRGFya01vZGVcIjt9XHJcbiAgICBnZXQgY2F0ZWdvcnkoKSB7cmV0dXJuIFwiYXBwZWFyYW5jZVwiO31cclxuICAgIGdldCBpZCgpIHtyZXR1cm4gXCJkYXJrTW9kZVwiO31cclxuXHJcbiAgICBlbmFibGVkKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXBwLW1vdW50XCIpLmNsYXNzTGlzdC5hZGQoXCJiZGEtZGFya1wiLCBcImJkLWRhcmtcIik7XHJcbiAgICB9XHJcblxyXG4gICAgZGlzYWJsZWQoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHAtbW91bnRcIikuY2xhc3NMaXN0LnJlbW92ZShcImJkYS1kYXJrXCIsIFwiYmQtZGFya1wiKTtcclxuICAgIH1cclxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/builtins/darkmode.js\n");

/***/ }),

/***/ "./src/builtins/developermode.js":
/*!***************************************!*\
  !*** ./src/builtins/developermode.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class DeveloperMode extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"DeveloperMode\";\n  }\n\n  get category() {\n    return \"developer\";\n  }\n\n  get id() {\n    return \"developerMode\";\n  }\n\n  get selectorModeID() {\n    return \"copySelector\";\n  }\n\n  get selectorMode() {\n    return this.get(this.selectorModeID);\n  }\n\n  constructor() {\n    super();\n    this.enableSelectors = this.enableSelectors.bind(this);\n    this.disableSelectors = this.disableSelectors.bind(this);\n  }\n\n  enabled() {\n    $(window).on(\"keydown.bdDevmode\", e => {\n      if (e.which === 119 || e.which == 118) {\n        //F8\n        this.log(\"Debugger Activated\");\n        debugger; // eslint-disable-line no-debugger\n      }\n    });\n    if (this.selectorMode) this.enableSelectors();\n    this.selectorCancel = this.registerSetting(this.selectorModeID, this.enableSelectors, this.disableSelectors);\n  }\n\n  disabled() {\n    $(window).off(\"keydown.bdDevmode\");\n    if (this.selectorMode) this.disableSelectors();\n    if (this.selectorCancel) this.selectorCancel();\n  }\n\n  enableSelectors() {\n    $(document).on(\"contextmenu.bdDevmode\", e => {\n      this.lastSelector = this.getSelector(e.toElement);\n\n      const attach = () => {\n        let cm = $(\".contextMenu-HLZMGh\");\n\n        if (cm.length <= 0) {\n          cm = $(\"<div class=\\\"contextMenu-HLZMGh bd-context-menu\\\"></div>\");\n          cm.addClass($(\".app, .app-2rEoOp\").hasClass(\"theme-dark\") ? \"theme-dark\" : \"theme-light\");\n          cm.appendTo(\".app, .app-2rEoOp\");\n          cm.css(\"top\", e.clientY);\n          cm.css(\"left\", e.clientX);\n          $(document).on(\"click.bdDevModeCtx\", () => {\n            cm.remove();\n            $(document).off(\".bdDevModeCtx\");\n          });\n          $(document).on(\"contextmenu.bdDevModeCtx\", () => {\n            cm.remove();\n            $(document).off(\".bdDevModeCtx\");\n          });\n          $(document).on(\"keyup.bdDevModeCtx\", event => {\n            if (event.keyCode === 27) {\n              cm.remove();\n              $(document).off(\".bdDevModeCtx\");\n            }\n          });\n        }\n\n        const cmo = $(\"<div/>\", {\n          \"class\": \"itemGroup-1tL0uz\"\n        });\n        const cmi = $(\"<div/>\", {\n          \"class\": \"item-1Yvehc\",\n          \"click\": () => {\n            modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].ElectronModule.copy(this.lastSelector);\n            cm.hide();\n          }\n        }).append($(\"<span/>\", {\n          text: modules__WEBPACK_IMPORTED_MODULE_1__[\"Strings\"].Collections.settings.developer.copySelector.name\n        }));\n        cmo.append(cmi);\n        cm.append(cmo);\n        if (cm.hasClass(\"undefined\")) cm.css(\"top\", \"-=\" + cmo.outerHeight());\n      };\n\n      setImmediate(attach);\n      e.stopPropagation();\n    });\n  }\n\n  disableSelectors() {\n    $(document).off(\"contextmenu.bdDevmode\");\n    $(document).off(\"contextmenu.bdDevModeCtx\");\n  }\n\n  getRules(element, css = element.ownerDocument.styleSheets) {\n    // return [].concat(...[...css].map(s => [...s.cssRules || []])).filter(r => r && r.selectorText && element.matches(r.selectorText) && r.style.length && r.selectorText.split(\", \").length < 8);\n    const sheets = [...css].filter(s => !s.href || !s.href.includes(\"BetterDiscordApp\"));\n    const rules = sheets.map(s => [...(s.cssRules || [])]).flat();\n    const elementRules = rules.filter(r => r && r.selectorText && element.matches(r.selectorText) && r.style.length && r.selectorText.split(\", \").length < 8 && !r.selectorText.split(\", \").includes(\"*\"));\n    return elementRules;\n  }\n\n  getSelector(element) {\n    if (element.id) return `#${element.id}`;\n    const rules = this.getRules(element);\n    const latestRule = rules[rules.length - 1];\n    if (latestRule) return latestRule.selectorText;else if (element.classList.length) return `.${Array.from(element.classList).join(\".\")}`;\n    return `.${Array.from(element.parentElement.classList).join(\".\")}`;\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/builtins/developermode.js\n");

/***/ }),

/***/ "./src/builtins/emoteautocaps.js":
/*!***************************************!*\
  !*** ./src/builtins/emoteautocaps.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _emotes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./emotes */ \"./src/builtins/emotes.js\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class EmoteAutocaps extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"EmoteAutocapitalize\";\n  }\n\n  get collection() {\n    return \"emotes\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get id() {\n    return \"autoCaps\";\n  }\n\n  enabled() {\n    $(\"body\").off(\".bdac\");\n    $(\"body\").on(\"keyup.bdac change.bdac paste.bdac\", $(\".channelTextArea-1LDbYG textarea:first\"), () => {\n      const text = $(\".channelTextArea-1LDbYG textarea:first\").val();\n      if (text == undefined) return;\n      const lastWord = text.split(\" \").pop();\n\n      if (lastWord.length > 3) {\n        if (lastWord == \"danSgame\") return;\n        const ret = this.capitalize(lastWord.toLowerCase());\n\n        if (ret !== null && ret !== undefined) {\n          modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].insertText(modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].getTextArea()[0], text.replace(lastWord, ret));\n        }\n      }\n    });\n  }\n\n  disabled() {\n    $(\"body\").off(\".bdac\");\n  }\n\n  capitalize(value) {\n    const res = _emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getCategory(\"TwitchGlobal\");\n\n    for (const p in res) {\n      if (res.hasOwnProperty(p) && value == (p + \"\").toLowerCase()) {\n        return p;\n      }\n    }\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL2Vtb3RlYXV0b2NhcHMuanM/MTY0NyJdLCJuYW1lcyI6WyJFbW90ZUF1dG9jYXBzIiwiQnVpbHRpbiIsIm5hbWUiLCJjb2xsZWN0aW9uIiwiY2F0ZWdvcnkiLCJpZCIsImVuYWJsZWQiLCIkIiwib2ZmIiwib24iLCJ0ZXh0IiwidmFsIiwidW5kZWZpbmVkIiwibGFzdFdvcmQiLCJzcGxpdCIsInBvcCIsImxlbmd0aCIsInJldCIsImNhcGl0YWxpemUiLCJ0b0xvd2VyQ2FzZSIsIlV0aWxpdGllcyIsImluc2VydFRleHQiLCJnZXRUZXh0QXJlYSIsInJlcGxhY2UiLCJkaXNhYmxlZCIsInZhbHVlIiwicmVzIiwiRW1vdGVNb2R1bGUiLCJnZXRDYXRlZ29yeSIsInAiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBRUE7QUFFZSxtRUFBSSxNQUFNQSxhQUFOLFNBQTRCQyx3REFBNUIsQ0FBb0M7QUFDbkQsTUFBSUMsSUFBSixHQUFXO0FBQUMsV0FBTyxxQkFBUDtBQUE4Qjs7QUFDMUMsTUFBSUMsVUFBSixHQUFpQjtBQUFDLFdBQU8sUUFBUDtBQUFpQjs7QUFDbkMsTUFBSUMsUUFBSixHQUFlO0FBQUMsV0FBTyxTQUFQO0FBQWtCOztBQUNsQyxNQUFJQyxFQUFKLEdBQVM7QUFBQyxXQUFPLFVBQVA7QUFBbUI7O0FBRTdCQyxTQUFPLEdBQUc7QUFDTkMsS0FBQyxDQUFDLE1BQUQsQ0FBRCxDQUFVQyxHQUFWLENBQWMsT0FBZDtBQUNBRCxLQUFDLENBQUMsTUFBRCxDQUFELENBQVVFLEVBQVYsQ0FBYSxtQ0FBYixFQUFrREYsQ0FBQyxDQUFDLHdDQUFELENBQW5ELEVBQStGLE1BQU07QUFDakcsWUFBTUcsSUFBSSxHQUFHSCxDQUFDLENBQUMsd0NBQUQsQ0FBRCxDQUE0Q0ksR0FBNUMsRUFBYjtBQUNBLFVBQUlELElBQUksSUFBSUUsU0FBWixFQUF1QjtBQUV2QixZQUFNQyxRQUFRLEdBQUdILElBQUksQ0FBQ0ksS0FBTCxDQUFXLEdBQVgsRUFBZ0JDLEdBQWhCLEVBQWpCOztBQUNBLFVBQUlGLFFBQVEsQ0FBQ0csTUFBVCxHQUFrQixDQUF0QixFQUF5QjtBQUNyQixZQUFJSCxRQUFRLElBQUksVUFBaEIsRUFBNEI7QUFDNUIsY0FBTUksR0FBRyxHQUFHLEtBQUtDLFVBQUwsQ0FBZ0JMLFFBQVEsQ0FBQ00sV0FBVCxFQUFoQixDQUFaOztBQUNBLFlBQUlGLEdBQUcsS0FBSyxJQUFSLElBQWdCQSxHQUFHLEtBQUtMLFNBQTVCLEVBQXVDO0FBQ25DUSwyREFBUyxDQUFDQyxVQUFWLENBQXFCRCxpREFBUyxDQUFDRSxXQUFWLEdBQXdCLENBQXhCLENBQXJCLEVBQWlEWixJQUFJLENBQUNhLE9BQUwsQ0FBYVYsUUFBYixFQUF1QkksR0FBdkIsQ0FBakQ7QUFDSDtBQUNKO0FBQ0osS0FaRDtBQWFIOztBQUVETyxVQUFRLEdBQUc7QUFDUGpCLEtBQUMsQ0FBQyxNQUFELENBQUQsQ0FBVUMsR0FBVixDQUFjLE9BQWQ7QUFDSDs7QUFFRFUsWUFBVSxDQUFDTyxLQUFELEVBQVE7QUFDZCxVQUFNQyxHQUFHLEdBQUdDLCtDQUFXLENBQUNDLFdBQVosQ0FBd0IsY0FBeEIsQ0FBWjs7QUFDQSxTQUFLLE1BQU1DLENBQVgsSUFBZ0JILEdBQWhCLEVBQXFCO0FBQ2pCLFVBQUlBLEdBQUcsQ0FBQ0ksY0FBSixDQUFtQkQsQ0FBbkIsS0FBeUJKLEtBQUssSUFBSSxDQUFDSSxDQUFDLEdBQUcsRUFBTCxFQUFTVixXQUFULEVBQXRDLEVBQThEO0FBQzFELGVBQU9VLENBQVA7QUFDSDtBQUNKO0FBQ0o7O0FBbENrRCxDQUF4QyxFQUFmIiwiZmlsZSI6Ii4vc3JjL2J1aWx0aW5zL2Vtb3RlYXV0b2NhcHMuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQnVpbHRpbiBmcm9tIFwiLi4vc3RydWN0cy9idWlsdGluXCI7XHJcblxyXG5pbXBvcnQge1V0aWxpdGllc30gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmltcG9ydCBFbW90ZU1vZHVsZSBmcm9tIFwiLi9lbW90ZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBFbW90ZUF1dG9jYXBzIGV4dGVuZHMgQnVpbHRpbiB7XHJcbiAgICBnZXQgbmFtZSgpIHtyZXR1cm4gXCJFbW90ZUF1dG9jYXBpdGFsaXplXCI7fVxyXG4gICAgZ2V0IGNvbGxlY3Rpb24oKSB7cmV0dXJuIFwiZW1vdGVzXCI7fVxyXG4gICAgZ2V0IGNhdGVnb3J5KCkge3JldHVybiBcImdlbmVyYWxcIjt9XHJcbiAgICBnZXQgaWQoKSB7cmV0dXJuIFwiYXV0b0NhcHNcIjt9XHJcblxyXG4gICAgZW5hYmxlZCgpIHtcclxuICAgICAgICAkKFwiYm9keVwiKS5vZmYoXCIuYmRhY1wiKTtcclxuICAgICAgICAkKFwiYm9keVwiKS5vbihcImtleXVwLmJkYWMgY2hhbmdlLmJkYWMgcGFzdGUuYmRhY1wiLCAkKFwiLmNoYW5uZWxUZXh0QXJlYS0xTERiWUcgdGV4dGFyZWE6Zmlyc3RcIiksICgpID0+IHtcclxuICAgICAgICAgICAgY29uc3QgdGV4dCA9ICQoXCIuY2hhbm5lbFRleHRBcmVhLTFMRGJZRyB0ZXh0YXJlYTpmaXJzdFwiKS52YWwoKTtcclxuICAgICAgICAgICAgaWYgKHRleHQgPT0gdW5kZWZpbmVkKSByZXR1cm47XHJcblxyXG4gICAgICAgICAgICBjb25zdCBsYXN0V29yZCA9IHRleHQuc3BsaXQoXCIgXCIpLnBvcCgpO1xyXG4gICAgICAgICAgICBpZiAobGFzdFdvcmQubGVuZ3RoID4gMykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGxhc3RXb3JkID09IFwiZGFuU2dhbWVcIikgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgY29uc3QgcmV0ID0gdGhpcy5jYXBpdGFsaXplKGxhc3RXb3JkLnRvTG93ZXJDYXNlKCkpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHJldCAhPT0gbnVsbCAmJiByZXQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIFV0aWxpdGllcy5pbnNlcnRUZXh0KFV0aWxpdGllcy5nZXRUZXh0QXJlYSgpWzBdLCB0ZXh0LnJlcGxhY2UobGFzdFdvcmQsIHJldCkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZGlzYWJsZWQoKSB7XHJcbiAgICAgICAgJChcImJvZHlcIikub2ZmKFwiLmJkYWNcIik7XHJcbiAgICB9XHJcblxyXG4gICAgY2FwaXRhbGl6ZSh2YWx1ZSkge1xyXG4gICAgICAgIGNvbnN0IHJlcyA9IEVtb3RlTW9kdWxlLmdldENhdGVnb3J5KFwiVHdpdGNoR2xvYmFsXCIpO1xyXG4gICAgICAgIGZvciAoY29uc3QgcCBpbiByZXMpIHtcclxuICAgICAgICAgICAgaWYgKHJlcy5oYXNPd25Qcm9wZXJ0eShwKSAmJiB2YWx1ZSA9PSAocCArIFwiXCIpLnRvTG93ZXJDYXNlKCkpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/builtins/emoteautocaps.js\n");

/***/ }),

/***/ "./src/builtins/emotemenu.js":
/*!***********************************!*\
  !*** ./src/builtins/emotemenu.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _emotes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./emotes */ \"./src/builtins/emotes.js\");\n\n\n\nconst headerHTML = `<div id=\"bd-qem\">\n    <button class=\"active\" id=\"bd-qem-twitch\">Twitch</button>\n    <button id=\"bd-qem-favourite\">Favourite</button>\n    <button id=\"bd-qem-emojis\">Emojis</buttond>\n</div>`;\nconst twitchEmoteHTML = `<div id=\"bd-qem-twitch-container\">\n    <div class=\"scroller-wrap scrollerWrap-2lJEkd fade\">\n        <div class=\"scroller scroller-2FKFPG\">\n            <div class=\"emote-menu-inner\">\n\n            </div>\n        </div>\n    </div>\n</div>`;\nconst favoritesHTML = `<div id=\"bd-qem-favourite-container\">\n    <div class=\"scroller-wrap scrollerWrap-2lJEkd fade\">\n        <div class=\"scroller scroller-2FKFPG\">\n            <div class=\"emote-menu-inner\">\n\n            </div>\n        </div>\n    </div>\n</div>`;\n\nconst makeEmote = (emote, url, options = {}) => {\n  const {\n    onContextMenu,\n    onClick\n  } = options;\n  const emoteContainer = modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].parseHTML(`<div class=\"emote-container\">\n        <img class=\"emote-icon\" alt=\"${emote}\" src=\"${url}\" title=\"${emote}\">\n    </div>`);\n  if (onContextMenu) emoteContainer.addEventListener(\"contextmenu\", onContextMenu);\n  emoteContainer.addEventListener(\"click\", onClick);\n  return emoteContainer;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class EmoteMenu extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"EmoteMenu\";\n  }\n\n  get collection() {\n    return \"emotes\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get id() {\n    return \"emoteMenu\";\n  }\n\n  get hideEmojisID() {\n    return \"hideEmojiMenu\";\n  }\n\n  get hideEmojis() {\n    return this.get(this.hideEmojisID);\n  }\n\n  constructor() {\n    super();\n    this.lastTab = \"bd-qem-emojis\";\n    this.qmeHeader = modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].parseHTML(headerHTML);\n\n    for (const button of this.qmeHeader.getElementsByTagName(\"button\")) button.addEventListener(\"click\", this.switchMenu.bind(this));\n\n    this.teContainer = modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].parseHTML(twitchEmoteHTML);\n    this.teContainerInner = this.teContainer.querySelector(\".emote-menu-inner\");\n    this.faContainer = modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].parseHTML(favoritesHTML);\n    this.faContainerInner = this.faContainer.querySelector(\".emote-menu-inner\");\n    this.observer = new MutationObserver(mutations => {\n      for (const mutation of mutations) this.observe(mutation);\n    });\n    this.enableHideEmojis = this.enableHideEmojis.bind(this);\n    this.disableHideEmojis = this.disableHideEmojis.bind(this);\n    this.updateTwitchEmotes = this.updateTwitchEmotes.bind(this);\n  }\n\n  async enabled() {\n    this.log(\"Starting to observe\");\n    this.observer.observe(document.getElementById(\"app-mount\"), {\n      childList: true,\n      subtree: true\n    });\n    this.hideEmojiCancel = this.registerSetting(this.hideEmojisID, this.enableHideEmojis, this.disableHideEmojis);\n    if (this.hideEmojis) this.enableHideEmojis();\n    if (_emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].emotesLoaded) this.updateTwitchEmotes();\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"Events\"].on(\"emotes-loaded\", this.updateTwitchEmotes);\n  }\n\n  disabled() {\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"Events\"].off(\"emotes-loaded\", this.updateTwitchEmotes);\n    this.observer.disconnect();\n    this.disableHideEmojis();\n    if (this.hideEmojiCancel) this.hideEmojiCancel();\n  }\n\n  enableHideEmojis() {\n    const picker = document.querySelector(\".emojiPicker-3m1S-j\");\n    if (picker) picker.classList.add(\"bd-qme-hidden\");\n  }\n\n  disableHideEmojis() {\n    const picker = document.querySelector(\".emojiPicker-3m1S-j\");\n    if (picker) picker.classList.remove(\"bd-qme-hidden\");\n  }\n\n  insertEmote(emote) {\n    const ta = modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].getTextArea();\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"Utilities\"].insertText(ta[0], ta.val().slice(-1) == \" \" ? ta.val() + emote : ta.val() + \" \" + emote);\n  }\n\n  favContext(e) {\n    e.stopPropagation();\n    const em = e.target.closest(\".emote-container\").children[0];\n    const menu = $(`<div id=\"removemenu\" class=\"bd-context-menu context-menu theme-dark\">Remove</div>`);\n    menu.css({\n      top: e.pageY - $(\"#bd-qem-favourite-container\").offset().top,\n      left: e.pageX - $(\"#bd-qem-favourite-container\").offset().left\n    });\n    $(em).parent().append(menu);\n    menu.on(\"click\", event => {\n      event.preventDefault();\n      event.stopPropagation();\n      $(em).remove();\n      _emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].removeFavorite($(em).attr(\"title\"));\n      this.updateFavorites();\n      $(document).off(\"mousedown.emotemenu\");\n    });\n    $(document).on(\"mousedown.emotemenu\", function (event) {\n      if (event.target.id == \"removemenu\") return;\n      $(\"#removemenu\").remove();\n      $(document).off(\"mousedown.emotemenu\");\n    });\n  }\n\n  switchMenu(e) {\n    let id = typeof e == \"string\" ? e : e.target.id;\n    if (id == \"bd-qem-emojis\" && this.hideEmojis) id = \"bd-qem-favourite\";\n    const twitch = $(\"#bd-qem-twitch\");\n    const fav = $(\"#bd-qem-favourite\");\n    const emojis = $(\"#bd-qem-emojis\");\n    twitch.removeClass(\"active\");\n    fav.removeClass(\"active\");\n    emojis.removeClass(\"active\");\n    $(\".emojiPicker-3m1S-j\").hide();\n    $(\"#bd-qem-favourite-container\").hide();\n    $(\"#bd-qem-twitch-container\").hide();\n\n    switch (id) {\n      case \"bd-qem-twitch\":\n        twitch.addClass(\"active\");\n        $(\"#bd-qem-twitch-container\").show();\n        break;\n\n      case \"bd-qem-favourite\":\n        fav.addClass(\"active\");\n        $(\"#bd-qem-favourite-container\").show();\n        break;\n\n      case \"bd-qem-emojis\":\n        emojis.addClass(\"active\");\n        $(\".emojiPicker-3m1S-j\").show();\n        $(\".emojiPicker-3m1S-j input\").focus();\n        break;\n    }\n\n    if (id) this.lastTab = id;\n  }\n\n  observe(mutation) {\n    if (!mutation.addedNodes.length || !(mutation.addedNodes[0] instanceof Element)) return;\n    const node = mutation.addedNodes[0];\n    if (!node.classList.contains(\"popout-3sVMXz\") || node.classList.contains(\"popoutLeft-30WmrD\") || !node.getElementsByClassName(\"emojiPicker-3m1S-j\").length) return;\n    const e = $(node);\n    if (this.hideEmojis) e.addClass(\"bd-qme-hidden\");else e.removeClass(\"bd-qme-hidden\");\n    e.prepend(this.qmeHeader);\n    e.append(this.teContainer);\n    e.append(this.faContainer);\n    this.switchMenu(this.lastTab);\n  }\n\n  updateTwitchEmotes() {\n    while (this.teContainerInner.firstChild) this.teContainerInner.firstChild.remove();\n\n    for (const emote in _emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getCategory(\"TwitchGlobal\")) {\n      if (!_emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getCategory(\"TwitchGlobal\").hasOwnProperty(emote)) continue;\n      const url = _emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getCategory(\"TwitchGlobal\")[emote];\n      const emoteElement = makeEmote(emote, url, {\n        onClick: this.insertEmote.bind(this, emote)\n      });\n      this.teContainerInner.append(emoteElement);\n    }\n  }\n\n  updateFavorites() {\n    while (this.faContainerInner.firstChild) this.faContainerInner.firstChild.remove();\n\n    for (const emote in _emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].favorites) {\n      const url = _emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].favorites[emote];\n      const emoteElement = makeEmote(emote, url, {\n        onClick: this.insertEmote.bind(this, emote),\n        onContextMenu: this.favContext.bind(this)\n      });\n      this.faContainerInner.append(emoteElement);\n    }\n\n    _emotes__WEBPACK_IMPORTED_MODULE_2__[\"default\"].saveFavorites();\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL2Vtb3RlbWVudS5qcz8yYWNlIl0sIm5hbWVzIjpbImhlYWRlckhUTUwiLCJ0d2l0Y2hFbW90ZUhUTUwiLCJmYXZvcml0ZXNIVE1MIiwibWFrZUVtb3RlIiwiZW1vdGUiLCJ1cmwiLCJvcHRpb25zIiwib25Db250ZXh0TWVudSIsIm9uQ2xpY2siLCJlbW90ZUNvbnRhaW5lciIsIlV0aWxpdGllcyIsInBhcnNlSFRNTCIsImFkZEV2ZW50TGlzdGVuZXIiLCJFbW90ZU1lbnUiLCJCdWlsdGluIiwibmFtZSIsImNvbGxlY3Rpb24iLCJjYXRlZ29yeSIsImlkIiwiaGlkZUVtb2ppc0lEIiwiaGlkZUVtb2ppcyIsImdldCIsImNvbnN0cnVjdG9yIiwibGFzdFRhYiIsInFtZUhlYWRlciIsImJ1dHRvbiIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwic3dpdGNoTWVudSIsImJpbmQiLCJ0ZUNvbnRhaW5lciIsInRlQ29udGFpbmVySW5uZXIiLCJxdWVyeVNlbGVjdG9yIiwiZmFDb250YWluZXIiLCJmYUNvbnRhaW5lcklubmVyIiwib2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwibXV0YXRpb25zIiwibXV0YXRpb24iLCJvYnNlcnZlIiwiZW5hYmxlSGlkZUVtb2ppcyIsImRpc2FibGVIaWRlRW1vamlzIiwidXBkYXRlVHdpdGNoRW1vdGVzIiwiZW5hYmxlZCIsImxvZyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjaGlsZExpc3QiLCJzdWJ0cmVlIiwiaGlkZUVtb2ppQ2FuY2VsIiwicmVnaXN0ZXJTZXR0aW5nIiwiRW1vdGVNb2R1bGUiLCJlbW90ZXNMb2FkZWQiLCJFdmVudHMiLCJvbiIsImRpc2FibGVkIiwib2ZmIiwiZGlzY29ubmVjdCIsInBpY2tlciIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImluc2VydEVtb3RlIiwidGEiLCJnZXRUZXh0QXJlYSIsImluc2VydFRleHQiLCJ2YWwiLCJzbGljZSIsImZhdkNvbnRleHQiLCJlIiwic3RvcFByb3BhZ2F0aW9uIiwiZW0iLCJ0YXJnZXQiLCJjbG9zZXN0IiwiY2hpbGRyZW4iLCJtZW51IiwiJCIsImNzcyIsInRvcCIsInBhZ2VZIiwib2Zmc2V0IiwibGVmdCIsInBhZ2VYIiwicGFyZW50IiwiYXBwZW5kIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInJlbW92ZUZhdm9yaXRlIiwiYXR0ciIsInVwZGF0ZUZhdm9yaXRlcyIsInR3aXRjaCIsImZhdiIsImVtb2ppcyIsInJlbW92ZUNsYXNzIiwiaGlkZSIsImFkZENsYXNzIiwic2hvdyIsImZvY3VzIiwiYWRkZWROb2RlcyIsImxlbmd0aCIsIkVsZW1lbnQiLCJub2RlIiwiY29udGFpbnMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicHJlcGVuZCIsImZpcnN0Q2hpbGQiLCJnZXRDYXRlZ29yeSIsImhhc093blByb3BlcnR5IiwiZW1vdGVFbGVtZW50IiwiZmF2b3JpdGVzIiwic2F2ZUZhdm9yaXRlcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFFQSxNQUFNQSxVQUFVLEdBQUk7Ozs7T0FBcEI7QUFNQSxNQUFNQyxlQUFlLEdBQUk7Ozs7Ozs7O09BQXpCO0FBVUEsTUFBTUMsYUFBYSxHQUFJOzs7Ozs7OztPQUF2Qjs7QUFVQSxNQUFNQyxTQUFTLEdBQUcsQ0FBQ0MsS0FBRCxFQUFRQyxHQUFSLEVBQWFDLE9BQU8sR0FBRyxFQUF2QixLQUE4QjtBQUM1QyxRQUFNO0FBQUNDLGlCQUFEO0FBQWdCQztBQUFoQixNQUEyQkYsT0FBakM7QUFDQSxRQUFNRyxjQUFjLEdBQUdDLGlEQUFTLENBQUNDLFNBQVYsQ0FBcUI7dUNBQ1RQLEtBQU0sVUFBU0MsR0FBSSxZQUFXRCxLQUFNO1dBRGhELENBQXZCO0FBR0EsTUFBSUcsYUFBSixFQUFtQkUsY0FBYyxDQUFDRyxnQkFBZixDQUFnQyxhQUFoQyxFQUErQ0wsYUFBL0M7QUFDbkJFLGdCQUFjLENBQUNHLGdCQUFmLENBQWdDLE9BQWhDLEVBQXlDSixPQUF6QztBQUNBLFNBQU9DLGNBQVA7QUFDSCxDQVJEOztBQVVlLG1FQUFJLE1BQU1JLFNBQU4sU0FBd0JDLHdEQUF4QixDQUFnQztBQUMvQyxNQUFJQyxJQUFKLEdBQVc7QUFBQyxXQUFPLFdBQVA7QUFBb0I7O0FBQ2hDLE1BQUlDLFVBQUosR0FBaUI7QUFBQyxXQUFPLFFBQVA7QUFBaUI7O0FBQ25DLE1BQUlDLFFBQUosR0FBZTtBQUFDLFdBQU8sU0FBUDtBQUFrQjs7QUFDbEMsTUFBSUMsRUFBSixHQUFTO0FBQUMsV0FBTyxXQUFQO0FBQW9COztBQUM5QixNQUFJQyxZQUFKLEdBQW1CO0FBQUMsV0FBTyxlQUFQO0FBQXdCOztBQUM1QyxNQUFJQyxVQUFKLEdBQWlCO0FBQUMsV0FBTyxLQUFLQyxHQUFMLENBQVMsS0FBS0YsWUFBZCxDQUFQO0FBQW9DOztBQUV0REcsYUFBVyxHQUFHO0FBQ1Y7QUFDQSxTQUFLQyxPQUFMLEdBQWUsZUFBZjtBQUVBLFNBQUtDLFNBQUwsR0FBaUJkLGlEQUFTLENBQUNDLFNBQVYsQ0FBb0JYLFVBQXBCLENBQWpCOztBQUNBLFNBQUssTUFBTXlCLE1BQVgsSUFBcUIsS0FBS0QsU0FBTCxDQUFlRSxvQkFBZixDQUFvQyxRQUFwQyxDQUFyQixFQUFvRUQsTUFBTSxDQUFDYixnQkFBUCxDQUF3QixPQUF4QixFQUFpQyxLQUFLZSxVQUFMLENBQWdCQyxJQUFoQixDQUFxQixJQUFyQixDQUFqQzs7QUFFcEUsU0FBS0MsV0FBTCxHQUFtQm5CLGlEQUFTLENBQUNDLFNBQVYsQ0FBb0JWLGVBQXBCLENBQW5CO0FBQ0EsU0FBSzZCLGdCQUFMLEdBQXdCLEtBQUtELFdBQUwsQ0FBaUJFLGFBQWpCLENBQStCLG1CQUEvQixDQUF4QjtBQUVBLFNBQUtDLFdBQUwsR0FBbUJ0QixpREFBUyxDQUFDQyxTQUFWLENBQW9CVCxhQUFwQixDQUFuQjtBQUNBLFNBQUsrQixnQkFBTCxHQUF3QixLQUFLRCxXQUFMLENBQWlCRCxhQUFqQixDQUErQixtQkFBL0IsQ0FBeEI7QUFFQSxTQUFLRyxRQUFMLEdBQWdCLElBQUlDLGdCQUFKLENBQXFCQyxTQUFTLElBQUk7QUFBQyxXQUFLLE1BQU1DLFFBQVgsSUFBdUJELFNBQXZCLEVBQWtDLEtBQUtFLE9BQUwsQ0FBYUQsUUFBYjtBQUF3QixLQUE3RixDQUFoQjtBQUNBLFNBQUtFLGdCQUFMLEdBQXdCLEtBQUtBLGdCQUFMLENBQXNCWCxJQUF0QixDQUEyQixJQUEzQixDQUF4QjtBQUNBLFNBQUtZLGlCQUFMLEdBQXlCLEtBQUtBLGlCQUFMLENBQXVCWixJQUF2QixDQUE0QixJQUE1QixDQUF6QjtBQUNBLFNBQUthLGtCQUFMLEdBQTBCLEtBQUtBLGtCQUFMLENBQXdCYixJQUF4QixDQUE2QixJQUE3QixDQUExQjtBQUNIOztBQUVELFFBQU1jLE9BQU4sR0FBZ0I7QUFDWixTQUFLQyxHQUFMLENBQVMscUJBQVQ7QUFDQSxTQUFLVCxRQUFMLENBQWNJLE9BQWQsQ0FBc0JNLFFBQVEsQ0FBQ0MsY0FBVCxDQUF3QixXQUF4QixDQUF0QixFQUE0RDtBQUN4REMsZUFBUyxFQUFFLElBRDZDO0FBRXhEQyxhQUFPLEVBQUU7QUFGK0MsS0FBNUQ7QUFJQSxTQUFLQyxlQUFMLEdBQXVCLEtBQUtDLGVBQUwsQ0FBcUIsS0FBSzlCLFlBQTFCLEVBQXdDLEtBQUtvQixnQkFBN0MsRUFBK0QsS0FBS0MsaUJBQXBFLENBQXZCO0FBQ0EsUUFBSSxLQUFLcEIsVUFBVCxFQUFxQixLQUFLbUIsZ0JBQUw7QUFDckIsUUFBSVcsK0NBQVcsQ0FBQ0MsWUFBaEIsRUFBOEIsS0FBS1Ysa0JBQUw7QUFDOUJXLGtEQUFNLENBQUNDLEVBQVAsQ0FBVSxlQUFWLEVBQTJCLEtBQUtaLGtCQUFoQztBQUNIOztBQUVEYSxVQUFRLEdBQUc7QUFDUEYsa0RBQU0sQ0FBQ0csR0FBUCxDQUFXLGVBQVgsRUFBNEIsS0FBS2Qsa0JBQWpDO0FBQ0EsU0FBS1AsUUFBTCxDQUFjc0IsVUFBZDtBQUNBLFNBQUtoQixpQkFBTDtBQUNBLFFBQUksS0FBS1EsZUFBVCxFQUEwQixLQUFLQSxlQUFMO0FBQzdCOztBQUVEVCxrQkFBZ0IsR0FBRztBQUNmLFVBQU1rQixNQUFNLEdBQUdiLFFBQVEsQ0FBQ2IsYUFBVCxDQUF1QixxQkFBdkIsQ0FBZjtBQUNBLFFBQUkwQixNQUFKLEVBQVlBLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkMsR0FBakIsQ0FBcUIsZUFBckI7QUFDZjs7QUFFRG5CLG1CQUFpQixHQUFHO0FBQ2hCLFVBQU1pQixNQUFNLEdBQUdiLFFBQVEsQ0FBQ2IsYUFBVCxDQUF1QixxQkFBdkIsQ0FBZjtBQUNBLFFBQUkwQixNQUFKLEVBQVlBLE1BQU0sQ0FBQ0MsU0FBUCxDQUFpQkUsTUFBakIsQ0FBd0IsZUFBeEI7QUFDZjs7QUFFREMsYUFBVyxDQUFDekQsS0FBRCxFQUFRO0FBQ2YsVUFBTTBELEVBQUUsR0FBR3BELGlEQUFTLENBQUNxRCxXQUFWLEVBQVg7QUFDQXJELHFEQUFTLENBQUNzRCxVQUFWLENBQXFCRixFQUFFLENBQUMsQ0FBRCxDQUF2QixFQUE0QkEsRUFBRSxDQUFDRyxHQUFILEdBQVNDLEtBQVQsQ0FBZSxDQUFDLENBQWhCLEtBQXNCLEdBQXRCLEdBQTRCSixFQUFFLENBQUNHLEdBQUgsS0FBVzdELEtBQXZDLEdBQStDMEQsRUFBRSxDQUFDRyxHQUFILEtBQVcsR0FBWCxHQUFpQjdELEtBQTVGO0FBQ0g7O0FBRUQrRCxZQUFVLENBQUNDLENBQUQsRUFBSTtBQUNWQSxLQUFDLENBQUNDLGVBQUY7QUFDQSxVQUFNQyxFQUFFLEdBQUdGLENBQUMsQ0FBQ0csTUFBRixDQUFTQyxPQUFULENBQWlCLGtCQUFqQixFQUFxQ0MsUUFBckMsQ0FBOEMsQ0FBOUMsQ0FBWDtBQUNBLFVBQU1DLElBQUksR0FBR0MsQ0FBQyxDQUFFLG1GQUFGLENBQWQ7QUFDQUQsUUFBSSxDQUFDRSxHQUFMLENBQVM7QUFDTEMsU0FBRyxFQUFFVCxDQUFDLENBQUNVLEtBQUYsR0FBVUgsQ0FBQyxDQUFDLDZCQUFELENBQUQsQ0FBaUNJLE1BQWpDLEdBQTBDRixHQURwRDtBQUVMRyxVQUFJLEVBQUVaLENBQUMsQ0FBQ2EsS0FBRixHQUFVTixDQUFDLENBQUMsNkJBQUQsQ0FBRCxDQUFpQ0ksTUFBakMsR0FBMENDO0FBRnJELEtBQVQ7QUFJQUwsS0FBQyxDQUFDTCxFQUFELENBQUQsQ0FBTVksTUFBTixHQUFlQyxNQUFmLENBQXNCVCxJQUF0QjtBQUNBQSxRQUFJLENBQUNyQixFQUFMLENBQVEsT0FBUixFQUFrQitCLEtBQUQsSUFBVztBQUN4QkEsV0FBSyxDQUFDQyxjQUFOO0FBQ0FELFdBQUssQ0FBQ2YsZUFBTjtBQUNBTSxPQUFDLENBQUNMLEVBQUQsQ0FBRCxDQUFNVixNQUFOO0FBQ0FWLHFEQUFXLENBQUNvQyxjQUFaLENBQTJCWCxDQUFDLENBQUNMLEVBQUQsQ0FBRCxDQUFNaUIsSUFBTixDQUFXLE9BQVgsQ0FBM0I7QUFDQSxXQUFLQyxlQUFMO0FBQ0FiLE9BQUMsQ0FBQy9CLFFBQUQsQ0FBRCxDQUFZVyxHQUFaLENBQWdCLHFCQUFoQjtBQUNILEtBUEQ7QUFRQW9CLEtBQUMsQ0FBQy9CLFFBQUQsQ0FBRCxDQUFZUyxFQUFaLENBQWUscUJBQWYsRUFBc0MsVUFBUytCLEtBQVQsRUFBZ0I7QUFDbEQsVUFBSUEsS0FBSyxDQUFDYixNQUFOLENBQWFyRCxFQUFiLElBQW1CLFlBQXZCLEVBQXFDO0FBQ3JDeUQsT0FBQyxDQUFDLGFBQUQsQ0FBRCxDQUFpQmYsTUFBakI7QUFDQWUsT0FBQyxDQUFDL0IsUUFBRCxDQUFELENBQVlXLEdBQVosQ0FBZ0IscUJBQWhCO0FBQ0gsS0FKRDtBQUtIOztBQUVENUIsWUFBVSxDQUFDeUMsQ0FBRCxFQUFJO0FBQ1YsUUFBSWxELEVBQUUsR0FBRyxPQUFPa0QsQ0FBUCxJQUFhLFFBQWIsR0FBd0JBLENBQXhCLEdBQTRCQSxDQUFDLENBQUNHLE1BQUYsQ0FBU3JELEVBQTlDO0FBQ0EsUUFBSUEsRUFBRSxJQUFJLGVBQU4sSUFBeUIsS0FBS0UsVUFBbEMsRUFBOENGLEVBQUUsR0FBRyxrQkFBTDtBQUM5QyxVQUFNdUUsTUFBTSxHQUFHZCxDQUFDLENBQUMsZ0JBQUQsQ0FBaEI7QUFDQSxVQUFNZSxHQUFHLEdBQUdmLENBQUMsQ0FBQyxtQkFBRCxDQUFiO0FBQ0EsVUFBTWdCLE1BQU0sR0FBR2hCLENBQUMsQ0FBQyxnQkFBRCxDQUFoQjtBQUNBYyxVQUFNLENBQUNHLFdBQVAsQ0FBbUIsUUFBbkI7QUFDQUYsT0FBRyxDQUFDRSxXQUFKLENBQWdCLFFBQWhCO0FBQ0FELFVBQU0sQ0FBQ0MsV0FBUCxDQUFtQixRQUFuQjtBQUVBakIsS0FBQyxDQUFDLHFCQUFELENBQUQsQ0FBeUJrQixJQUF6QjtBQUNBbEIsS0FBQyxDQUFDLDZCQUFELENBQUQsQ0FBaUNrQixJQUFqQztBQUNBbEIsS0FBQyxDQUFDLDBCQUFELENBQUQsQ0FBOEJrQixJQUE5Qjs7QUFFQSxZQUFRM0UsRUFBUjtBQUNJLFdBQUssZUFBTDtBQUNJdUUsY0FBTSxDQUFDSyxRQUFQLENBQWdCLFFBQWhCO0FBQ0FuQixTQUFDLENBQUMsMEJBQUQsQ0FBRCxDQUE4Qm9CLElBQTlCO0FBQ0E7O0FBQ0osV0FBSyxrQkFBTDtBQUNJTCxXQUFHLENBQUNJLFFBQUosQ0FBYSxRQUFiO0FBQ0FuQixTQUFDLENBQUMsNkJBQUQsQ0FBRCxDQUFpQ29CLElBQWpDO0FBQ0E7O0FBQ0osV0FBSyxlQUFMO0FBQ0lKLGNBQU0sQ0FBQ0csUUFBUCxDQUFnQixRQUFoQjtBQUNBbkIsU0FBQyxDQUFDLHFCQUFELENBQUQsQ0FBeUJvQixJQUF6QjtBQUNBcEIsU0FBQyxDQUFDLDJCQUFELENBQUQsQ0FBK0JxQixLQUEvQjtBQUNBO0FBYlI7O0FBZUEsUUFBSTlFLEVBQUosRUFBUSxLQUFLSyxPQUFMLEdBQWVMLEVBQWY7QUFDWDs7QUFFRG9CLFNBQU8sQ0FBQ0QsUUFBRCxFQUFXO0FBQ2QsUUFBSSxDQUFDQSxRQUFRLENBQUM0RCxVQUFULENBQW9CQyxNQUFyQixJQUErQixFQUFFN0QsUUFBUSxDQUFDNEQsVUFBVCxDQUFvQixDQUFwQixhQUFrQ0UsT0FBcEMsQ0FBbkMsRUFBaUY7QUFDakYsVUFBTUMsSUFBSSxHQUFHL0QsUUFBUSxDQUFDNEQsVUFBVCxDQUFvQixDQUFwQixDQUFiO0FBQ0EsUUFBSSxDQUFDRyxJQUFJLENBQUMxQyxTQUFMLENBQWUyQyxRQUFmLENBQXdCLGVBQXhCLENBQUQsSUFBNkNELElBQUksQ0FBQzFDLFNBQUwsQ0FBZTJDLFFBQWYsQ0FBd0IsbUJBQXhCLENBQTdDLElBQTZGLENBQUNELElBQUksQ0FBQ0Usc0JBQUwsQ0FBNEIsb0JBQTVCLEVBQWtESixNQUFwSixFQUE0SjtBQUU1SixVQUFNOUIsQ0FBQyxHQUFHTyxDQUFDLENBQUN5QixJQUFELENBQVg7QUFDQSxRQUFJLEtBQUtoRixVQUFULEVBQXFCZ0QsQ0FBQyxDQUFDMEIsUUFBRixDQUFXLGVBQVgsRUFBckIsS0FDSzFCLENBQUMsQ0FBQ3dCLFdBQUYsQ0FBYyxlQUFkO0FBRUx4QixLQUFDLENBQUNtQyxPQUFGLENBQVUsS0FBSy9FLFNBQWY7QUFDQTRDLEtBQUMsQ0FBQ2UsTUFBRixDQUFTLEtBQUt0RCxXQUFkO0FBQ0F1QyxLQUFDLENBQUNlLE1BQUYsQ0FBUyxLQUFLbkQsV0FBZDtBQUVBLFNBQUtMLFVBQUwsQ0FBZ0IsS0FBS0osT0FBckI7QUFDSDs7QUFFRGtCLG9CQUFrQixHQUFHO0FBQ2pCLFdBQU8sS0FBS1gsZ0JBQUwsQ0FBc0IwRSxVQUE3QixFQUF5QyxLQUFLMUUsZ0JBQUwsQ0FBc0IwRSxVQUF0QixDQUFpQzVDLE1BQWpDOztBQUN6QyxTQUFLLE1BQU14RCxLQUFYLElBQW9COEMsK0NBQVcsQ0FBQ3VELFdBQVosQ0FBd0IsY0FBeEIsQ0FBcEIsRUFBNkQ7QUFDekQsVUFBSSxDQUFDdkQsK0NBQVcsQ0FBQ3VELFdBQVosQ0FBd0IsY0FBeEIsRUFBd0NDLGNBQXhDLENBQXVEdEcsS0FBdkQsQ0FBTCxFQUFvRTtBQUNwRSxZQUFNQyxHQUFHLEdBQUc2QywrQ0FBVyxDQUFDdUQsV0FBWixDQUF3QixjQUF4QixFQUF3Q3JHLEtBQXhDLENBQVo7QUFDQSxZQUFNdUcsWUFBWSxHQUFHeEcsU0FBUyxDQUFDQyxLQUFELEVBQVFDLEdBQVIsRUFBYTtBQUFDRyxlQUFPLEVBQUUsS0FBS3FELFdBQUwsQ0FBaUJqQyxJQUFqQixDQUFzQixJQUF0QixFQUE0QnhCLEtBQTVCO0FBQVYsT0FBYixDQUE5QjtBQUNBLFdBQUswQixnQkFBTCxDQUFzQnFELE1BQXRCLENBQTZCd0IsWUFBN0I7QUFDSDtBQUNKOztBQUVEbkIsaUJBQWUsR0FBRztBQUNkLFdBQU8sS0FBS3ZELGdCQUFMLENBQXNCdUUsVUFBN0IsRUFBeUMsS0FBS3ZFLGdCQUFMLENBQXNCdUUsVUFBdEIsQ0FBaUM1QyxNQUFqQzs7QUFDekMsU0FBSyxNQUFNeEQsS0FBWCxJQUFvQjhDLCtDQUFXLENBQUMwRCxTQUFoQyxFQUEyQztBQUN2QyxZQUFNdkcsR0FBRyxHQUFHNkMsK0NBQVcsQ0FBQzBELFNBQVosQ0FBc0J4RyxLQUF0QixDQUFaO0FBQ0EsWUFBTXVHLFlBQVksR0FBR3hHLFNBQVMsQ0FBQ0MsS0FBRCxFQUFRQyxHQUFSLEVBQWE7QUFBQ0csZUFBTyxFQUFFLEtBQUtxRCxXQUFMLENBQWlCakMsSUFBakIsQ0FBc0IsSUFBdEIsRUFBNEJ4QixLQUE1QixDQUFWO0FBQThDRyxxQkFBYSxFQUFFLEtBQUs0RCxVQUFMLENBQWdCdkMsSUFBaEIsQ0FBcUIsSUFBckI7QUFBN0QsT0FBYixDQUE5QjtBQUNBLFdBQUtLLGdCQUFMLENBQXNCa0QsTUFBdEIsQ0FBNkJ3QixZQUE3QjtBQUNIOztBQUNEekQsbURBQVcsQ0FBQzJELGFBQVo7QUFDSDs7QUF2SjhDLENBQXBDLEVBQWYiLCJmaWxlIjoiLi9zcmMvYnVpbHRpbnMvZW1vdGVtZW51LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1aWx0aW4gZnJvbSBcIi4uL3N0cnVjdHMvYnVpbHRpblwiO1xyXG5pbXBvcnQge1V0aWxpdGllcywgRXZlbnRzfSBmcm9tIFwibW9kdWxlc1wiO1xyXG5cclxuaW1wb3J0IEVtb3RlTW9kdWxlIGZyb20gXCIuL2Vtb3Rlc1wiO1xyXG5cclxuY29uc3QgaGVhZGVySFRNTCA9IGA8ZGl2IGlkPVwiYmQtcWVtXCI+XHJcbiAgICA8YnV0dG9uIGNsYXNzPVwiYWN0aXZlXCIgaWQ9XCJiZC1xZW0tdHdpdGNoXCI+VHdpdGNoPC9idXR0b24+XHJcbiAgICA8YnV0dG9uIGlkPVwiYmQtcWVtLWZhdm91cml0ZVwiPkZhdm91cml0ZTwvYnV0dG9uPlxyXG4gICAgPGJ1dHRvbiBpZD1cImJkLXFlbS1lbW9qaXNcIj5FbW9qaXM8L2J1dHRvbmQ+XHJcbjwvZGl2PmA7XHJcblxyXG5jb25zdCB0d2l0Y2hFbW90ZUhUTUwgPSBgPGRpdiBpZD1cImJkLXFlbS10d2l0Y2gtY29udGFpbmVyXCI+XHJcbiAgICA8ZGl2IGNsYXNzPVwic2Nyb2xsZXItd3JhcCBzY3JvbGxlcldyYXAtMmxKRWtkIGZhZGVcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwic2Nyb2xsZXIgc2Nyb2xsZXItMkZLRlBHXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJlbW90ZS1tZW51LWlubmVyXCI+XHJcblxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG48L2Rpdj5gO1xyXG5cclxuY29uc3QgZmF2b3JpdGVzSFRNTCA9IGA8ZGl2IGlkPVwiYmQtcWVtLWZhdm91cml0ZS1jb250YWluZXJcIj5cclxuICAgIDxkaXYgY2xhc3M9XCJzY3JvbGxlci13cmFwIHNjcm9sbGVyV3JhcC0ybEpFa2QgZmFkZVwiPlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzY3JvbGxlciBzY3JvbGxlci0yRktGUEdcIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImVtb3RlLW1lbnUtaW5uZXJcIj5cclxuXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbjwvZGl2PmA7XHJcblxyXG5jb25zdCBtYWtlRW1vdGUgPSAoZW1vdGUsIHVybCwgb3B0aW9ucyA9IHt9KSA9PiB7XHJcbiAgICBjb25zdCB7b25Db250ZXh0TWVudSwgb25DbGlja30gPSBvcHRpb25zO1xyXG4gICAgY29uc3QgZW1vdGVDb250YWluZXIgPSBVdGlsaXRpZXMucGFyc2VIVE1MKGA8ZGl2IGNsYXNzPVwiZW1vdGUtY29udGFpbmVyXCI+XHJcbiAgICAgICAgPGltZyBjbGFzcz1cImVtb3RlLWljb25cIiBhbHQ9XCIke2Vtb3RlfVwiIHNyYz1cIiR7dXJsfVwiIHRpdGxlPVwiJHtlbW90ZX1cIj5cclxuICAgIDwvZGl2PmApO1xyXG4gICAgaWYgKG9uQ29udGV4dE1lbnUpIGVtb3RlQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjb250ZXh0bWVudVwiLCBvbkNvbnRleHRNZW51KTtcclxuICAgIGVtb3RlQ29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBvbkNsaWNrKTtcclxuICAgIHJldHVybiBlbW90ZUNvbnRhaW5lcjtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBFbW90ZU1lbnUgZXh0ZW5kcyBCdWlsdGluIHtcclxuICAgIGdldCBuYW1lKCkge3JldHVybiBcIkVtb3RlTWVudVwiO31cclxuICAgIGdldCBjb2xsZWN0aW9uKCkge3JldHVybiBcImVtb3Rlc1wiO31cclxuICAgIGdldCBjYXRlZ29yeSgpIHtyZXR1cm4gXCJnZW5lcmFsXCI7fVxyXG4gICAgZ2V0IGlkKCkge3JldHVybiBcImVtb3RlTWVudVwiO31cclxuICAgIGdldCBoaWRlRW1vamlzSUQoKSB7cmV0dXJuIFwiaGlkZUVtb2ppTWVudVwiO31cclxuICAgIGdldCBoaWRlRW1vamlzKCkge3JldHVybiB0aGlzLmdldCh0aGlzLmhpZGVFbW9qaXNJRCk7fVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5sYXN0VGFiID0gXCJiZC1xZW0tZW1vamlzXCI7XHJcblxyXG4gICAgICAgIHRoaXMucW1lSGVhZGVyID0gVXRpbGl0aWVzLnBhcnNlSFRNTChoZWFkZXJIVE1MKTtcclxuICAgICAgICBmb3IgKGNvbnN0IGJ1dHRvbiBvZiB0aGlzLnFtZUhlYWRlci5nZXRFbGVtZW50c0J5VGFnTmFtZShcImJ1dHRvblwiKSkgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnN3aXRjaE1lbnUuYmluZCh0aGlzKSk7XHJcblxyXG4gICAgICAgIHRoaXMudGVDb250YWluZXIgPSBVdGlsaXRpZXMucGFyc2VIVE1MKHR3aXRjaEVtb3RlSFRNTCk7XHJcbiAgICAgICAgdGhpcy50ZUNvbnRhaW5lcklubmVyID0gdGhpcy50ZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLmVtb3RlLW1lbnUtaW5uZXJcIik7XHJcblxyXG4gICAgICAgIHRoaXMuZmFDb250YWluZXIgPSBVdGlsaXRpZXMucGFyc2VIVE1MKGZhdm9yaXRlc0hUTUwpO1xyXG4gICAgICAgIHRoaXMuZmFDb250YWluZXJJbm5lciA9IHRoaXMuZmFDb250YWluZXIucXVlcnlTZWxlY3RvcihcIi5lbW90ZS1tZW51LWlubmVyXCIpO1xyXG5cclxuICAgICAgICB0aGlzLm9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIobXV0YXRpb25zID0+IHtmb3IgKGNvbnN0IG11dGF0aW9uIG9mIG11dGF0aW9ucykgdGhpcy5vYnNlcnZlKG11dGF0aW9uKTt9KTtcclxuICAgICAgICB0aGlzLmVuYWJsZUhpZGVFbW9qaXMgPSB0aGlzLmVuYWJsZUhpZGVFbW9qaXMuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLmRpc2FibGVIaWRlRW1vamlzID0gdGhpcy5kaXNhYmxlSGlkZUVtb2ppcy5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMudXBkYXRlVHdpdGNoRW1vdGVzID0gdGhpcy51cGRhdGVUd2l0Y2hFbW90ZXMuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBlbmFibGVkKCkge1xyXG4gICAgICAgIHRoaXMubG9nKFwiU3RhcnRpbmcgdG8gb2JzZXJ2ZVwiKTtcclxuICAgICAgICB0aGlzLm9ic2VydmVyLm9ic2VydmUoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHAtbW91bnRcIiksIHtcclxuICAgICAgICAgICAgY2hpbGRMaXN0OiB0cnVlLFxyXG4gICAgICAgICAgICBzdWJ0cmVlOiB0cnVlXHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5oaWRlRW1vamlDYW5jZWwgPSB0aGlzLnJlZ2lzdGVyU2V0dGluZyh0aGlzLmhpZGVFbW9qaXNJRCwgdGhpcy5lbmFibGVIaWRlRW1vamlzLCB0aGlzLmRpc2FibGVIaWRlRW1vamlzKTtcclxuICAgICAgICBpZiAodGhpcy5oaWRlRW1vamlzKSB0aGlzLmVuYWJsZUhpZGVFbW9qaXMoKTtcclxuICAgICAgICBpZiAoRW1vdGVNb2R1bGUuZW1vdGVzTG9hZGVkKSB0aGlzLnVwZGF0ZVR3aXRjaEVtb3RlcygpO1xyXG4gICAgICAgIEV2ZW50cy5vbihcImVtb3Rlcy1sb2FkZWRcIiwgdGhpcy51cGRhdGVUd2l0Y2hFbW90ZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVkKCkge1xyXG4gICAgICAgIEV2ZW50cy5vZmYoXCJlbW90ZXMtbG9hZGVkXCIsIHRoaXMudXBkYXRlVHdpdGNoRW1vdGVzKTtcclxuICAgICAgICB0aGlzLm9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICB0aGlzLmRpc2FibGVIaWRlRW1vamlzKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuaGlkZUVtb2ppQ2FuY2VsKSB0aGlzLmhpZGVFbW9qaUNhbmNlbCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGVuYWJsZUhpZGVFbW9qaXMoKSB7XHJcbiAgICAgICAgY29uc3QgcGlja2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbW9qaVBpY2tlci0zbTFTLWpcIik7XHJcbiAgICAgICAgaWYgKHBpY2tlcikgcGlja2VyLmNsYXNzTGlzdC5hZGQoXCJiZC1xbWUtaGlkZGVuXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVIaWRlRW1vamlzKCkge1xyXG4gICAgICAgIGNvbnN0IHBpY2tlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZW1vamlQaWNrZXItM20xUy1qXCIpO1xyXG4gICAgICAgIGlmIChwaWNrZXIpIHBpY2tlci5jbGFzc0xpc3QucmVtb3ZlKFwiYmQtcW1lLWhpZGRlblwiKTtcclxuICAgIH1cclxuXHJcbiAgICBpbnNlcnRFbW90ZShlbW90ZSkge1xyXG4gICAgICAgIGNvbnN0IHRhID0gVXRpbGl0aWVzLmdldFRleHRBcmVhKCk7XHJcbiAgICAgICAgVXRpbGl0aWVzLmluc2VydFRleHQodGFbMF0sIHRhLnZhbCgpLnNsaWNlKC0xKSA9PSBcIiBcIiA/IHRhLnZhbCgpICsgZW1vdGUgOiB0YS52YWwoKSArIFwiIFwiICsgZW1vdGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGZhdkNvbnRleHQoZSkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgY29uc3QgZW0gPSBlLnRhcmdldC5jbG9zZXN0KFwiLmVtb3RlLWNvbnRhaW5lclwiKS5jaGlsZHJlblswXTtcclxuICAgICAgICBjb25zdCBtZW51ID0gJChgPGRpdiBpZD1cInJlbW92ZW1lbnVcIiBjbGFzcz1cImJkLWNvbnRleHQtbWVudSBjb250ZXh0LW1lbnUgdGhlbWUtZGFya1wiPlJlbW92ZTwvZGl2PmApO1xyXG4gICAgICAgIG1lbnUuY3NzKHtcclxuICAgICAgICAgICAgdG9wOiBlLnBhZ2VZIC0gJChcIiNiZC1xZW0tZmF2b3VyaXRlLWNvbnRhaW5lclwiKS5vZmZzZXQoKS50b3AsXHJcbiAgICAgICAgICAgIGxlZnQ6IGUucGFnZVggLSAkKFwiI2JkLXFlbS1mYXZvdXJpdGUtY29udGFpbmVyXCIpLm9mZnNldCgpLmxlZnRcclxuICAgICAgICB9KTtcclxuICAgICAgICAkKGVtKS5wYXJlbnQoKS5hcHBlbmQobWVudSk7XHJcbiAgICAgICAgbWVudS5vbihcImNsaWNrXCIsIChldmVudCkgPT4ge1xyXG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICAgICAgJChlbSkucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIEVtb3RlTW9kdWxlLnJlbW92ZUZhdm9yaXRlKCQoZW0pLmF0dHIoXCJ0aXRsZVwiKSk7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlRmF2b3JpdGVzKCk7XHJcbiAgICAgICAgICAgICQoZG9jdW1lbnQpLm9mZihcIm1vdXNlZG93bi5lbW90ZW1lbnVcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgJChkb2N1bWVudCkub24oXCJtb3VzZWRvd24uZW1vdGVtZW51XCIsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgICAgIGlmIChldmVudC50YXJnZXQuaWQgPT0gXCJyZW1vdmVtZW51XCIpIHJldHVybjtcclxuICAgICAgICAgICAgJChcIiNyZW1vdmVtZW51XCIpLnJlbW92ZSgpO1xyXG4gICAgICAgICAgICAkKGRvY3VtZW50KS5vZmYoXCJtb3VzZWRvd24uZW1vdGVtZW51XCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHN3aXRjaE1lbnUoZSkge1xyXG4gICAgICAgIGxldCBpZCA9IHR5cGVvZihlKSA9PSBcInN0cmluZ1wiID8gZSA6IGUudGFyZ2V0LmlkO1xyXG4gICAgICAgIGlmIChpZCA9PSBcImJkLXFlbS1lbW9qaXNcIiAmJiB0aGlzLmhpZGVFbW9qaXMpIGlkID0gXCJiZC1xZW0tZmF2b3VyaXRlXCI7XHJcbiAgICAgICAgY29uc3QgdHdpdGNoID0gJChcIiNiZC1xZW0tdHdpdGNoXCIpO1xyXG4gICAgICAgIGNvbnN0IGZhdiA9ICQoXCIjYmQtcWVtLWZhdm91cml0ZVwiKTtcclxuICAgICAgICBjb25zdCBlbW9qaXMgPSAkKFwiI2JkLXFlbS1lbW9qaXNcIik7XHJcbiAgICAgICAgdHdpdGNoLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgIGZhdi5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICBlbW9qaXMucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIik7XHJcblxyXG4gICAgICAgICQoXCIuZW1vamlQaWNrZXItM20xUy1qXCIpLmhpZGUoKTtcclxuICAgICAgICAkKFwiI2JkLXFlbS1mYXZvdXJpdGUtY29udGFpbmVyXCIpLmhpZGUoKTtcclxuICAgICAgICAkKFwiI2JkLXFlbS10d2l0Y2gtY29udGFpbmVyXCIpLmhpZGUoKTtcclxuXHJcbiAgICAgICAgc3dpdGNoIChpZCkge1xyXG4gICAgICAgICAgICBjYXNlIFwiYmQtcWVtLXR3aXRjaFwiOlxyXG4gICAgICAgICAgICAgICAgdHdpdGNoLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xyXG4gICAgICAgICAgICAgICAgJChcIiNiZC1xZW0tdHdpdGNoLWNvbnRhaW5lclwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcImJkLXFlbS1mYXZvdXJpdGVcIjpcclxuICAgICAgICAgICAgICAgIGZhdi5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgICAgICQoXCIjYmQtcWVtLWZhdm91cml0ZS1jb250YWluZXJcIikuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJiZC1xZW0tZW1vamlzXCI6XHJcbiAgICAgICAgICAgICAgICBlbW9qaXMuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmVtb2ppUGlja2VyLTNtMVMtalwiKS5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAkKFwiLmVtb2ppUGlja2VyLTNtMVMtaiBpbnB1dFwiKS5mb2N1cygpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChpZCkgdGhpcy5sYXN0VGFiID0gaWQ7XHJcbiAgICB9XHJcblxyXG4gICAgb2JzZXJ2ZShtdXRhdGlvbikge1xyXG4gICAgICAgIGlmICghbXV0YXRpb24uYWRkZWROb2Rlcy5sZW5ndGggfHwgIShtdXRhdGlvbi5hZGRlZE5vZGVzWzBdIGluc3RhbmNlb2YgRWxlbWVudCkpIHJldHVybjtcclxuICAgICAgICBjb25zdCBub2RlID0gbXV0YXRpb24uYWRkZWROb2Rlc1swXTtcclxuICAgICAgICBpZiAoIW5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wb3V0LTNzVk1YelwiKSB8fCBub2RlLmNsYXNzTGlzdC5jb250YWlucyhcInBvcG91dExlZnQtMzBXbXJEXCIpIHx8ICFub2RlLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJlbW9qaVBpY2tlci0zbTFTLWpcIikubGVuZ3RoKSByZXR1cm47XHJcblxyXG4gICAgICAgIGNvbnN0IGUgPSAkKG5vZGUpO1xyXG4gICAgICAgIGlmICh0aGlzLmhpZGVFbW9qaXMpIGUuYWRkQ2xhc3MoXCJiZC1xbWUtaGlkZGVuXCIpO1xyXG4gICAgICAgIGVsc2UgZS5yZW1vdmVDbGFzcyhcImJkLXFtZS1oaWRkZW5cIik7XHJcblxyXG4gICAgICAgIGUucHJlcGVuZCh0aGlzLnFtZUhlYWRlcik7XHJcbiAgICAgICAgZS5hcHBlbmQodGhpcy50ZUNvbnRhaW5lcik7XHJcbiAgICAgICAgZS5hcHBlbmQodGhpcy5mYUNvbnRhaW5lcik7XHJcblxyXG4gICAgICAgIHRoaXMuc3dpdGNoTWVudSh0aGlzLmxhc3RUYWIpO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVR3aXRjaEVtb3RlcygpIHtcclxuICAgICAgICB3aGlsZSAodGhpcy50ZUNvbnRhaW5lcklubmVyLmZpcnN0Q2hpbGQpIHRoaXMudGVDb250YWluZXJJbm5lci5maXJzdENoaWxkLnJlbW92ZSgpO1xyXG4gICAgICAgIGZvciAoY29uc3QgZW1vdGUgaW4gRW1vdGVNb2R1bGUuZ2V0Q2F0ZWdvcnkoXCJUd2l0Y2hHbG9iYWxcIikpIHtcclxuICAgICAgICAgICAgaWYgKCFFbW90ZU1vZHVsZS5nZXRDYXRlZ29yeShcIlR3aXRjaEdsb2JhbFwiKS5oYXNPd25Qcm9wZXJ0eShlbW90ZSkpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICBjb25zdCB1cmwgPSBFbW90ZU1vZHVsZS5nZXRDYXRlZ29yeShcIlR3aXRjaEdsb2JhbFwiKVtlbW90ZV07XHJcbiAgICAgICAgICAgIGNvbnN0IGVtb3RlRWxlbWVudCA9IG1ha2VFbW90ZShlbW90ZSwgdXJsLCB7b25DbGljazogdGhpcy5pbnNlcnRFbW90ZS5iaW5kKHRoaXMsIGVtb3RlKX0pO1xyXG4gICAgICAgICAgICB0aGlzLnRlQ29udGFpbmVySW5uZXIuYXBwZW5kKGVtb3RlRWxlbWVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZUZhdm9yaXRlcygpIHtcclxuICAgICAgICB3aGlsZSAodGhpcy5mYUNvbnRhaW5lcklubmVyLmZpcnN0Q2hpbGQpIHRoaXMuZmFDb250YWluZXJJbm5lci5maXJzdENoaWxkLnJlbW92ZSgpO1xyXG4gICAgICAgIGZvciAoY29uc3QgZW1vdGUgaW4gRW1vdGVNb2R1bGUuZmF2b3JpdGVzKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHVybCA9IEVtb3RlTW9kdWxlLmZhdm9yaXRlc1tlbW90ZV07XHJcbiAgICAgICAgICAgIGNvbnN0IGVtb3RlRWxlbWVudCA9IG1ha2VFbW90ZShlbW90ZSwgdXJsLCB7b25DbGljazogdGhpcy5pbnNlcnRFbW90ZS5iaW5kKHRoaXMsIGVtb3RlKSwgb25Db250ZXh0TWVudTogdGhpcy5mYXZDb250ZXh0LmJpbmQodGhpcyl9KTtcclxuICAgICAgICAgICAgdGhpcy5mYUNvbnRhaW5lcklubmVyLmFwcGVuZChlbW90ZUVsZW1lbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBFbW90ZU1vZHVsZS5zYXZlRmF2b3JpdGVzKCk7XHJcbiAgICB9XHJcblxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/builtins/emotemenu.js\n");

/***/ }),

/***/ "./src/builtins/emotes.js":
/*!********************************!*\
  !*** ./src/builtins/emotes.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _ui_emote__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../ui/emote */ \"./src/ui/emote.js\");\n/* harmony import */ var _ui_toasts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/toasts */ \"./src/ui/toasts.js\");\n/* harmony import */ var _structs_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../structs/string */ \"./src/structs/string.js\");\n\n\n\n\n\n\n\nconst request = __webpack_require__(/*! request */ \"request\"); // const fs = require(\"fs\");\n\n\nconst EmoteURLs = {\n  TwitchGlobal: new _structs_string__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`https://static-cdn.jtvnw.net/emoticons/v1/{{id}}/1.0`),\n  TwitchSubscriber: new _structs_string__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`https://static-cdn.jtvnw.net/emoticons/v1/{{id}}/1.0`),\n  FrankerFaceZ: new _structs_string__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`https://cdn.frankerfacez.com/emoticon/{{id}}/1`),\n  BTTV: new _structs_string__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`https://cdn.betterttv.net/emote/{{id}}/1x`),\n  BTTV2: new _structs_string__WEBPACK_IMPORTED_MODULE_5__[\"default\"](`https://cdn.betterttv.net/emote/{{id}}/1x`)\n};\nconst EmoteMetaInfo = {\n  TwitchGlobal: {},\n  TwitchSubscriber: {},\n  BTTV: {},\n  FrankerFaceZ: {},\n  BTTV2: {}\n};\nconst Emotes = {\n  TwitchGlobal: {},\n  TwitchSubscriber: {},\n  BTTV: {},\n  FrankerFaceZ: {},\n  BTTV2: {}\n};\nconst bdEmoteSettingIDs = {\n  TwitchGlobal: \"twitch\",\n  TwitchSubscriber: \"twitch\",\n  BTTV: \"bttv\",\n  FrankerFaceZ: \"ffz\",\n  BTTV2: \"bttv\"\n};\nconst blacklist = [];\nconst overrides = [\"twitch\", \"bttv\", \"ffz\"];\nconst modifiers = [\"flip\", \"spin\", \"pulse\", \"spin2\", \"spin3\", \"1spin\", \"2spin\", \"3spin\", \"tr\", \"bl\", \"br\", \"shake\", \"shake2\", \"shake3\", \"flap\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class EmoteModule extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"Emotes\";\n  }\n\n  get collection() {\n    return \"settings\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get id() {\n    return \"emotes\";\n  }\n\n  get categories() {\n    return Object.keys(bdEmoteSettingIDs).filter(k => this.isCategoryEnabled(bdEmoteSettingIDs[k]));\n  }\n\n  get shouldDownload() {\n    return modules__WEBPACK_IMPORTED_MODULE_2__[\"Settings\"].get(\"emotes\", this.category, \"download\");\n  }\n\n  isCategoryEnabled(id) {\n    return super.get(\"emotes\", \"categories\", id);\n  }\n\n  get(id) {\n    return super.get(\"emotes\", \"general\", id);\n  }\n\n  get MessageContentComponent() {\n    return modules__WEBPACK_IMPORTED_MODULE_2__[\"WebpackModules\"].getModule(m => m.defaultProps && m.defaultProps.hasOwnProperty(\"disableButtons\"));\n  }\n\n  get Emotes() {\n    return Emotes;\n  }\n\n  get TwitchGlobal() {\n    return Emotes.TwitchGlobal;\n  }\n\n  get TwitchSubscriber() {\n    return Emotes.TwitchSubscriber;\n  }\n\n  get BTTV() {\n    return Emotes.BTTV;\n  }\n\n  get FrankerFaceZ() {\n    return Emotes.FrankerFaceZ;\n  }\n\n  get BTTV2() {\n    return Emotes.BTTV2;\n  }\n\n  get blacklist() {\n    return blacklist;\n  }\n\n  get favorites() {\n    return this.favoriteEmotes;\n  }\n\n  getCategory(category) {\n    return Emotes[category];\n  }\n\n  getRemoteFile(category) {\n    return new _structs_string__WEBPACK_IMPORTED_MODULE_5__[\"default\"](modules__WEBPACK_IMPORTED_MODULE_2__[\"Utilities\"].repoUrl(`data/emotes/${category.toLowerCase()}.json`));\n  }\n\n  initialize() {\n    super.initialize();\n    this.favoriteEmotes = {};\n    const fe = modules__WEBPACK_IMPORTED_MODULE_2__[\"DataStore\"].getBDData(\"bdfavemotes\");\n    if (fe !== \"\" && fe !== null) this.favoriteEmotes = JSON.parse(window.atob(fe));\n    this.saveFavorites();\n    this.addFavorite = this.addFavorite.bind(this);\n    this.removeFavorite = this.removeFavorite.bind(this); // EmoteConfig;\n    // emoteCollection.button = {title: \"Clear Emote Cache\", onClick: () => { this.clearEmoteData(); this.loadEmoteData(EmoteInfo); }};\n  }\n\n  async enabled() {\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"Settings\"].registerCollection(\"emotes\", \"Emotes\", data__WEBPACK_IMPORTED_MODULE_1__[\"EmoteConfig\"], {\n      title: modules__WEBPACK_IMPORTED_MODULE_2__[\"Strings\"].Emotes.clearEmotes,\n      onClick: () => {\n        this.clearEmoteData();\n        this.loadEmoteData();\n      }\n    }); // Disable emote module for now because it's annoying and slow\n\n    await this.getBlacklist();\n    await this.loadEmoteData();\n\n    while (!this.MessageContentComponent) await new Promise(resolve => setTimeout(resolve, 100));\n\n    this.patchMessageContent();\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"Events\"].on(\"emotes-favorite-added\", this.addFavorite);\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"Events\"].on(\"emotes-favorite-removed\", this.removeFavorite);\n  }\n\n  disabled() {\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"Events\"].off(\"emotes-favorite-added\", this.addFavorite);\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"Events\"].off(\"emotes-favorite-removed\", this.removeFavorite);\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"Settings\"].removeCollection(\"emotes\");\n    this.emptyEmotes();\n    if (!this.cancelEmoteRender) return;\n    this.cancelEmoteRender();\n    delete this.cancelEmoteRender;\n  }\n\n  addFavorite(name, url) {\n    if (!this.favoriteEmotes.hasOwnProperty(name)) this.favoriteEmotes[name] = url;\n    this.saveFavorites();\n  }\n\n  removeFavorite(name) {\n    if (!this.favoriteEmotes.hasOwnProperty(name)) return;\n    delete this.favoriteEmotes[name];\n    this.saveFavorites();\n  }\n\n  isFavorite(name) {\n    return this.favoriteEmotes.hasOwnProperty(name);\n  }\n\n  saveFavorites() {\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"DataStore\"].setBDData(\"bdfavemotes\", window.btoa(JSON.stringify(this.favoriteEmotes)));\n  }\n\n  emptyEmotes() {\n    for (const cat in Emotes) Object.assign(Emotes, {\n      [cat]: {}\n    });\n  }\n\n  patchMessageContent() {\n    if (this.cancelEmoteRender) return;\n    this.cancelEmoteRender = this.after(this.MessageContentComponent.prototype, \"render\", (thisObj, args, retVal) => {\n      this.after(retVal.props, \"children\", (t, a, returnValue) => {\n        if (this.categories.length == 0) return;\n        const markup = returnValue.props.children[1];\n        if (!markup.props.children) return;\n        const nodes = markup.props.children[1];\n        if (!nodes || !nodes.length) return;\n\n        for (let n = 0; n < nodes.length; n++) {\n          const node = nodes[n];\n          if (typeof node !== \"string\") continue;\n          const words = node.split(/([^\\s]+)([\\s]|$)/g);\n\n          for (let c = 0, clen = this.categories.length; c < clen; c++) {\n            for (let w = 0, wlen = words.length; w < wlen; w++) {\n              const emote = words[w];\n              const emoteSplit = emote.split(\":\");\n              const emoteName = emoteSplit[0];\n              let emoteModifier = emoteSplit[1] ? emoteSplit[1] : \"\";\n              let emoteOverride = emoteModifier.slice(0);\n              if (emoteName.length < 4 || blacklist.includes(emoteName)) continue;\n              if (!modifiers.includes(emoteModifier) || !modules__WEBPACK_IMPORTED_MODULE_2__[\"Settings\"].get(this.category, \"general\", \"modifiers\")) emoteModifier = \"\";\n              if (!overrides.includes(emoteOverride)) emoteOverride = \"\";else emoteModifier = emoteOverride;\n              let current = this.categories[c];\n\n              if (emoteOverride === \"twitch\") {\n                if (Emotes.TwitchGlobal[emoteName]) current = \"TwitchGlobal\";else if (Emotes.TwitchSubscriber[emoteName]) current = \"TwitchSubscriber\";\n              } else if (emoteOverride === \"bttv\") {\n                if (Emotes.BTTV[emoteName]) current = \"BTTV\";else if (Emotes.BTTV2[emoteName]) current = \"BTTV2\";\n              } else if (emoteOverride === \"ffz\") {\n                if (Emotes.FrankerFaceZ[emoteName]) current = \"FrankerFaceZ\";\n              }\n\n              if (!Emotes[current][emoteName] || !modules__WEBPACK_IMPORTED_MODULE_2__[\"Settings\"].get(this.category, \"categories\", bdEmoteSettingIDs[current])) continue;\n              const results = nodes[n].match(new RegExp(`([\\\\s]|^)${modules__WEBPACK_IMPORTED_MODULE_2__[\"Utilities\"].escape(emoteModifier ? emoteName + \":\" + emoteModifier : emoteName)}([\\\\s]|$)`));\n              if (!results) continue;\n              const pre = nodes[n].substring(0, results.index + results[1].length);\n              const post = nodes[n].substring(results.index + results[0].length - results[2].length);\n              nodes[n] = pre;\n              const emoteComponent = modules__WEBPACK_IMPORTED_MODULE_2__[\"DiscordModules\"].React.createElement(_ui_emote__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                name: emoteName,\n                url: Emotes[current][emoteName],\n                modifier: emoteModifier,\n                isFavorite: this.isFavorite(emoteName)\n              });\n              nodes.splice(n + 1, 0, post);\n              nodes.splice(n + 1, 0, emoteComponent);\n            }\n          }\n        }\n\n        const onlyEmotes = nodes.every(r => {\n          if (typeof r == \"string\" && r.replace(/\\s*/, \"\") == \"\") return true;else if (r.type && r.type.name == \"BDEmote\") return true;else if (r.props && r.props.children && r.props.children.props && r.props.children.props.emojiName) return true;\n          return false;\n        });\n        if (!onlyEmotes) return;\n\n        for (const node of nodes) {\n          if (typeof node != \"object\") continue;\n          if (node.type.name == \"BDEmote\") node.props.jumboable = true;else if (node.props && node.props.children && node.props.children.props && node.props.children.props.emojiName) node.props.children.props.jumboable = true;\n        }\n      });\n    });\n  }\n\n  getBlacklist() {\n    return new Promise(resolve => {\n      request.get({\n        url: modules__WEBPACK_IMPORTED_MODULE_2__[\"Utilities\"].repoUrl(`data/emotes/blacklist.json`),\n        json: true\n      }, (err, resp, data) => {\n        if (err || resp.statusCode != 200) return resolve();\n        resolve(blacklist.push(...data));\n      });\n    });\n  }\n\n  isCacheValid(category) {\n    return new Promise(resolve => {\n      const etag = modules__WEBPACK_IMPORTED_MODULE_2__[\"DataStore\"].getCacheHash(\"emotes\", category);\n      if (!etag) return resolve(false);\n      request.head({\n        url: this.getRemoteFile(category),\n        headers: {\n          \"If-None-Match\": etag\n        }\n      }, (err, resp) => {\n        resolve(resp.statusCode == 304);\n      });\n    });\n  }\n\n  async loadEmoteData() {\n    this.emotesLoaded = false;\n\n    for (const category in Emotes) {\n      const exists = modules__WEBPACK_IMPORTED_MODULE_2__[\"DataStore\"].emotesExist(category);\n      const valid = await this.isCacheValid(category);\n      const useCache = valid || !valid && exists && !this.shouldDownload;\n      let data = null;\n\n      if (useCache) {\n        this.log(`Loading ${category} emotes from local cache.`);\n        const cachedData = modules__WEBPACK_IMPORTED_MODULE_2__[\"DataStore\"].getEmoteData(category);\n        const hasData = Object.keys(data).length > 0;\n        if (hasData) data = cachedData;\n      }\n\n      if (!data) data = await this.downloadEmotes(category);\n      Object.assign(Emotes[category], data);\n    } // Toasts.show(Strings.Emotes.downloading, {type: \"info\"});\n    // Toasts.show(Strings.Emotes.downloaded, {type: \"success\"});\n\n\n    this.emotesLoaded = true;\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"Events\"].dispatch(\"emotes-loaded\");\n  }\n\n  downloadEmotes(category) {\n    const url = this.getRemoteFile(category);\n    this.log(`Downloading ${category} from ${url}`);\n    const options = {\n      url: url,\n      timeout: 5000,\n      json: true\n    };\n    return new Promise(resolve => {\n      request.get(options, (error, response, parsedData) => {\n        if (error || response.statusCode != 200) {\n          this.stacktrace(`Could not download ${category} emotes.`, error);\n          return resolve({});\n        }\n\n        for (const emote in parsedData) {\n          if (emote.length < 4 || blacklist.includes(emote)) {\n            delete parsedData[emote];\n            continue;\n          }\n\n          parsedData[emote] = EmoteURLs[category].format({\n            id: parsedData[emote]\n          });\n        }\n\n        modules__WEBPACK_IMPORTED_MODULE_2__[\"DataStore\"].saveEmoteData(category, parsedData);\n        resolve(parsedData);\n        this.log(`Downloaded ${category}`);\n      });\n    });\n  }\n\n  clearEmoteData() {\n    const _fs = __webpack_require__(/*! fs */ \"fs\");\n\n    const emoteFile = \"emote_data.json\";\n    const file = data__WEBPACK_IMPORTED_MODULE_1__[\"Config\"].dataPath + emoteFile;\n\n    const exists = _fs.existsSync(file);\n\n    if (exists) _fs.unlinkSync(file);\n    modules__WEBPACK_IMPORTED_MODULE_2__[\"DataStore\"].setBDData(\"emoteCacheDate\", new Date().toJSON());\n\n    for (const category in Emotes) Object.assign(Emotes, {\n      [category]: {}\n    });\n  }\n\n}()); // (async () => {\n//     const emoteData = await new Promise(resolve => {\n//         const req = require(\"request\");\n//         req.get({url: \"https://twitchemotes.com/api_cache/v3/global.json\", json: true}, (err, resp, parsedData) => {\n//             for (const emote in parsedData) {\n//                 if (emote.length < 4 || window.bemotes.includes(emote)) {\n//                     delete parsedData[emote];\n//                     continue;\n//                 }\n//                 parsedData[emote] = parsedData[emote].id;\n//             }\n//             resolve(parsedData);\n//         });\n//     });\n//     const fs = require(\"fs\");\n//     fs.writeFileSync(\"Z:\\\\Programming\\\\BetterDiscordStuff\\\\BetterDiscordApp\\\\data\\\\emotes\\\\global.json\", JSON.stringify(emoteData));\n//     return emoteData;\n// })();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/builtins/emotes.js\n");

/***/ }),

/***/ "./src/builtins/minimalmode.js":
/*!*************************************!*\
  !*** ./src/builtins/minimalmode.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class MinimalMode extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"MinimalMode\";\n  }\n\n  get category() {\n    return \"appearance\";\n  }\n\n  get id() {\n    return \"minimalMode\";\n  }\n\n  get hideChannelsID() {\n    return \"hideChannels\";\n  }\n\n  get hideChannels() {\n    return this.get(this.hideChannelsID);\n  }\n\n  constructor() {\n    super();\n    this.enableHideChannels = this.enableHideChannels.bind(this);\n    this.disableHideChannels = this.disableHideChannels.bind(this);\n  }\n\n  enabled() {\n    document.body.classList.add(\"bd-minimal\");\n    if (this.hideChannels) this.enableHideChannels();\n    this.hideChannelCancel = this.registerSetting(this.hideChannelsID, this.enableHideChannels, this.disableHideChannels);\n  }\n\n  disabled() {\n    document.body.classList.remove(\"bd-minimal\");\n    if (this.hideChannels) this.disableHideChannels();\n    if (this.hideChannelCancel) this.hideChannelCancel();\n  }\n\n  enableHideChannels() {\n    document.body.classList.add(\"bd-minimal-chan\");\n  }\n\n  disableHideChannels() {\n    document.body.classList.remove(\"bd-minimal-chan\");\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL21pbmltYWxtb2RlLmpzPzgzMzgiXSwibmFtZXMiOlsiTWluaW1hbE1vZGUiLCJCdWlsdGluIiwibmFtZSIsImNhdGVnb3J5IiwiaWQiLCJoaWRlQ2hhbm5lbHNJRCIsImhpZGVDaGFubmVscyIsImdldCIsImNvbnN0cnVjdG9yIiwiZW5hYmxlSGlkZUNoYW5uZWxzIiwiYmluZCIsImRpc2FibGVIaWRlQ2hhbm5lbHMiLCJlbmFibGVkIiwiZG9jdW1lbnQiLCJib2R5IiwiY2xhc3NMaXN0IiwiYWRkIiwiaGlkZUNoYW5uZWxDYW5jZWwiLCJyZWdpc3RlclNldHRpbmciLCJkaXNhYmxlZCIsInJlbW92ZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBRWUsbUVBQUksTUFBTUEsV0FBTixTQUEwQkMsd0RBQTFCLENBQWtDO0FBQ2pELE1BQUlDLElBQUosR0FBVztBQUFDLFdBQU8sYUFBUDtBQUFzQjs7QUFDbEMsTUFBSUMsUUFBSixHQUFlO0FBQUMsV0FBTyxZQUFQO0FBQXFCOztBQUNyQyxNQUFJQyxFQUFKLEdBQVM7QUFBQyxXQUFPLGFBQVA7QUFBc0I7O0FBQ2hDLE1BQUlDLGNBQUosR0FBcUI7QUFBQyxXQUFPLGNBQVA7QUFBdUI7O0FBQzdDLE1BQUlDLFlBQUosR0FBbUI7QUFBQyxXQUFPLEtBQUtDLEdBQUwsQ0FBUyxLQUFLRixjQUFkLENBQVA7QUFBc0M7O0FBRTFERyxhQUFXLEdBQUc7QUFDVjtBQUNBLFNBQUtDLGtCQUFMLEdBQTBCLEtBQUtBLGtCQUFMLENBQXdCQyxJQUF4QixDQUE2QixJQUE3QixDQUExQjtBQUNBLFNBQUtDLG1CQUFMLEdBQTJCLEtBQUtBLG1CQUFMLENBQXlCRCxJQUF6QixDQUE4QixJQUE5QixDQUEzQjtBQUNIOztBQUVERSxTQUFPLEdBQUc7QUFDTkMsWUFBUSxDQUFDQyxJQUFULENBQWNDLFNBQWQsQ0FBd0JDLEdBQXhCLENBQTRCLFlBQTVCO0FBQ0EsUUFBSSxLQUFLVixZQUFULEVBQXVCLEtBQUtHLGtCQUFMO0FBQ3ZCLFNBQUtRLGlCQUFMLEdBQXlCLEtBQUtDLGVBQUwsQ0FBcUIsS0FBS2IsY0FBMUIsRUFBMEMsS0FBS0ksa0JBQS9DLEVBQW1FLEtBQUtFLG1CQUF4RSxDQUF6QjtBQUNIOztBQUVEUSxVQUFRLEdBQUc7QUFDUE4sWUFBUSxDQUFDQyxJQUFULENBQWNDLFNBQWQsQ0FBd0JLLE1BQXhCLENBQStCLFlBQS9CO0FBQ0EsUUFBSSxLQUFLZCxZQUFULEVBQXVCLEtBQUtLLG1CQUFMO0FBQ3ZCLFFBQUksS0FBS00saUJBQVQsRUFBNEIsS0FBS0EsaUJBQUw7QUFDL0I7O0FBRURSLG9CQUFrQixHQUFHO0FBQ2pCSSxZQUFRLENBQUNDLElBQVQsQ0FBY0MsU0FBZCxDQUF3QkMsR0FBeEIsQ0FBNEIsaUJBQTVCO0FBQ0g7O0FBRURMLHFCQUFtQixHQUFHO0FBQ2xCRSxZQUFRLENBQUNDLElBQVQsQ0FBY0MsU0FBZCxDQUF3QkssTUFBeEIsQ0FBK0IsaUJBQS9CO0FBQ0g7O0FBL0JnRCxDQUF0QyxFQUFmIiwiZmlsZSI6Ii4vc3JjL2J1aWx0aW5zL21pbmltYWxtb2RlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1aWx0aW4gZnJvbSBcIi4uL3N0cnVjdHMvYnVpbHRpblwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IGNsYXNzIE1pbmltYWxNb2RlIGV4dGVuZHMgQnVpbHRpbiB7XHJcbiAgICBnZXQgbmFtZSgpIHtyZXR1cm4gXCJNaW5pbWFsTW9kZVwiO31cclxuICAgIGdldCBjYXRlZ29yeSgpIHtyZXR1cm4gXCJhcHBlYXJhbmNlXCI7fVxyXG4gICAgZ2V0IGlkKCkge3JldHVybiBcIm1pbmltYWxNb2RlXCI7fVxyXG4gICAgZ2V0IGhpZGVDaGFubmVsc0lEKCkge3JldHVybiBcImhpZGVDaGFubmVsc1wiO31cclxuICAgIGdldCBoaWRlQ2hhbm5lbHMoKSB7cmV0dXJuIHRoaXMuZ2V0KHRoaXMuaGlkZUNoYW5uZWxzSUQpO31cclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuZW5hYmxlSGlkZUNoYW5uZWxzID0gdGhpcy5lbmFibGVIaWRlQ2hhbm5lbHMuYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLmRpc2FibGVIaWRlQ2hhbm5lbHMgPSB0aGlzLmRpc2FibGVIaWRlQ2hhbm5lbHMuYmluZCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBlbmFibGVkKCkge1xyXG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZChcImJkLW1pbmltYWxcIik7XHJcbiAgICAgICAgaWYgKHRoaXMuaGlkZUNoYW5uZWxzKSB0aGlzLmVuYWJsZUhpZGVDaGFubmVscygpO1xyXG4gICAgICAgIHRoaXMuaGlkZUNoYW5uZWxDYW5jZWwgPSB0aGlzLnJlZ2lzdGVyU2V0dGluZyh0aGlzLmhpZGVDaGFubmVsc0lELCB0aGlzLmVuYWJsZUhpZGVDaGFubmVscywgdGhpcy5kaXNhYmxlSGlkZUNoYW5uZWxzKTtcclxuICAgIH1cclxuXHJcbiAgICBkaXNhYmxlZCgpIHtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5yZW1vdmUoXCJiZC1taW5pbWFsXCIpO1xyXG4gICAgICAgIGlmICh0aGlzLmhpZGVDaGFubmVscykgdGhpcy5kaXNhYmxlSGlkZUNoYW5uZWxzKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuaGlkZUNoYW5uZWxDYW5jZWwpIHRoaXMuaGlkZUNoYW5uZWxDYW5jZWwoKTtcclxuICAgIH1cclxuXHJcbiAgICBlbmFibGVIaWRlQ2hhbm5lbHMoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuYWRkKFwiYmQtbWluaW1hbC1jaGFuXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVIaWRlQ2hhbm5lbHMoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKFwiYmQtbWluaW1hbC1jaGFuXCIpO1xyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/builtins/minimalmode.js\n");

/***/ }),

/***/ "./src/builtins/publicservers.js":
/*!***************************************!*\
  !*** ./src/builtins/publicservers.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _ui_publicservers_menu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ui/publicservers/menu */ \"./src/ui/publicservers/menu.js\");\n\n\n\nconst LayerStack = modules__WEBPACK_IMPORTED_MODULE_1__[\"WebpackModules\"].getByProps(\"pushLayer\");\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class PublicServers extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"PublicServers\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get id() {\n    return \"publicServers\";\n  }\n\n  enabled() {\n    const wrapper = modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].GuildClasses.wrapper.split(\" \")[0];\n    const guilds = $(`.${wrapper} .scroller-2FKFPG >:first-child`);\n    guilds.after(this.button);\n  }\n\n  disabled() {\n    $(\"#bd-pub-li\").remove();\n  }\n\n  openPublicServers() {\n    LayerStack.pushLayer(() => modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].React.createElement(_ui_publicservers_menu__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      close: LayerStack.popLayer\n    }));\n  }\n\n  get button() {\n    const btn = $(\"<div/>\", {\n      \"class\": modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].GuildClasses.listItem,\n      \"id\": \"bd-pub-li\"\n    }).append($(\"<div/>\", {\n      \"class\": \"wrapper-25eVIn \" + modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].GuildClasses.circleButtonMask,\n      \"text\": modules__WEBPACK_IMPORTED_MODULE_1__[\"Strings\"].PublicServers.button,\n      \"id\": \"bd-pub-button\",\n      \"click\": () => {\n        this.openPublicServers();\n      }\n    }));\n    return btn;\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL3B1YmxpY3NlcnZlcnMuanM/MWY2NSJdLCJuYW1lcyI6WyJMYXllclN0YWNrIiwiV2VicGFja01vZHVsZXMiLCJnZXRCeVByb3BzIiwiUHVibGljU2VydmVycyIsIkJ1aWx0aW4iLCJuYW1lIiwiY2F0ZWdvcnkiLCJpZCIsImVuYWJsZWQiLCJ3cmFwcGVyIiwiRGlzY29yZE1vZHVsZXMiLCJHdWlsZENsYXNzZXMiLCJzcGxpdCIsImd1aWxkcyIsIiQiLCJhZnRlciIsImJ1dHRvbiIsImRpc2FibGVkIiwicmVtb3ZlIiwib3BlblB1YmxpY1NlcnZlcnMiLCJwdXNoTGF5ZXIiLCJSZWFjdCIsImNyZWF0ZUVsZW1lbnQiLCJQdWJsaWNTZXJ2ZXJzTWVudSIsImNsb3NlIiwicG9wTGF5ZXIiLCJidG4iLCJsaXN0SXRlbSIsImFwcGVuZCIsImNpcmNsZUJ1dHRvbk1hc2siLCJTdHJpbmdzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBLE1BQU1BLFVBQVUsR0FBR0Msc0RBQWMsQ0FBQ0MsVUFBZixDQUEwQixXQUExQixDQUFuQjtBQUVlLG1FQUFJLE1BQU1DLGFBQU4sU0FBNEJDLHdEQUE1QixDQUFvQztBQUNuRCxNQUFJQyxJQUFKLEdBQVc7QUFBQyxXQUFPLGVBQVA7QUFBd0I7O0FBQ3BDLE1BQUlDLFFBQUosR0FBZTtBQUFDLFdBQU8sU0FBUDtBQUFrQjs7QUFDbEMsTUFBSUMsRUFBSixHQUFTO0FBQUMsV0FBTyxlQUFQO0FBQXdCOztBQUVsQ0MsU0FBTyxHQUFHO0FBQ04sVUFBTUMsT0FBTyxHQUFHQyxzREFBYyxDQUFDQyxZQUFmLENBQTRCRixPQUE1QixDQUFvQ0csS0FBcEMsQ0FBMEMsR0FBMUMsRUFBK0MsQ0FBL0MsQ0FBaEI7QUFDQSxVQUFNQyxNQUFNLEdBQUdDLENBQUMsQ0FBRSxJQUFHTCxPQUFRLGlDQUFiLENBQWhCO0FBQ0FJLFVBQU0sQ0FBQ0UsS0FBUCxDQUFhLEtBQUtDLE1BQWxCO0FBQ0g7O0FBRURDLFVBQVEsR0FBRztBQUNQSCxLQUFDLENBQUMsWUFBRCxDQUFELENBQWdCSSxNQUFoQjtBQUNIOztBQUVEQyxtQkFBaUIsR0FBRztBQUNoQm5CLGNBQVUsQ0FBQ29CLFNBQVgsQ0FBcUIsTUFBTVYsc0RBQWMsQ0FBQ1csS0FBZixDQUFxQkMsYUFBckIsQ0FBbUNDLDhEQUFuQyxFQUFzRDtBQUFDQyxXQUFLLEVBQUV4QixVQUFVLENBQUN5QjtBQUFuQixLQUF0RCxDQUEzQjtBQUNIOztBQUVELE1BQUlULE1BQUosR0FBYTtBQUNULFVBQU1VLEdBQUcsR0FBR1osQ0FBQyxDQUFDLFFBQUQsRUFBVztBQUNwQixlQUFTSixzREFBYyxDQUFDQyxZQUFmLENBQTRCZ0IsUUFEakI7QUFFcEIsWUFBTTtBQUZjLEtBQVgsQ0FBRCxDQUdUQyxNQUhTLENBR0ZkLENBQUMsQ0FBQyxRQUFELEVBQVc7QUFDbEIsZUFBUyxvQkFBb0JKLHNEQUFjLENBQUNDLFlBQWYsQ0FBNEJrQixnQkFEdkM7QUFFbEIsY0FBUUMsK0NBQU8sQ0FBQzNCLGFBQVIsQ0FBc0JhLE1BRlo7QUFHbEIsWUFBTSxlQUhZO0FBSWxCLGVBQVMsTUFBTTtBQUFFLGFBQUtHLGlCQUFMO0FBQTJCO0FBSjFCLEtBQVgsQ0FIQyxDQUFaO0FBVUEsV0FBT08sR0FBUDtBQUNIOztBQS9Ca0QsQ0FBeEMsRUFBZiIsImZpbGUiOiIuL3NyYy9idWlsdGlucy9wdWJsaWNzZXJ2ZXJzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1aWx0aW4gZnJvbSBcIi4uL3N0cnVjdHMvYnVpbHRpblwiO1xyXG5pbXBvcnQge0Rpc2NvcmRNb2R1bGVzLCBXZWJwYWNrTW9kdWxlcywgU3RyaW5nc30gZnJvbSBcIm1vZHVsZXNcIjtcclxuaW1wb3J0IFB1YmxpY1NlcnZlcnNNZW51IGZyb20gXCIuLi91aS9wdWJsaWNzZXJ2ZXJzL21lbnVcIjtcclxuXHJcbmNvbnN0IExheWVyU3RhY2sgPSBXZWJwYWNrTW9kdWxlcy5nZXRCeVByb3BzKFwicHVzaExheWVyXCIpO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IGNsYXNzIFB1YmxpY1NlcnZlcnMgZXh0ZW5kcyBCdWlsdGluIHtcclxuICAgIGdldCBuYW1lKCkge3JldHVybiBcIlB1YmxpY1NlcnZlcnNcIjt9XHJcbiAgICBnZXQgY2F0ZWdvcnkoKSB7cmV0dXJuIFwiZ2VuZXJhbFwiO31cclxuICAgIGdldCBpZCgpIHtyZXR1cm4gXCJwdWJsaWNTZXJ2ZXJzXCI7fVxyXG5cclxuICAgIGVuYWJsZWQoKSB7XHJcbiAgICAgICAgY29uc3Qgd3JhcHBlciA9IERpc2NvcmRNb2R1bGVzLkd1aWxkQ2xhc3Nlcy53cmFwcGVyLnNwbGl0KFwiIFwiKVswXTtcclxuICAgICAgICBjb25zdCBndWlsZHMgPSAkKGAuJHt3cmFwcGVyfSAuc2Nyb2xsZXItMkZLRlBHID46Zmlyc3QtY2hpbGRgKTtcclxuICAgICAgICBndWlsZHMuYWZ0ZXIodGhpcy5idXR0b24pO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVkKCkge1xyXG4gICAgICAgICQoXCIjYmQtcHViLWxpXCIpLnJlbW92ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIG9wZW5QdWJsaWNTZXJ2ZXJzKCkge1xyXG4gICAgICAgIExheWVyU3RhY2sucHVzaExheWVyKCgpID0+IERpc2NvcmRNb2R1bGVzLlJlYWN0LmNyZWF0ZUVsZW1lbnQoUHVibGljU2VydmVyc01lbnUsIHtjbG9zZTogTGF5ZXJTdGFjay5wb3BMYXllcn0pKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgYnV0dG9uKCkge1xyXG4gICAgICAgIGNvbnN0IGJ0biA9ICQoXCI8ZGl2Lz5cIiwge1xyXG4gICAgICAgICAgICBcImNsYXNzXCI6IERpc2NvcmRNb2R1bGVzLkd1aWxkQ2xhc3Nlcy5saXN0SXRlbSxcclxuICAgICAgICAgICAgXCJpZFwiOiBcImJkLXB1Yi1saVwiXHJcbiAgICAgICAgfSkuYXBwZW5kKCQoXCI8ZGl2Lz5cIiwge1xyXG4gICAgICAgICAgICBcImNsYXNzXCI6IFwid3JhcHBlci0yNWVWSW4gXCIgKyBEaXNjb3JkTW9kdWxlcy5HdWlsZENsYXNzZXMuY2lyY2xlQnV0dG9uTWFzayxcclxuICAgICAgICAgICAgXCJ0ZXh0XCI6IFN0cmluZ3MuUHVibGljU2VydmVycy5idXR0b24sXHJcbiAgICAgICAgICAgIFwiaWRcIjogXCJiZC1wdWItYnV0dG9uXCIsXHJcbiAgICAgICAgICAgIFwiY2xpY2tcIjogKCkgPT4geyB0aGlzLm9wZW5QdWJsaWNTZXJ2ZXJzKCk7IH1cclxuICAgICAgICB9KSk7XHJcblxyXG4gICAgICAgIHJldHVybiBidG47XHJcbiAgICB9XHJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/builtins/publicservers.js\n");

/***/ }),

/***/ "./src/builtins/voicedisconnect.js":
/*!*****************************************!*\
  !*** ./src/builtins/voicedisconnect.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class DarkMode extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"VoiceDisconnect\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get id() {\n    return \"voiceDisconnect\";\n  }\n\n  constructor() {\n    super();\n    this.beforeUnload = this.beforeUnload.bind(this);\n  }\n\n  enabled() {\n    window.addEventListener(\"beforeunload\", this.beforeUnload);\n  }\n\n  disabled() {\n    window.removeEventListener(\"beforeunload\", this.beforeUnload);\n  }\n\n  beforeUnload() {\n    modules__WEBPACK_IMPORTED_MODULE_1__[\"DiscordModules\"].ChannelActions.selectVoiceChannel(null, null);\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL3ZvaWNlZGlzY29ubmVjdC5qcz8yYmVmIl0sIm5hbWVzIjpbIkRhcmtNb2RlIiwiQnVpbHRpbiIsIm5hbWUiLCJjYXRlZ29yeSIsImlkIiwiY29uc3RydWN0b3IiLCJiZWZvcmVVbmxvYWQiLCJiaW5kIiwiZW5hYmxlZCIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJkaXNhYmxlZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJEaXNjb3JkTW9kdWxlcyIsIkNoYW5uZWxBY3Rpb25zIiwic2VsZWN0Vm9pY2VDaGFubmVsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRWUsbUVBQUksTUFBTUEsUUFBTixTQUF1QkMsd0RBQXZCLENBQStCO0FBQzlDLE1BQUlDLElBQUosR0FBVztBQUFDLFdBQU8saUJBQVA7QUFBMEI7O0FBQ3RDLE1BQUlDLFFBQUosR0FBZTtBQUFDLFdBQU8sU0FBUDtBQUFrQjs7QUFDbEMsTUFBSUMsRUFBSixHQUFTO0FBQUMsV0FBTyxpQkFBUDtBQUEwQjs7QUFFcENDLGFBQVcsR0FBRztBQUNWO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQixLQUFLQSxZQUFMLENBQWtCQyxJQUFsQixDQUF1QixJQUF2QixDQUFwQjtBQUNIOztBQUVEQyxTQUFPLEdBQUc7QUFDTkMsVUFBTSxDQUFDQyxnQkFBUCxDQUF3QixjQUF4QixFQUF3QyxLQUFLSixZQUE3QztBQUNIOztBQUVESyxVQUFRLEdBQUc7QUFDUEYsVUFBTSxDQUFDRyxtQkFBUCxDQUEyQixjQUEzQixFQUEyQyxLQUFLTixZQUFoRDtBQUNIOztBQUVEQSxjQUFZLEdBQUc7QUFDWE8sMERBQWMsQ0FBQ0MsY0FBZixDQUE4QkMsa0JBQTlCLENBQWlELElBQWpELEVBQXVELElBQXZEO0FBQ0g7O0FBcEI2QyxDQUFuQyxFQUFmIiwiZmlsZSI6Ii4vc3JjL2J1aWx0aW5zL3ZvaWNlZGlzY29ubmVjdC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCdWlsdGluIGZyb20gXCIuLi9zdHJ1Y3RzL2J1aWx0aW5cIjtcclxuaW1wb3J0IHtEaXNjb3JkTW9kdWxlc30gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBEYXJrTW9kZSBleHRlbmRzIEJ1aWx0aW4ge1xyXG4gICAgZ2V0IG5hbWUoKSB7cmV0dXJuIFwiVm9pY2VEaXNjb25uZWN0XCI7fVxyXG4gICAgZ2V0IGNhdGVnb3J5KCkge3JldHVybiBcImdlbmVyYWxcIjt9XHJcbiAgICBnZXQgaWQoKSB7cmV0dXJuIFwidm9pY2VEaXNjb25uZWN0XCI7fVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5iZWZvcmVVbmxvYWQgPSB0aGlzLmJlZm9yZVVubG9hZC5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIGVuYWJsZWQoKSB7XHJcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJiZWZvcmV1bmxvYWRcIiwgdGhpcy5iZWZvcmVVbmxvYWQpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVkKCkge1xyXG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiYmVmb3JldW5sb2FkXCIsIHRoaXMuYmVmb3JlVW5sb2FkKTtcclxuICAgIH1cclxuXHJcbiAgICBiZWZvcmVVbmxvYWQoKSB7XHJcbiAgICAgICAgRGlzY29yZE1vZHVsZXMuQ2hhbm5lbEFjdGlvbnMuc2VsZWN0Vm9pY2VDaGFubmVsKG51bGwsIG51bGwpO1xyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/builtins/voicedisconnect.js\n");

/***/ }),

/***/ "./src/builtins/voicemode.js":
/*!***********************************!*\
  !*** ./src/builtins/voicemode.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class VoiceMode extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"VoiceMode\";\n  }\n\n  get category() {\n    return \"appearance\";\n  }\n\n  get id() {\n    return \"voiceMode\";\n  }\n\n  enabled() {\n    document.querySelector(\".chat-3bRxxu\").style.setProperty(\"visibility\", \"hidden\");\n    document.querySelector(\".chat-3bRxxu\").style.setProperty(\"min-width\", \"0px\");\n    document.querySelector(\".channels-Ie2l6A\").style.setProperty(\"flex-grow\", \"100000\");\n  }\n\n  disabled() {\n    document.querySelector(\".chat-3bRxxu\").style.setProperty(\"visibility\", \"\");\n    document.querySelector(\".chat-3bRxxu\").style.setProperty(\"min-width\", \"\");\n    document.querySelector(\".channels-Ie2l6A\").style.setProperty(\"flex-grow\", \"\");\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL3ZvaWNlbW9kZS5qcz80M2E3Il0sIm5hbWVzIjpbIlZvaWNlTW9kZSIsIkJ1aWx0aW4iLCJuYW1lIiwiY2F0ZWdvcnkiLCJpZCIsImVuYWJsZWQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJzdHlsZSIsInNldFByb3BlcnR5IiwiZGlzYWJsZWQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUVlLG1FQUFJLE1BQU1BLFNBQU4sU0FBd0JDLHdEQUF4QixDQUFnQztBQUMvQyxNQUFJQyxJQUFKLEdBQVc7QUFBQyxXQUFPLFdBQVA7QUFBb0I7O0FBQ2hDLE1BQUlDLFFBQUosR0FBZTtBQUFDLFdBQU8sWUFBUDtBQUFxQjs7QUFDckMsTUFBSUMsRUFBSixHQUFTO0FBQUMsV0FBTyxXQUFQO0FBQW9COztBQUU5QkMsU0FBTyxHQUFHO0FBQ05DLFlBQVEsQ0FBQ0MsYUFBVCxDQUF1QixjQUF2QixFQUF1Q0MsS0FBdkMsQ0FBNkNDLFdBQTdDLENBQXlELFlBQXpELEVBQXVFLFFBQXZFO0FBQ0FILFlBQVEsQ0FBQ0MsYUFBVCxDQUF1QixjQUF2QixFQUF1Q0MsS0FBdkMsQ0FBNkNDLFdBQTdDLENBQXlELFdBQXpELEVBQXNFLEtBQXRFO0FBQ0FILFlBQVEsQ0FBQ0MsYUFBVCxDQUF1QixrQkFBdkIsRUFBMkNDLEtBQTNDLENBQWlEQyxXQUFqRCxDQUE2RCxXQUE3RCxFQUEwRSxRQUExRTtBQUNIOztBQUVEQyxVQUFRLEdBQUc7QUFDUEosWUFBUSxDQUFDQyxhQUFULENBQXVCLGNBQXZCLEVBQXVDQyxLQUF2QyxDQUE2Q0MsV0FBN0MsQ0FBeUQsWUFBekQsRUFBdUUsRUFBdkU7QUFDQUgsWUFBUSxDQUFDQyxhQUFULENBQXVCLGNBQXZCLEVBQXVDQyxLQUF2QyxDQUE2Q0MsV0FBN0MsQ0FBeUQsV0FBekQsRUFBc0UsRUFBdEU7QUFDQUgsWUFBUSxDQUFDQyxhQUFULENBQXVCLGtCQUF2QixFQUEyQ0MsS0FBM0MsQ0FBaURDLFdBQWpELENBQTZELFdBQTdELEVBQTBFLEVBQTFFO0FBQ0g7O0FBZjhDLENBQXBDLEVBQWYiLCJmaWxlIjoiLi9zcmMvYnVpbHRpbnMvdm9pY2Vtb2RlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ1aWx0aW4gZnJvbSBcIi4uL3N0cnVjdHMvYnVpbHRpblwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IGNsYXNzIFZvaWNlTW9kZSBleHRlbmRzIEJ1aWx0aW4ge1xyXG4gICAgZ2V0IG5hbWUoKSB7cmV0dXJuIFwiVm9pY2VNb2RlXCI7fVxyXG4gICAgZ2V0IGNhdGVnb3J5KCkge3JldHVybiBcImFwcGVhcmFuY2VcIjt9XHJcbiAgICBnZXQgaWQoKSB7cmV0dXJuIFwidm9pY2VNb2RlXCI7fVxyXG5cclxuICAgIGVuYWJsZWQoKSB7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGF0LTNiUnh4dVwiKS5zdHlsZS5zZXRQcm9wZXJ0eShcInZpc2liaWxpdHlcIiwgXCJoaWRkZW5cIik7XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jaGF0LTNiUnh4dVwiKS5zdHlsZS5zZXRQcm9wZXJ0eShcIm1pbi13aWR0aFwiLCBcIjBweFwiKTtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYW5uZWxzLUllMmw2QVwiKS5zdHlsZS5zZXRQcm9wZXJ0eShcImZsZXgtZ3Jvd1wiLCBcIjEwMDAwMFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBkaXNhYmxlZCgpIHtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXQtM2JSeHh1XCIpLnN0eWxlLnNldFByb3BlcnR5KFwidmlzaWJpbGl0eVwiLCBcIlwiKTtcclxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNoYXQtM2JSeHh1XCIpLnN0eWxlLnNldFByb3BlcnR5KFwibWluLXdpZHRoXCIsIFwiXCIpO1xyXG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2hhbm5lbHMtSWUybDZBXCIpLnN0eWxlLnNldFByb3BlcnR5KFwiZmxleC1ncm93XCIsIFwiXCIpO1xyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/builtins/voicemode.js\n");

/***/ }),

/***/ "./src/builtins/windowprefs.js":
/*!*************************************!*\
  !*** ./src/builtins/windowprefs.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _structs_builtin__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../structs/builtin */ \"./src/structs/builtin.js\");\n\n\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n\nconst path = __webpack_require__(/*! path */ \"path\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class WindowPrefs extends _structs_builtin__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  get name() {\n    return \"WindowPrefs\";\n  }\n\n  get category() {\n    return \"window\";\n  }\n\n  get id() {\n    return \"transparency\";\n  }\n\n  get WindowConfigFile() {\n    if (this._windowConfigFile) return this._windowConfigFile;\n\n    const electron = __webpack_require__(/*! electron */ \"electron\").remote.app;\n\n    const base = electron.getAppPath();\n    const roamingBase = electron.getPath(\"userData\");\n    const roamingLocation = path.resolve(roamingBase, electron.getVersion(), \"modules\", \"discord_desktop_core\", \"injector\", \"config.json\");\n    const location = path.resolve(base, \"..\", \"app\", \"config.json\");\n    const realLocation = fs.existsSync(location) ? location : fs.existsSync(roamingLocation) ? roamingLocation : null;\n    if (!realLocation) return this._windowConfigFile = null;\n    return this._windowConfigFile = realLocation;\n  }\n\n  enabled() {\n    this.setWindowPreference(\"transparent\", true);\n    this.setWindowPreference(\"backgroundColor\", null);\n  }\n\n  disabled() {\n    this.setWindowPreference(\"transparent\", false);\n    this.setWindowPreference(\"backgroundColor\", \"#2f3136\");\n  }\n\n  getAllWindowPreferences() {\n    if (!this.WindowConfigFile) return {};\n    return require(this.WindowConfigFile);\n  }\n\n  getWindowPreference(key) {\n    if (!this.WindowConfigFile) return undefined;\n    return this.getAllWindowPreferences()[key];\n  }\n\n  setWindowPreference(key, value) {\n    if (!this.WindowConfigFile) return;\n    const prefs = this.getAllWindowPreferences();\n    prefs[key] = value;\n    delete __webpack_require__.c[this.WindowConfigFile];\n    fs.writeFileSync(this.WindowConfigFile, JSON.stringify(prefs, null, 4));\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2J1aWx0aW5zL3dpbmRvd3ByZWZzLmpzP2I0YTciXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwicGF0aCIsIldpbmRvd1ByZWZzIiwiQnVpbHRpbiIsIm5hbWUiLCJjYXRlZ29yeSIsImlkIiwiV2luZG93Q29uZmlnRmlsZSIsIl93aW5kb3dDb25maWdGaWxlIiwiZWxlY3Ryb24iLCJyZW1vdGUiLCJhcHAiLCJiYXNlIiwiZ2V0QXBwUGF0aCIsInJvYW1pbmdCYXNlIiwiZ2V0UGF0aCIsInJvYW1pbmdMb2NhdGlvbiIsInJlc29sdmUiLCJnZXRWZXJzaW9uIiwibG9jYXRpb24iLCJyZWFsTG9jYXRpb24iLCJleGlzdHNTeW5jIiwiZW5hYmxlZCIsInNldFdpbmRvd1ByZWZlcmVuY2UiLCJkaXNhYmxlZCIsImdldEFsbFdpbmRvd1ByZWZlcmVuY2VzIiwiX19ub25fd2VicGFja19yZXF1aXJlX18iLCJnZXRXaW5kb3dQcmVmZXJlbmNlIiwia2V5IiwidW5kZWZpbmVkIiwidmFsdWUiLCJwcmVmcyIsIndyaXRlRmlsZVN5bmMiLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7O0FBRUEsTUFBTUEsRUFBRSxHQUFHQyxtQkFBTyxDQUFDLGNBQUQsQ0FBbEI7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHRCxtQkFBTyxDQUFDLGtCQUFELENBQXBCOztBQUVlLG1FQUFJLE1BQU1FLFdBQU4sU0FBMEJDLHdEQUExQixDQUFrQztBQUNqRCxNQUFJQyxJQUFKLEdBQVc7QUFBQyxXQUFPLGFBQVA7QUFBc0I7O0FBQ2xDLE1BQUlDLFFBQUosR0FBZTtBQUFDLFdBQU8sUUFBUDtBQUFpQjs7QUFDakMsTUFBSUMsRUFBSixHQUFTO0FBQUMsV0FBTyxjQUFQO0FBQXVCOztBQUVqQyxNQUFJQyxnQkFBSixHQUF1QjtBQUNuQixRQUFJLEtBQUtDLGlCQUFULEVBQTRCLE9BQU8sS0FBS0EsaUJBQVo7O0FBQzVCLFVBQU1DLFFBQVEsR0FBR1QsbUJBQU8sQ0FBQywwQkFBRCxDQUFQLENBQW9CVSxNQUFwQixDQUEyQkMsR0FBNUM7O0FBQ0EsVUFBTUMsSUFBSSxHQUFHSCxRQUFRLENBQUNJLFVBQVQsRUFBYjtBQUNBLFVBQU1DLFdBQVcsR0FBR0wsUUFBUSxDQUFDTSxPQUFULENBQWlCLFVBQWpCLENBQXBCO0FBQ0EsVUFBTUMsZUFBZSxHQUFHZixJQUFJLENBQUNnQixPQUFMLENBQWFILFdBQWIsRUFBMEJMLFFBQVEsQ0FBQ1MsVUFBVCxFQUExQixFQUFpRCxTQUFqRCxFQUE0RCxzQkFBNUQsRUFBb0YsVUFBcEYsRUFBZ0csYUFBaEcsQ0FBeEI7QUFDQSxVQUFNQyxRQUFRLEdBQUdsQixJQUFJLENBQUNnQixPQUFMLENBQWFMLElBQWIsRUFBbUIsSUFBbkIsRUFBeUIsS0FBekIsRUFBZ0MsYUFBaEMsQ0FBakI7QUFDQSxVQUFNUSxZQUFZLEdBQUdyQixFQUFFLENBQUNzQixVQUFILENBQWNGLFFBQWQsSUFBMEJBLFFBQTFCLEdBQXFDcEIsRUFBRSxDQUFDc0IsVUFBSCxDQUFjTCxlQUFkLElBQWlDQSxlQUFqQyxHQUFtRCxJQUE3RztBQUNBLFFBQUksQ0FBQ0ksWUFBTCxFQUFtQixPQUFPLEtBQUtaLGlCQUFMLEdBQXlCLElBQWhDO0FBQ25CLFdBQU8sS0FBS0EsaUJBQUwsR0FBeUJZLFlBQWhDO0FBQ0g7O0FBRURFLFNBQU8sR0FBRztBQUNOLFNBQUtDLG1CQUFMLENBQXlCLGFBQXpCLEVBQXdDLElBQXhDO0FBQ0EsU0FBS0EsbUJBQUwsQ0FBeUIsaUJBQXpCLEVBQTRDLElBQTVDO0FBQ0g7O0FBRURDLFVBQVEsR0FBRztBQUNQLFNBQUtELG1CQUFMLENBQXlCLGFBQXpCLEVBQXdDLEtBQXhDO0FBQ0EsU0FBS0EsbUJBQUwsQ0FBeUIsaUJBQXpCLEVBQTRDLFNBQTVDO0FBQ0g7O0FBRURFLHlCQUF1QixHQUFHO0FBQ3RCLFFBQUksQ0FBQyxLQUFLbEIsZ0JBQVYsRUFBNEIsT0FBTyxFQUFQO0FBQzVCLFdBQU9tQixPQUF1QixDQUFDLEtBQUtuQixnQkFBTixDQUE5QjtBQUNIOztBQUVEb0IscUJBQW1CLENBQUNDLEdBQUQsRUFBTTtBQUNyQixRQUFJLENBQUMsS0FBS3JCLGdCQUFWLEVBQTRCLE9BQU9zQixTQUFQO0FBQzVCLFdBQU8sS0FBS0osdUJBQUwsR0FBK0JHLEdBQS9CLENBQVA7QUFDSDs7QUFFREwscUJBQW1CLENBQUNLLEdBQUQsRUFBTUUsS0FBTixFQUFhO0FBQzVCLFFBQUksQ0FBQyxLQUFLdkIsZ0JBQVYsRUFBNEI7QUFDNUIsVUFBTXdCLEtBQUssR0FBRyxLQUFLTix1QkFBTCxFQUFkO0FBQ0FNLFNBQUssQ0FBQ0gsR0FBRCxDQUFMLEdBQWFFLEtBQWI7QUFDQSxXQUFPOUIscUJBQUEsQ0FBYyxLQUFLTyxnQkFBbkIsQ0FBUDtBQUNBUixNQUFFLENBQUNpQyxhQUFILENBQWlCLEtBQUt6QixnQkFBdEIsRUFBd0MwQixJQUFJLENBQUNDLFNBQUwsQ0FBZUgsS0FBZixFQUFzQixJQUF0QixFQUE0QixDQUE1QixDQUF4QztBQUNIOztBQTNDZ0QsQ0FBdEMsRUFBZiIsImZpbGUiOiIuL3NyYy9idWlsdGlucy93aW5kb3dwcmVmcy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCdWlsdGluIGZyb20gXCIuLi9zdHJ1Y3RzL2J1aWx0aW5cIjtcclxuXHJcbmNvbnN0IGZzID0gcmVxdWlyZShcImZzXCIpO1xyXG5jb25zdCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgY2xhc3MgV2luZG93UHJlZnMgZXh0ZW5kcyBCdWlsdGluIHtcclxuICAgIGdldCBuYW1lKCkge3JldHVybiBcIldpbmRvd1ByZWZzXCI7fVxyXG4gICAgZ2V0IGNhdGVnb3J5KCkge3JldHVybiBcIndpbmRvd1wiO31cclxuICAgIGdldCBpZCgpIHtyZXR1cm4gXCJ0cmFuc3BhcmVuY3lcIjt9XHJcblxyXG4gICAgZ2V0IFdpbmRvd0NvbmZpZ0ZpbGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3dpbmRvd0NvbmZpZ0ZpbGUpIHJldHVybiB0aGlzLl93aW5kb3dDb25maWdGaWxlO1xyXG4gICAgICAgIGNvbnN0IGVsZWN0cm9uID0gcmVxdWlyZShcImVsZWN0cm9uXCIpLnJlbW90ZS5hcHA7XHJcbiAgICAgICAgY29uc3QgYmFzZSA9IGVsZWN0cm9uLmdldEFwcFBhdGgoKTtcclxuICAgICAgICBjb25zdCByb2FtaW5nQmFzZSA9IGVsZWN0cm9uLmdldFBhdGgoXCJ1c2VyRGF0YVwiKTtcclxuICAgICAgICBjb25zdCByb2FtaW5nTG9jYXRpb24gPSBwYXRoLnJlc29sdmUocm9hbWluZ0Jhc2UsIGVsZWN0cm9uLmdldFZlcnNpb24oKSwgXCJtb2R1bGVzXCIsIFwiZGlzY29yZF9kZXNrdG9wX2NvcmVcIiwgXCJpbmplY3RvclwiLCBcImNvbmZpZy5qc29uXCIpO1xyXG4gICAgICAgIGNvbnN0IGxvY2F0aW9uID0gcGF0aC5yZXNvbHZlKGJhc2UsIFwiLi5cIiwgXCJhcHBcIiwgXCJjb25maWcuanNvblwiKTtcclxuICAgICAgICBjb25zdCByZWFsTG9jYXRpb24gPSBmcy5leGlzdHNTeW5jKGxvY2F0aW9uKSA/IGxvY2F0aW9uIDogZnMuZXhpc3RzU3luYyhyb2FtaW5nTG9jYXRpb24pID8gcm9hbWluZ0xvY2F0aW9uIDogbnVsbDtcclxuICAgICAgICBpZiAoIXJlYWxMb2NhdGlvbikgcmV0dXJuIHRoaXMuX3dpbmRvd0NvbmZpZ0ZpbGUgPSBudWxsO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl93aW5kb3dDb25maWdGaWxlID0gcmVhbExvY2F0aW9uO1xyXG4gICAgfVxyXG5cclxuICAgIGVuYWJsZWQoKSB7XHJcbiAgICAgICAgdGhpcy5zZXRXaW5kb3dQcmVmZXJlbmNlKFwidHJhbnNwYXJlbnRcIiwgdHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5zZXRXaW5kb3dQcmVmZXJlbmNlKFwiYmFja2dyb3VuZENvbG9yXCIsIG51bGwpO1xyXG4gICAgfVxyXG5cclxuICAgIGRpc2FibGVkKCkge1xyXG4gICAgICAgIHRoaXMuc2V0V2luZG93UHJlZmVyZW5jZShcInRyYW5zcGFyZW50XCIsIGZhbHNlKTtcclxuICAgICAgICB0aGlzLnNldFdpbmRvd1ByZWZlcmVuY2UoXCJiYWNrZ3JvdW5kQ29sb3JcIiwgXCIjMmYzMTM2XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEFsbFdpbmRvd1ByZWZlcmVuY2VzKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5XaW5kb3dDb25maWdGaWxlKSByZXR1cm4ge307XHJcbiAgICAgICAgcmV0dXJuIF9fbm9uX3dlYnBhY2tfcmVxdWlyZV9fKHRoaXMuV2luZG93Q29uZmlnRmlsZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0V2luZG93UHJlZmVyZW5jZShrZXkpIHtcclxuICAgICAgICBpZiAoIXRoaXMuV2luZG93Q29uZmlnRmlsZSkgcmV0dXJuIHVuZGVmaW5lZDtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRBbGxXaW5kb3dQcmVmZXJlbmNlcygpW2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgc2V0V2luZG93UHJlZmVyZW5jZShrZXksIHZhbHVlKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLldpbmRvd0NvbmZpZ0ZpbGUpIHJldHVybjtcclxuICAgICAgICBjb25zdCBwcmVmcyA9IHRoaXMuZ2V0QWxsV2luZG93UHJlZmVyZW5jZXMoKTtcclxuICAgICAgICBwcmVmc1trZXldID0gdmFsdWU7XHJcbiAgICAgICAgZGVsZXRlIHJlcXVpcmUuY2FjaGVbdGhpcy5XaW5kb3dDb25maWdGaWxlXTtcclxuICAgICAgICBmcy53cml0ZUZpbGVTeW5jKHRoaXMuV2luZG93Q29uZmlnRmlsZSwgSlNPTi5zdHJpbmdpZnkocHJlZnMsIG51bGwsIDQpKTtcclxuICAgIH1cclxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/builtins/windowprefs.js\n");

/***/ }),

/***/ "./src/data/config.js":
/*!****************************!*\
  !*** ./src/data/config.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  local: false,\n  localServer: \"//localhost:8080\",\n  minified: true,\n  version: \"0.3.0\",\n  branch: \"master\",\n  repo: \"rauenzi\",\n  minSupportedVersion: \"0.3.0\",\n  bbdVersion: \"0.2.17\"\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2RhdGEvY29uZmlnLmpzPzRiYWEiXSwibmFtZXMiOlsibG9jYWwiLCJsb2NhbFNlcnZlciIsIm1pbmlmaWVkIiwidmVyc2lvbiIsImJyYW5jaCIsInJlcG8iLCJtaW5TdXBwb3J0ZWRWZXJzaW9uIiwiYmJkVmVyc2lvbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZTtBQUNYQSxPQUFLLEVBQUUsS0FESTtBQUVYQyxhQUFXLEVBQUUsa0JBRkY7QUFHWEMsVUFBUSxFQUFFLElBSEM7QUFJWEMsU0FBTyxFQUFFLE9BSkU7QUFLWEMsUUFBTSxFQUFFLFFBTEc7QUFNWEMsTUFBSSxFQUFFLFNBTks7QUFPWEMscUJBQW1CLEVBQUUsT0FQVjtBQVFYQyxZQUFVLEVBQUU7QUFSRCxDQUFmIiwiZmlsZSI6Ii4vc3JjL2RhdGEvY29uZmlnLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbG9jYWw6IGZhbHNlLFxyXG4gICAgbG9jYWxTZXJ2ZXI6IFwiLy9sb2NhbGhvc3Q6ODA4MFwiLFxyXG4gICAgbWluaWZpZWQ6IHRydWUsXHJcbiAgICB2ZXJzaW9uOiBcIjAuMy4wXCIsXHJcbiAgICBicmFuY2g6IFwibWFzdGVyXCIsXHJcbiAgICByZXBvOiBcInJhdWVuemlcIixcclxuICAgIG1pblN1cHBvcnRlZFZlcnNpb246IFwiMC4zLjBcIixcclxuICAgIGJiZFZlcnNpb246IFwiMC4yLjE3XCJcclxufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/data/config.js\n");

/***/ }),

/***/ "./src/data/data.js":
/*!**************************!*\
  !*** ./src/data/data.js ***!
  \**************************/
/*! exports provided: Config, EmoteConfig, SettingsConfig, Strings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/data/config.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Config\", function() { return _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _settings_emoteconfig__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings/emoteconfig */ \"./src/data/settings/emoteconfig.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"EmoteConfig\", function() { return _settings_emoteconfig__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _settings_config__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings/config */ \"./src/data/settings/config.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SettingsConfig\", function() { return _settings_config__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./strings */ \"./src/data/strings.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Strings\", function() { return _strings__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2RhdGEvZGF0YS5qcz9kNWM3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBIiwiZmlsZSI6Ii4vc3JjL2RhdGEvZGF0YS5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBDb25maWd9IGZyb20gXCIuL2NvbmZpZ1wiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgRW1vdGVDb25maWd9IGZyb20gXCIuL3NldHRpbmdzL2Vtb3RlY29uZmlnXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBTZXR0aW5nc0NvbmZpZ30gZnJvbSBcIi4vc2V0dGluZ3MvY29uZmlnXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBTdHJpbmdzfSBmcm9tIFwiLi9zdHJpbmdzXCI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/data/data.js\n");

/***/ }),

/***/ "./src/data/settings/config.js":
/*!*************************************!*\
  !*** ./src/data/settings/config.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n  type: \"category\",\n  id: \"general\",\n  collapsible: true,\n  settings: [{\n    type: \"switch\",\n    id: \"emotes\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"publicServers\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"voiceDisconnect\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"twentyFourHour\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"classNormalizer\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"showToasts\",\n    value: true\n  }]\n}, {\n  type: \"category\",\n  id: \"appearance\",\n  collapsible: true,\n  settings: [{\n    type: \"switch\",\n    id: \"voiceMode\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"minimalMode\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"hideChannels\",\n    value: false,\n    enableWith: \"minimalMode\"\n  }, {\n    type: \"switch\",\n    id: \"darkMode\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"coloredText\",\n    value: false\n  }]\n}, {\n  type: \"category\",\n  id: \"addons\",\n  collapsible: true,\n  settings: [{\n    type: \"switch\",\n    id: \"addonErrors\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"autoScroll\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"autoReload\",\n    value: true\n  }]\n}, {\n  type: \"category\",\n  id: \"customcss\",\n  collapsible: true,\n  shown: false,\n  settings: [{\n    type: \"switch\",\n    id: \"customcss\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"liveUpdate\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"startDetached\",\n    value: false,\n    disableWith: \"nativeOpen\"\n  }, {\n    type: \"switch\",\n    id: \"nativeOpen\",\n    value: false,\n    disableWith: \"startDetached\"\n  }]\n}, {\n  type: \"category\",\n  id: \"developer\",\n  collapsible: true,\n  shown: false,\n  settings: [{\n    type: \"switch\",\n    id: \"developerMode\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"copySelector\",\n    value: false,\n    enableWith: \"developerMode\"\n  }]\n}, {\n  type: \"category\",\n  id: \"window\",\n  collapsible: true,\n  shown: false,\n  settings: [{\n    type: \"switch\",\n    id: \"transparency\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"frame\",\n    value: false,\n    hidden: true\n  }]\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2RhdGEvc2V0dGluZ3MvY29uZmlnLmpzP2ZmOGUiXSwibmFtZXMiOlsidHlwZSIsImlkIiwiY29sbGFwc2libGUiLCJzZXR0aW5ncyIsInZhbHVlIiwiZW5hYmxlV2l0aCIsInNob3duIiwiZGlzYWJsZVdpdGgiLCJoaWRkZW4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQWUsZ0VBQ1g7QUFDSUEsTUFBSSxFQUFFLFVBRFY7QUFFSUMsSUFBRSxFQUFFLFNBRlI7QUFHSUMsYUFBVyxFQUFFLElBSGpCO0FBSUlDLFVBQVEsRUFBRSxDQUNOO0FBQUNILFFBQUksRUFBRSxRQUFQO0FBQWlCQyxNQUFFLEVBQUUsUUFBckI7QUFBK0JHLFNBQUssRUFBRTtBQUF0QyxHQURNLEVBRU47QUFBQ0osUUFBSSxFQUFFLFFBQVA7QUFBaUJDLE1BQUUsRUFBRSxlQUFyQjtBQUFzQ0csU0FBSyxFQUFFO0FBQTdDLEdBRk0sRUFHTjtBQUFDSixRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLGlCQUFyQjtBQUF3Q0csU0FBSyxFQUFFO0FBQS9DLEdBSE0sRUFJTjtBQUFDSixRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLGdCQUFyQjtBQUF1Q0csU0FBSyxFQUFFO0FBQTlDLEdBSk0sRUFLTjtBQUFDSixRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLGlCQUFyQjtBQUF3Q0csU0FBSyxFQUFFO0FBQS9DLEdBTE0sRUFNTjtBQUFDSixRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLFlBQXJCO0FBQW1DRyxTQUFLLEVBQUU7QUFBMUMsR0FOTTtBQUpkLENBRFcsRUFjWDtBQUNJSixNQUFJLEVBQUUsVUFEVjtBQUVJQyxJQUFFLEVBQUUsWUFGUjtBQUdJQyxhQUFXLEVBQUUsSUFIakI7QUFJSUMsVUFBUSxFQUFFLENBQ047QUFBQ0gsUUFBSSxFQUFFLFFBQVA7QUFBaUJDLE1BQUUsRUFBRSxXQUFyQjtBQUFrQ0cs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InNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFtcclxuICAgIHtcclxuICAgICAgICB0eXBlOiBcImNhdGVnb3J5XCIsXHJcbiAgICAgICAgaWQ6IFwiZ2VuZXJhbFwiLFxyXG4gICAgICAgIGNvbGxhcHNpYmxlOiB0cnVlLFxyXG4gICAgICAgIHNldHRpbmdzOiBbXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJlbW90ZXNcIiwgdmFsdWU6IHRydWV9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwicHVibGljU2VydmVyc1wiLCB2YWx1ZTogdHJ1ZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJ2b2ljZURpc2Nvbm5lY3RcIiwgdmFsdWU6IGZhbHNlfSxcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcInR3ZW50eUZvdXJIb3VyXCIsIHZhbHVlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJjbGFzc05vcm1hbGl6ZXJcIiwgdmFsdWU6IHRydWV9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwic2hvd1RvYXN0c1wiLCB2YWx1ZTogdHJ1ZX1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHR5cGU6IFwiY2F0ZWdvcnlcIixcclxuICAgICAgICBpZDogXCJhcHBlYXJhbmNlXCIsXHJcbiAgICAgICAgY29sbGFwc2libGU6IHRydWUsXHJcbiAgICAgICAgc2V0dGluZ3M6IFtcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcInZvaWNlTW9kZVwiLCB2YWx1ZTogZmFsc2V9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwibWluaW1hbE1vZGVcIiwgdmFsdWU6IGZhbHNlfSxcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcImhpZGVDaGFubmVsc1wiLCB2YWx1ZTogZmFsc2UsIGVuYWJsZVdpdGg6IFwibWluaW1hbE1vZGVcIn0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJkYXJrTW9kZVwiLCB2YWx1ZTogdHJ1ZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJjb2xvcmVkVGV4dFwiLCB2YWx1ZTogZmFsc2V9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICB0eXBlOiBcImNhdGVnb3J5XCIsXHJcbiAgICAgICAgaWQ6IFwiYWRkb25zXCIsXHJcbiAgICAgICAgY29sbGFwc2libGU6IHRydWUsXHJcbiAgICAgICAgc2V0dGluZ3M6IFtcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcImFkZG9uRXJyb3JzXCIsIHZhbHVlOiB0cnVlfSxcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcImF1dG9TY3JvbGxcIiwgdmFsdWU6IHRydWV9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwiYXV0b1JlbG9hZFwiLCB2YWx1ZTogdHJ1ZX1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHR5cGU6IFwiY2F0ZWdvcnlcIixcclxuICAgICAgICBpZDogXCJjdXN0b21jc3NcIixcclxuICAgICAgICBjb2xsYXBzaWJsZTogdHJ1ZSxcclxuICAgICAgICBzaG93bjogZmFsc2UsXHJcbiAgICAgICAgc2V0dGluZ3M6IFtcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcImN1c3RvbWNzc1wiLCB2YWx1ZTogdHJ1ZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJsaXZlVXBkYXRlXCIsIHZhbHVlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJzdGFydERldGFjaGVkXCIsIHZhbHVlOiBmYWxzZSwgZGlzYWJsZVdpdGg6IFwibmF0aXZlT3BlblwifSxcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcIm5hdGl2ZU9wZW5cIiwgdmFsdWU6IGZhbHNlLCBkaXNhYmxlV2l0aDogXCJzdGFydERldGFjaGVkXCJ9XHJcbiAgICAgICAgXVxyXG4gICAgfSxcclxuICAgIHtcclxuICAgICAgICB0eXBlOiBcImNhdGVnb3J5XCIsXHJcbiAgICAgICAgaWQ6IFwiZGV2ZWxvcGVyXCIsXHJcbiAgICAgICAgY29sbGFwc2libGU6IHRydWUsXHJcbiAgICAgICAgc2hvd246IGZhbHNlLFxyXG4gICAgICAgIHNldHRpbmdzOiBbXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJkZXZlbG9wZXJNb2RlXCIsIHZhbHVlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJjb3B5U2VsZWN0b3JcIiwgdmFsdWU6IGZhbHNlLCBlbmFibGVXaXRoOiBcImRldmVsb3Blck1vZGVcIn1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHR5cGU6IFwiY2F0ZWdvcnlcIixcclxuICAgICAgICBpZDogXCJ3aW5kb3dcIixcclxuICAgICAgICBjb2xsYXBzaWJsZTogdHJ1ZSxcclxuICAgICAgICBzaG93bjogZmFsc2UsXHJcbiAgICAgICAgc2V0dGluZ3M6IFtcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcInRyYW5zcGFyZW5jeVwiLCB2YWx1ZTogZmFsc2V9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwiZnJhbWVcIiwgdmFsdWU6IGZhbHNlLCBoaWRkZW46IHRydWV9XHJcbiAgICAgICAgXVxyXG4gICAgfVxyXG5dOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/data/settings/config.js\n");

/***/ }),

/***/ "./src/data/settings/emoteconfig.js":
/*!******************************************!*\
  !*** ./src/data/settings/emoteconfig.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ([{\n  type: \"category\",\n  id: \"general\",\n  name: \"General\",\n  collapsible: true,\n  settings: [{\n    type: \"switch\",\n    id: \"download\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"emoteMenu\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"hideEmojiMenu\",\n    value: false,\n    enableWith: \"emoteMenu\"\n  }, {\n    type: \"switch\",\n    id: \"autoCaps\",\n    value: false\n  }, {\n    type: \"switch\",\n    id: \"showNames\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"modifiers\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"animateOnHover\",\n    value: false\n  }]\n}, {\n  type: \"category\",\n  id: \"categories\",\n  name: \"Categories\",\n  collapsible: true,\n  settings: [{\n    type: \"switch\",\n    id: \"twitch\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"ffz\",\n    value: true\n  }, {\n    type: \"switch\",\n    id: \"bttv\",\n    value: true\n  }]\n}]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2RhdGEvc2V0dGluZ3MvZW1vdGVjb25maWcuanM/ODU5NyJdLCJuYW1lcyI6WyJ0eXBlIiwiaWQiLCJuYW1lIiwiY29sbGFwc2libGUiLCJzZXR0aW5ncyIsInZhbHVlIiwiZW5hYmxlV2l0aCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxnRUFDWDtBQUNJQSxNQUFJLEVBQUUsVUFEVjtBQUVJQyxJQUFFLEVBQUUsU0FGUjtBQUdJQyxNQUFJLEVBQUUsU0FIVjtBQUlJQyxhQUFXLEVBQUUsSUFKakI7QUFLSUMsVUFBUSxFQUFFLENBQ047QUFBQ0osUUFBSSxFQUFFLFFBQVA7QUFBaUJDLE1BQUUsRUFBRSxVQUFyQjtBQUFpQ0ksU0FBSyxFQUFFO0FBQXhDLEdBRE0sRUFFTjtBQUFDTCxRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLFdBQXJCO0FBQWtDSSxTQUFLLEVBQUU7QUFBekMsR0FGTSxFQUdOO0FBQUNMLFFBQUksRUFBRSxRQUFQO0FBQWlCQyxNQUFFLEVBQUUsZUFBckI7QUFBc0NJLFNBQUssRUFBRSxLQUE3QztBQUFvREMsY0FBVSxFQUFFO0FBQWhFLEdBSE0sRUFJTjtBQUFDTixRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLFVBQXJCO0FBQWlDSSxTQUFLLEVBQUU7QUFBeEMsR0FKTSxFQUtOO0FBQUNMLFFBQUksRUFBRSxRQUFQO0FBQWlCQyxNQUFFLEVBQUUsV0FBckI7QUFBa0NJLFNBQUssRUFBRTtBQUF6QyxHQUxNLEVBTU47QUFBQ0wsUUFBSSxFQUFFLFFBQVA7QUFBaUJDLE1BQUUsRUFBRSxXQUFyQjtBQUFrQ0ksU0FBSyxFQUFFO0FBQXpDLEdBTk0sRUFPTjtBQUFDTCxRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLGdCQUFyQjtBQUF1Q0ksU0FBSyxFQUFFO0FBQTlDLEdBUE07QUFMZCxDQURXLEVBZ0JYO0FBQ0lMLE1BQUksRUFBRSxVQURWO0FBRUlDLElBQUUsRUFBRSxZQUZSO0FBR0lDLE1BQUksRUFBRSxZQUhWO0FBSUlDLGFBQVcsRUFBRSxJQUpqQjtBQUtJQyxVQUFRLEVBQUUsQ0FDTjtBQUFDSixRQUFJLEVBQUUsUUFBUDtBQUFpQkMsTUFBRSxFQUFFLFFBQXJCO0FBQStCSSxTQUFLLEVBQUU7QUFBdEMsR0FETSxFQUVOO0FBQUNMLFFBQUksRUFBRSxRQUFQO0FBQWlCQyxNQUFFLEVBQUUsS0FBckI7QUFBNEJJLFNBQUssRUFBRTtBQUFuQyxHQUZNLEVBR047QUFBQ0wsUUFBSSxFQUFFLFFBQVA7QUFBaUJDLE1BQUUsRUFBRSxNQUFyQjtBQUE2QkksU0FBSyxFQUFFO0FBQXBDLEdBSE07QUFMZCxDQWhCVyxDQUFmIiwiZmlsZSI6Ii4vc3JjL2RhdGEvc2V0dGluZ3MvZW1vdGVjb25maWcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBbXHJcbiAgICB7XHJcbiAgICAgICAgdHlwZTogXCJjYXRlZ29yeVwiLFxyXG4gICAgICAgIGlkOiBcImdlbmVyYWxcIixcclxuICAgICAgICBuYW1lOiBcIkdlbmVyYWxcIixcclxuICAgICAgICBjb2xsYXBzaWJsZTogdHJ1ZSxcclxuICAgICAgICBzZXR0aW5nczogW1xyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwiZG93bmxvYWRcIiwgdmFsdWU6IHRydWV9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwiZW1vdGVNZW51XCIsIHZhbHVlOiB0cnVlfSxcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcImhpZGVFbW9qaU1lbnVcIiwgdmFsdWU6IGZhbHNlLCBlbmFibGVXaXRoOiBcImVtb3RlTWVudVwifSxcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcImF1dG9DYXBzXCIsIHZhbHVlOiBmYWxzZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJzaG93TmFtZXNcIiwgdmFsdWU6IHRydWV9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwibW9kaWZpZXJzXCIsIHZhbHVlOiB0cnVlfSxcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcImFuaW1hdGVPbkhvdmVyXCIsIHZhbHVlOiBmYWxzZX1cclxuICAgICAgICBdXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIHR5cGU6IFwiY2F0ZWdvcnlcIixcclxuICAgICAgICBpZDogXCJjYXRlZ29yaWVzXCIsXHJcbiAgICAgICAgbmFtZTogXCJDYXRlZ29yaWVzXCIsXHJcbiAgICAgICAgY29sbGFwc2libGU6IHRydWUsXHJcbiAgICAgICAgc2V0dGluZ3M6IFtcclxuICAgICAgICAgICAge3R5cGU6IFwic3dpdGNoXCIsIGlkOiBcInR3aXRjaFwiLCB2YWx1ZTogdHJ1ZX0sXHJcbiAgICAgICAgICAgIHt0eXBlOiBcInN3aXRjaFwiLCBpZDogXCJmZnpcIiwgdmFsdWU6IHRydWV9LFxyXG4gICAgICAgICAgICB7dHlwZTogXCJzd2l0Y2hcIiwgaWQ6IFwiYnR0dlwiLCB2YWx1ZTogdHJ1ZX1cclxuICAgICAgICBdXHJcbiAgICB9XHJcbl07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/data/settings/emoteconfig.js\n");

/***/ }),

/***/ "./src/data/strings.js":
/*!*****************************!*\
  !*** ./src/data/strings.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  Panels: {\n    plugins: \"Plugins\",\n    themes: \"Themes\",\n    customcss: \"Custom CSS\"\n  },\n  Collections: {\n    settings: {\n      name: \"Settings\",\n      general: {\n        name: \"General\",\n        emotes: {\n          name: \"Emote System\",\n          note: \"Enables BD's emote system\"\n        },\n        publicServers: {\n          name: \"Public Servers\",\n          note: \"Display public servers button\"\n        },\n        voiceDisconnect: {\n          name: \"Voice Disconnect\",\n          note: \"Disconnect from voice server when closing Discord\"\n        },\n        twentyFourHour: {\n          name: \"24-Hour Timestamps\",\n          note: \"Hides channels when in minimal mode\"\n        },\n        classNormalizer: {\n          name: \"Normalize Classes\",\n          note: \"Adds stable classes to elements to help themes. (e.g. adds .da-channels to .channels-Ie2l6A)\"\n        },\n        showToasts: {\n          name: \"Show Toasts\",\n          note: \"Shows a small notification for important information\"\n        }\n      },\n      appearance: {\n        name: \"Appearance\",\n        voiceMode: {\n          name: \"Voice Mode\",\n          note: \"Hides everything that isn't voice chat\"\n        },\n        minimalMode: {\n          name: \"Minimal Mode\",\n          note: \"Hide elements and reduce the size of elements\"\n        },\n        hideChannels: {\n          name: \"Hide Channels\",\n          note: \"Hides channels when in minimal mode\"\n        },\n        darkMode: {\n          name: \"Dark Mode\",\n          note: \"Make certain elements dark by default\"\n        },\n        coloredText: {\n          name: \"Colored Text\",\n          note: \"Make text colour the same as role color\"\n        }\n      },\n      addons: {\n        name: \"Addon Manager\",\n        addonErrors: {\n          name: \"Show Addon Errors\",\n          note: \"Shows a modal with plugin/theme errors\"\n        },\n        autoScroll: {\n          name: \"Scroll To Settings\",\n          note: \"Auto-scrolls to a plugin's settings when the button is clicked (only if out of view)\"\n        },\n        autoReload: {\n          name: \"Automatic Loading\",\n          note: \"Automatically loads, reloads, and unloads plugins and themes\"\n        }\n      },\n      customcss: {\n        name: \"Custom CSS\",\n        customcss: {\n          name: \"Custom CSS\",\n          note: \"Enables the Custom CSS tab\"\n        },\n        liveUpdate: {\n          name: \"Live Update\",\n          note: \"Updates the css as you type\"\n        },\n        startDetached: {\n          name: \"Start Detached\",\n          note: \"Clicking the Custom CSS tab opens the editor in a separate window\"\n        },\n        nativeOpen: {\n          name: \"Open in Native Editor\",\n          note: \"Clicking the Custom CSS tab opens your custom css in your native editor\"\n        }\n      },\n      developer: {\n        name: \"Developer Settings\",\n        developerMode: {\n          name: \"Developer Mode\",\n          note: \"Allows activating debugger when pressing F8\"\n        },\n        copySelector: {\n          name: \"Copy Selector\",\n          note: \"Adds a \\\"Copy Selector\\\" option to context menus when developer mode is active\"\n        }\n      },\n      window: {\n        name: \"Window Preferences\",\n        transparency: {\n          name: \"Enable Transparency\",\n          note: \"Enables the main window to be see-through (requires restart)\"\n        },\n        frame: {\n          name: \"Window Frame\",\n          note: \"Adds the native os window frame to the main window\"\n        }\n      }\n    },\n    emotes: {\n      name: \"Emotes\",\n      general: {\n        name: \"General\",\n        download: {\n          name: \"Download Emotes\",\n          note: \"Download emotes once a week to stay up to date\"\n        },\n        emoteMenu: {\n          name: \"Emote Menu\",\n          note: \"Show Twitch/Favourite emotes in emote menu\"\n        },\n        hideEmojiMenu: {\n          name: \"Hide Emoji Menu\",\n          note: \"Hides Discord's emoji menu when using emote menu\"\n        },\n        autoCaps: {\n          name: \"Emote Autocapitalization\",\n          note: \"Autocapitalize emote commands\"\n        },\n        showNames: {\n          name: \"Show Names\",\n          note: \"Show emote names on hover\"\n        },\n        modifiers: {\n          name: \"Show Emote Modifiers\",\n          note: \"Enable emote mods (flip, spin, pulse, spin2, spin3, 1spin, 2spin, 3spin, tr, bl, br, shake, shake2, shake3, flap)\"\n        },\n        animateOnHover: {\n          name: \"Animate On Hover\",\n          note: \"Only animate the emote modifiers on hover\"\n        }\n      },\n      categories: {\n        name: \"Categories\",\n        twitch: {\n          name: \"Twitch\",\n          note: \"Show Twitch global & subscriber emotes\"\n        },\n        ffz: {\n          name: \"FrankerFaceZ\",\n          note: \"Show emotes from FFZ\"\n        },\n        bttv: {\n          name: \"BetterTTV\",\n          note: \"Show emotes from BTTV\"\n        }\n      }\n    }\n  },\n  Addons: {\n    title: \"{{name}} v{{version}} by {{author}}\",\n    openFolder: \"Open {{type}} Folder\",\n    reload: \"Reload\",\n    addonSettings: \"Settings\",\n    website: \"Website\",\n    source: \"Source\",\n    server: \"Support Server\",\n    donate: \"Donate\"\n  },\n  Emotes: {\n    downloading: \"Downloading emotes in the background do not reload.\",\n    downloaded: \"All emotes successfully downloaded.\",\n    clearEmotes: \"Clear Emote Data\",\n    favoriteAction: \"Favorite!\"\n  },\n  CustomCSS: {\n    confirmationText: \"You have unsaved changes to your Custom CSS. Closing this window will lose all those changes.\",\n    update: \"Update\",\n    save: \"Save\",\n    openNative: \"Open in System Editor\",\n    openDetached: \"Detach Window\",\n    settings: \"Editor Settings\",\n    editorTitle: \"Custom CSS Editor\"\n  },\n  PublicServers: {\n    button: \"public\",\n    join: \"Join\",\n    joining: \"Joining\",\n    joined: \"Joined\",\n    loading: \"Loading\",\n    loadMore: \"Load More\",\n    notConnected: \"Not connected to DiscordServers.com!\",\n    search: \"Search\",\n    connect: \"Connect\",\n    reconnect: \"Reconnect\",\n    categories: \"Categories\",\n    connection: \"Connected as: {{username}}#{{discriminator}}\",\n    results: \"Showing {{start}}-{{end}} of {{total}} results in {{category}}\",\n    query: \"for {{query}}\"\n  },\n  Modals: {\n    confirmClose: \"Are You Sure?\",\n    okay: \"Okay\",\n    cancel: \"Cancel\",\n    name: \"Name\",\n    message: \"Message\",\n    error: \"Error\",\n    addonErrors: \"Addon Errors\"\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2RhdGEvc3RyaW5ncy5qcz9iYzcxIl0sIm5hbWVzIjpbIlBhbmVscyIsInBsdWdpbnMiLCJ0aGVtZXMiLCJjdXN0b21jc3MiLCJDb2xsZWN0aW9ucyIsInNldHRpbmdzIiwibmFtZSIsImdlbmVyYWwiLCJlbW90ZXMiLCJub3RlIiwicHVibGljU2VydmVycyIsInZvaWNlRGlzY29ubmVjdCIsInR3ZW50eUZvdXJIb3VyIiwiY2xhc3NOb3JtYWxpemVyIiwic2hvd1RvYXN0cyIsImFwcGVhcmFuY2UiLCJ2b2ljZU1vZGUiLCJtaW5pbWFsTW9kZSIsImhpZGVDaGFubmVscyIsImRhcmtNb2RlIiwiY29sb3JlZFRleHQiLCJhZGRvbnMiLCJhZGRvbkVycm9ycyIsImF1dG9TY3JvbGwiLCJhdXRvUmVsb2FkIiwibGl2ZVVwZGF0ZSIsInN0YXJ0RGV0YWNoZWQiLCJuYXRpdmVPcGVuIiwiZGV2ZWxvcGVyIiwiZGV2ZWxvcGVyTW9kZSIsImNvcHlTZWxlY3RvciIsIndpbmRvdyIsInRyYW5zcGFyZW5jeSIsImZyYW1lIiwiZG93bmxvYWQiLCJlbW90ZU1lbnUiLCJoaWRlRW1vamlNZW51IiwiYXV0b0NhcHMiLCJzaG93TmFtZXMiLCJtb2RpZmllcnMiLCJhbmltYXRlT25Ib3ZlciIsImNhdGVnb3JpZXMiLCJ0d2l0Y2giLCJmZnoiLCJidHR2IiwiQWRkb25zIiwidGl0bGUiLCJvcGVuRm9sZGVyIiwicmVsb2FkIiwiYWRkb25TZXR0aW5ncyIsIndlYnNpdGUiLCJzb3VyY2UiLCJzZXJ2ZXIiLCJkb25hdGUiLCJFbW90ZXMiLCJkb3dubG9hZGluZyIsImRvd25sb2FkZWQiLCJjbGVhckVtb3RlcyIsImZhdm9yaXRlQWN0aW9uIiwiQ3VzdG9tQ1NTIiwiY29uZmlybWF0aW9uVGV4dCIsInVwZGF0ZSIsInNhdmUiLCJvcGVuTmF0aXZlIiwib3BlbkRldGFjaGVkIiwiZWRpdG9yVGl0bGUiLCJQdWJsaWNTZXJ2ZXJzIiwiYnV0dG9uIiwiam9pbiIsImpvaW5pbmciLCJqb2luZWQiLCJsb2FkaW5nIiwibG9hZE1vcmUiLCJub3RDb25uZWN0ZWQiLCJzZWFyY2giLCJjb25uZWN0IiwicmVjb25uZWN0IiwiY29ubmVjdGlvbiIsInJlc3VsdHMiLCJxdWVyeSIsIk1vZGFscyIsImNvbmZpcm1DbG9zZSIsIm9rYXkiLCJjYW5jZWwiLCJtZXNzYWdlIiwiZXJyb3IiXSwibWFwcGluZ3MiOiJBQUFBO0FBQWU7QUFDWEEsUUFBTSxFQUFFO0FBQ0pDLFdBQU8sRUFBRSxTQURMO0FBRUpDLFVBQU0sRUFBRSxRQUZKO0FBR0pDLGFBQVMsRUFBRTtBQUhQLEdBREc7QUFNWEMsYUFBVyxFQUFFO0FBQ1RDLFlBQVEsRUFBRTtBQUNOQyxVQUFJLEVBQUUsVUFEQTtBQUVOQyxhQUFPLEVBQUU7QUFDTEQsWUFBSSxFQUFFLFNBREQ7QUFFTEUsY0FBTSxFQUFFO0FBQ0pGLGNBQUksRUFBRSxjQURGO0FBRUpHLGNBQUksRUFBRTtBQUZGLFNBRkg7QUFNTEMscUJBQWEsRUFBRTtBQUNYSixjQUFJLEVBQUUsZ0JBREs7QUFFWEcsY0FBSSxFQUFFO0FBRkssU0FOVjtBQVVMRSx1QkFBZSxFQUFFO0FBQ2JMLGNBQUksRUFBRSxrQkFETztBQUViRyxjQUFJLEVBQUU7QUFGTyxTQVZaO0FBY0xHLHNCQUFjLEVBQUU7QUFDWk4sY0FBSSxFQUFFLG9CQURNO0FBRVpHLGNBQUksRUFBRTtBQUZNLFNBZFg7QUFrQkxJLHVCQUFlLEVBQUU7QUFDYlAsY0FBSSxFQUFFLG1CQURPO0FBRWJHLGNBQUksRUFBRTtBQUZPLFNBbEJaO0FBc0JMSyxrQkFBVSxFQUFFO0FBQ1JSLGNBQUksRUFBRSxhQURFO0FBRVJHLGNBQUksRUFBRTtBQUZFO0FBdEJQLE9BRkg7QUE2Qk5NLGdCQUFVLEVBQUU7QUFDUlQsWUFBSSxFQUFFLFlBREU7QUFFUlUsaUJBQVMsRUFBRTtBQUNQVixjQUFJLEVBQUUsWUFEQztBQUVQRyxjQUFJLEVBQUU7QUFGQyxTQUZIO0FBTVJRLG1CQUFXLEVBQUU7QUFD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O0FBWVhvQyxjQUFVLEVBQUUsOENBWkQ7QUFhWEMsV0FBTyxFQUFFLGdFQWJFO0FBY1hDLFNBQUssRUFBRTtBQWRJLEdBL0xKO0FBK01YQyxRQUFNLEVBQUU7QUFDSkMsZ0JBQVksRUFBRSxlQURWO0FBRUpDLFFBQUksRUFBRSxNQUZGO0FBR0pDLFVBQU0sRUFBRSxRQUhKO0FBSUo3RSxRQUFJLEVBQUUsTUFKRjtBQUtKOEUsV0FBTyxFQUFFLFNBTEw7QUFNSkMsU0FBSyxFQUFFLE9BTkg7QUFPSi9ELGVBQVcsRUFBRTtBQVBUO0FBL01HLENBQWYiLCJmaWxlIjoiLi9zcmMvZGF0YS9zdHJpbmdzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgUGFuZWxzOiB7XHJcbiAgICAgICAgcGx1Z2luczogXCJQbHVnaW5zXCIsXHJcbiAgICAgICAgdGhlbWVzOiBcIlRoZW1lc1wiLFxyXG4gICAgICAgIGN1c3RvbWNzczogXCJDdXN0b20gQ1NTXCJcclxuICAgIH0sXHJcbiAgICBDb2xsZWN0aW9uczoge1xyXG4gICAgICAgIHNldHRpbmdzOiB7XHJcbiAgICAgICAgICAgIG5hbWU6IFwiU2V0dGluZ3NcIixcclxuICAgICAgICAgICAgZ2VuZXJhbDoge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogXCJHZW5lcmFsXCIsXHJcbiAgICAgICAgICAgICAgICBlbW90ZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkVtb3RlIFN5c3RlbVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiRW5hYmxlcyBCRCdzIGVtb3RlIHN5c3RlbVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcHVibGljU2VydmVyczoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiUHVibGljIFNlcnZlcnNcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkRpc3BsYXkgcHVibGljIHNlcnZlcnMgYnV0dG9uXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB2b2ljZURpc2Nvbm5lY3Q6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlZvaWNlIERpc2Nvbm5lY3RcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkRpc2Nvbm5lY3QgZnJvbSB2b2ljZSBzZXJ2ZXIgd2hlbiBjbG9zaW5nIERpc2NvcmRcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHR3ZW50eUZvdXJIb3VyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCIyNC1Ib3VyIFRpbWVzdGFtcHNcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkhpZGVzIGNoYW5uZWxzIHdoZW4gaW4gbWluaW1hbCBtb2RlXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjbGFzc05vcm1hbGl6ZXI6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIk5vcm1hbGl6ZSBDbGFzc2VzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbm90ZTogXCJBZGRzIHN0YWJsZSBjbGFzc2VzIHRvIGVsZW1lbnRzIHRvIGhlbHAgdGhlbWVzLiAoZS5nLiBhZGRzIC5kYS1jaGFubmVscyB0byAuY2hhbm5lbHMtSWUybDZBKVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc2hvd1RvYXN0czoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU2hvdyBUb2FzdHNcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIlNob3dzIGEgc21hbGwgbm90aWZpY2F0aW9uIGZvciBpbXBvcnRhbnQgaW5mb3JtYXRpb25cIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBhcHBlYXJhbmNlOiB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkFwcGVhcmFuY2VcIixcclxuICAgICAgICAgICAgICAgIHZvaWNlTW9kZToge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiVm9pY2UgTW9kZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiSGlkZXMgZXZlcnl0aGluZyB0aGF0IGlzbid0IHZvaWNlIGNoYXRcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG1pbmltYWxNb2RlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJNaW5pbWFsIE1vZGVcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkhpZGUgZWxlbWVudHMgYW5kIHJlZHVjZSB0aGUgc2l6ZSBvZiBlbGVtZW50c1wiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgaGlkZUNoYW5uZWxzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJIaWRlIENoYW5uZWxzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbm90ZTogXCJIaWRlcyBjaGFubmVscyB3aGVuIGluIG1pbmltYWwgbW9kZVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZGFya01vZGU6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkRhcmsgTW9kZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiTWFrZSBjZXJ0YWluIGVsZW1lbnRzIGRhcmsgYnkgZGVmYXVsdFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY29sb3JlZFRleHQ6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkNvbG9yZWQgVGV4dFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiTWFrZSB0ZXh0IGNvbG91ciB0aGUgc2FtZSBhcyByb2xlIGNvbG9yXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgYWRkb25zOiB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkFkZG9uIE1hbmFnZXJcIixcclxuICAgICAgICAgICAgICAgIGFkZG9uRXJyb3JzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTaG93IEFkZG9uIEVycm9yc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiU2hvd3MgYSBtb2RhbCB3aXRoIHBsdWdpbi90aGVtZSBlcnJvcnNcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGF1dG9TY3JvbGw6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlNjcm9sbCBUbyBTZXR0aW5nc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiQXV0by1zY3JvbGxzIHRvIGEgcGx1Z2luJ3Mgc2V0dGluZ3Mgd2hlbiB0aGUgYnV0dG9uIGlzIGNsaWNrZWQgKG9ubHkgaWYgb3V0IG9mIHZpZXcpXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBhdXRvUmVsb2FkOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJBdXRvbWF0aWMgTG9hZGluZ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiQXV0b21hdGljYWxseSBsb2FkcywgcmVsb2FkcywgYW5kIHVubG9hZHMgcGx1Z2lucyBhbmQgdGhlbWVzXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGN1c3RvbWNzczoge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogXCJDdXN0b20gQ1NTXCIsXHJcbiAgICAgICAgICAgICAgICBjdXN0b21jc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkN1c3RvbSBDU1NcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkVuYWJsZXMgdGhlIEN1c3RvbSBDU1MgdGFiXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBsaXZlVXBkYXRlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJMaXZlIFVwZGF0ZVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiVXBkYXRlcyB0aGUgY3NzIGFzIHlvdSB0eXBlXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBzdGFydERldGFjaGVkOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTdGFydCBEZXRhY2hlZFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiQ2xpY2tpbmcgdGhlIEN1c3RvbSBDU1MgdGFiIG9wZW5zIHRoZSBlZGl0b3IgaW4gYSBzZXBhcmF0ZSB3aW5kb3dcIixcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBuYXRpdmVPcGVuOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJPcGVuIGluIE5hdGl2ZSBFZGl0b3JcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkNsaWNraW5nIHRoZSBDdXN0b20gQ1NTIHRhYiBvcGVucyB5b3VyIGN1c3RvbSBjc3MgaW4geW91ciBuYXRpdmUgZWRpdG9yXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGV2ZWxvcGVyOiB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkRldmVsb3BlciBTZXR0aW5nc1wiLFxyXG4gICAgICAgICAgICAgICAgZGV2ZWxvcGVyTW9kZToge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRGV2ZWxvcGVyIE1vZGVcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkFsbG93cyBhY3RpdmF0aW5nIGRlYnVnZ2VyIHdoZW4gcHJlc3NpbmcgRjhcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNvcHlTZWxlY3Rvcjoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiQ29weSBTZWxlY3RvclwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiQWRkcyBhIFxcXCJDb3B5IFNlbGVjdG9yXFxcIiBvcHRpb24gdG8gY29udGV4dCBtZW51cyB3aGVuIGRldmVsb3BlciBtb2RlIGlzIGFjdGl2ZVwiXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHdpbmRvdzoge1xyXG4gICAgICAgICAgICAgICAgbmFtZTogXCJXaW5kb3cgUHJlZmVyZW5jZXNcIixcclxuICAgICAgICAgICAgICAgIHRyYW5zcGFyZW5jeToge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRW5hYmxlIFRyYW5zcGFyZW5jeVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiRW5hYmxlcyB0aGUgbWFpbiB3aW5kb3cgdG8gYmUgc2VlLXRocm91Z2ggKHJlcXVpcmVzIHJlc3RhcnQpXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmcmFtZToge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiV2luZG93IEZyYW1lXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbm90ZTogXCJBZGRzIHRoZSBuYXRpdmUgb3Mgd2luZG93IGZyYW1lIHRvIHRoZSBtYWluIHdpbmRvd1wiXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGVtb3Rlczoge1xyXG4gICAgICAgICAgICBuYW1lOiBcIkVtb3Rlc1wiLFxyXG4gICAgICAgICAgICBnZW5lcmFsOiB7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBcIkdlbmVyYWxcIixcclxuICAgICAgICAgICAgICAgIGRvd25sb2FkOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJEb3dubG9hZCBFbW90ZXNcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkRvd25sb2FkIGVtb3RlcyBvbmNlIGEgd2VlayB0byBzdGF5IHVwIHRvIGRhdGVcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVtb3RlTWVudToge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiRW1vdGUgTWVudVwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiU2hvdyBUd2l0Y2gvRmF2b3VyaXRlIGVtb3RlcyBpbiBlbW90ZSBtZW51XCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBoaWRlRW1vamlNZW51OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJIaWRlIEVtb2ppIE1lbnVcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIkhpZGVzIERpc2NvcmQncyBlbW9qaSBtZW51IHdoZW4gdXNpbmcgZW1vdGUgbWVudVwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYXV0b0NhcHM6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkVtb3RlIEF1dG9jYXBpdGFsaXphdGlvblwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiQXV0b2NhcGl0YWxpemUgZW1vdGUgY29tbWFuZHNcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHNob3dOYW1lczoge1xyXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiU2hvdyBOYW1lc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiU2hvdyBlbW90ZSBuYW1lcyBvbiBob3ZlclwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbW9kaWZpZXJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJTaG93IEVtb3RlIE1vZGlmaWVyc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiRW5hYmxlIGVtb3RlIG1vZHMgKGZsaXAsIHNwaW4sIHB1bHNlLCBzcGluMiwgc3BpbjMsIDFzcGluLCAyc3BpbiwgM3NwaW4sIHRyLCBibCwgYnIsIHNoYWtlLCBzaGFrZTIsIHNoYWtlMywgZmxhcClcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGFuaW1hdGVPbkhvdmVyOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJBbmltYXRlIE9uIEhvdmVyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgbm90ZTogXCJPbmx5IGFuaW1hdGUgdGhlIGVtb3RlIG1vZGlmaWVycyBvbiBob3ZlclwiXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNhdGVnb3JpZXM6IHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IFwiQ2F0ZWdvcmllc1wiLFxyXG4gICAgICAgICAgICAgICAgdHdpdGNoOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJUd2l0Y2hcIixcclxuICAgICAgICAgICAgICAgICAgICBub3RlOiBcIlNob3cgVHdpdGNoIGdsb2JhbCAmIHN1YnNjcmliZXIgZW1vdGVzXCJcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmZno6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkZyYW5rZXJGYWNlWlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiU2hvdyBlbW90ZXMgZnJvbSBGRlpcIlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ0dHY6IHtcclxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIkJldHRlclRUVlwiLFxyXG4gICAgICAgICAgICAgICAgICAgIG5vdGU6IFwiU2hvdyBlbW90ZXMgZnJvbSBCVFRWXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0sXHJcbiAgICBBZGRvbnM6IHtcclxuICAgICAgICB0aXRsZTogXCJ7e25hbWV9fSB2e3t2ZXJzaW9ufX0gYnkge3thdXRob3J9fVwiLFxyXG4gICAgICAgIG9wZW5Gb2xkZXI6IFwiT3BlbiB7e3R5cGV9fSBGb2xkZXJcIixcclxuICAgICAgICByZWxvYWQ6IFwiUmVsb2FkXCIsXHJcbiAgICAgICAgYWRkb25TZXR0aW5nczogXCJTZXR0aW5nc1wiLFxyXG4gICAgICAgIHdlYnNpdGU6IFwiV2Vic2l0ZVwiLFxyXG4gICAgICAgIHNvdXJjZTogXCJTb3VyY2VcIixcclxuICAgICAgICBzZXJ2ZXI6IFwiU3VwcG9ydCBTZXJ2ZXJcIixcclxuICAgICAgICBkb25hdGU6IFwiRG9uYXRlXCJcclxuICAgIH0sXHJcbiAgICBFbW90ZXM6IHtcclxuICAgICAgICBkb3dubG9hZGluZzogXCJEb3dubG9hZGluZyBlbW90ZXMgaW4gdGhlIGJhY2tncm91bmQgZG8gbm90IHJlbG9hZC5cIixcclxuICAgICAgICBkb3dubG9hZGVkOiBcIkFsbCBlbW90ZXMgc3VjY2Vzc2Z1bGx5IGRvd25sb2FkZWQuXCIsXHJcbiAgICAgICAgY2xlYXJFbW90ZXM6IFwiQ2xlYXIgRW1vdGUgRGF0YVwiLFxyXG4gICAgICAgIGZhdm9yaXRlQWN0aW9uOiBcIkZhdm9yaXRlIVwiXHJcbiAgICB9LFxyXG4gICAgQ3VzdG9tQ1NTOiB7XHJcbiAgICAgICAgY29uZmlybWF0aW9uVGV4dDogXCJZb3UgaGF2ZSB1bnNhdmVkIGNoYW5nZXMgdG8geW91ciBDdXN0b20gQ1NTLiBDbG9zaW5nIHRoaXMgd2luZG93IHdpbGwgbG9zZSBhbGwgdGhvc2UgY2hhbmdlcy5cIixcclxuICAgICAgICB1cGRhdGU6IFwiVXBkYXRlXCIsXHJcbiAgICAgICAgc2F2ZTogXCJTYXZlXCIsXHJcbiAgICAgICAgb3Blbk5hdGl2ZTogXCJPcGVuIGluIFN5c3RlbSBFZGl0b3JcIixcclxuICAgICAgICBvcGVuRGV0YWNoZWQ6IFwiRGV0YWNoIFdpbmRvd1wiLFxyXG4gICAgICAgIHNldHRpbmdzOiBcIkVkaXRvciBTZXR0aW5nc1wiLFxyXG4gICAgICAgIGVkaXRvclRpdGxlOiBcIkN1c3RvbSBDU1MgRWRpdG9yXCJcclxuICAgIH0sXHJcbiAgICBQdWJsaWNTZXJ2ZXJzOiB7XHJcbiAgICAgICAgYnV0dG9uOiBcInB1YmxpY1wiLFxyXG4gICAgICAgIGpvaW46IFwiSm9pblwiLFxyXG4gICAgICAgIGpvaW5pbmc6IFwiSm9pbmluZ1wiLFxyXG4gICAgICAgIGpvaW5lZDogXCJKb2luZWRcIixcclxuICAgICAgICBsb2FkaW5nOiBcIkxvYWRpbmdcIixcclxuICAgICAgICBsb2FkTW9yZTogXCJMb2FkIE1vcmVcIixcclxuICAgICAgICBub3RDb25uZWN0ZWQ6IFwiTm90IGNvbm5lY3RlZCB0byBEaXNjb3JkU2VydmVycy5jb20hXCIsXHJcbiAgICAgICAgc2VhcmNoOiBcIlNlYXJjaFwiLFxyXG4gICAgICAgIGNvbm5lY3Q6IFwiQ29ubmVjdFwiLFxyXG4gICAgICAgIHJlY29ubmVjdDogXCJSZWNvbm5lY3RcIixcclxuICAgICAgICBjYXRlZ29yaWVzOiBcIkNhdGVnb3JpZXNcIixcclxuICAgICAgICBjb25uZWN0aW9uOiBcIkNvbm5lY3RlZCBhczoge3t1c2VybmFtZX19I3t7ZGlzY3JpbWluYXRvcn19XCIsXHJcbiAgICAgICAgcmVzdWx0czogXCJTaG93aW5nIHt7c3RhcnR9fS17e2VuZH19IG9mIHt7dG90YWx9fSByZXN1bHRzIGluIHt7Y2F0ZWdvcnl9fVwiLFxyXG4gICAgICAgIHF1ZXJ5OiBcImZvciB7e3F1ZXJ5fX1cIlxyXG4gICAgfSxcclxuICAgIE1vZGFsczoge1xyXG4gICAgICAgIGNvbmZpcm1DbG9zZTogXCJBcmUgWW91IFN1cmU/XCIsXHJcbiAgICAgICAgb2theTogXCJPa2F5XCIsXHJcbiAgICAgICAgY2FuY2VsOiBcIkNhbmNlbFwiLFxyXG4gICAgICAgIG5hbWU6IFwiTmFtZVwiLFxyXG4gICAgICAgIG1lc3NhZ2U6IFwiTWVzc2FnZVwiLFxyXG4gICAgICAgIGVycm9yOiBcIkVycm9yXCIsXHJcbiAgICAgICAgYWRkb25FcnJvcnM6IFwiQWRkb24gRXJyb3JzXCJcclxuICAgIH1cclxufTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/data/strings.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CoreWrapper; });\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var _modules_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/core */ \"./src/modules/core.js\");\n/* harmony import */ var _modules_pluginapi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/pluginapi */ \"./src/modules/pluginapi.js\");\n/* harmony import */ var _modules_pluginmanager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/pluginmanager */ \"./src/modules/pluginmanager.js\");\n/* harmony import */ var _modules_thememanager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/thememanager */ \"./src/modules/thememanager.js\");\n/* harmony import */ var _modules_emitter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/emitter */ \"./src/modules/emitter.js\");\n/* harmony import */ var _modules_settingsmanager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/settingsmanager */ \"./src/modules/settingsmanager.js\");\n/* harmony import */ var _modules_datastore__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/datastore */ \"./src/modules/datastore.js\");\n/* harmony import */ var _builtins_emotes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./builtins/emotes */ \"./src/builtins/emotes.js\");\n/* harmony import */ var _modules_dommanager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/dommanager */ \"./src/modules/dommanager.js\");\n/* harmony import */ var _modules_utilities__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/utilities */ \"./src/modules/utilities.js\");\n/* harmony import */ var _modules_reactcomponents__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/reactcomponents */ \"./src/modules/reactcomponents.js\");\n/* harmony import */ var _modules_strings__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/strings */ \"./src/modules/strings.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n // Perform some setup\n// proxyLocalStorage();\n\nconst loadingIcon = document.createElement(\"div\");\nloadingIcon.className = \"bd-loaderv2\";\nloadingIcon.title = \"BandagedBD is loading...\";\ndocument.body.appendChild(loadingIcon); // window.Core = Core;\n\nwindow.BdApi = _modules_pluginapi__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; // window.settings = SettingsInfo;\n// window.settingsCookie = SettingsCookie;\n// window.pluginCookie = PluginCookie;\n// window.themeCookie = ThemeCookie;\n\nwindow.pluginModule = _modules_pluginmanager__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\nwindow.themeModule = _modules_thememanager__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; // window.bdthemes = Themes;\n// window.bdplugins = Plugins;\n\nwindow.bdEmotes = _builtins_emotes__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Emotes;\nwindow.bemotes = _builtins_emotes__WEBPACK_IMPORTED_MODULE_8__[\"default\"].blacklist; // window.bdPluginStorage = bdPluginStorage;\n\nwindow.settingsModule = _modules_settingsmanager__WEBPACK_IMPORTED_MODULE_6__[\"default\"];\nwindow.DataStore = _modules_datastore__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\nwindow.DomManager = _modules_dommanager__WEBPACK_IMPORTED_MODULE_9__[\"default\"];\nwindow.utils = _modules_utilities__WEBPACK_IMPORTED_MODULE_10__[\"default\"];\nwindow.Components = _modules_reactcomponents__WEBPACK_IMPORTED_MODULE_11__[\"default\"];\nwindow.BDEvents = _modules_emitter__WEBPACK_IMPORTED_MODULE_5__[\"default\"];\nwindow.bdConfig = data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"];\nwindow.Strings = _modules_strings__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\nclass CoreWrapper {\n  constructor(config) {\n    _modules_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setConfig(config);\n  }\n\n  init() {\n    _modules_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init();\n  }\n\n}\n\nfunction patchModuleLoad() {\n  const namespace = \"betterdiscord\";\n  const prefix = `${namespace}/`;\n\n  const Module = __webpack_require__(/*! module */ \"module\");\n\n  const load = Module._load; // const resolveFilename = Module._resolveFilename;\n\n  Module._load = function (request) {\n    if (request === namespace || request.startsWith(prefix)) {\n      const requested = request.substr(prefix.length);\n      if (requested == \"api\") return _modules_pluginapi__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n    }\n\n    return load.apply(this, arguments);\n  }; // Module._resolveFilename = function (request, parent, isMain) {\n  //     if (request === \"betterdiscord\" || request.startsWith(\"betterdiscord/\")) {\n  //         const contentPath = PluginManager.getPluginPathByModule(parent);\n  //         if (contentPath) return request;\n  //     }\n  //     return resolveFilename.apply(this, arguments);\n  // };\n\n\n  return function () {\n    Module._load = load;\n  };\n}\n\npatchModuleLoad(); // var settingsPanel, emoteModule, quickEmoteMenu, voiceMode,, dMode, publicServersModule;\n// var bdConfig = null;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL2luZGV4LmpzP2I2MzUiXSwibmFtZXMiOlsibG9hZGluZ0ljb24iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJ0aXRsZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsIndpbmRvdyIsIkJkQXBpIiwicGx1Z2luTW9kdWxlIiwiUGx1Z2luTWFuYWdlciIsInRoZW1lTW9kdWxlIiwiVGhlbWVNYW5hZ2VyIiwiYmRFbW90ZXMiLCJFbW90ZU1vZHVsZSIsIkVtb3RlcyIsImJlbW90ZXMiLCJibGFja2xpc3QiLCJzZXR0aW5nc01vZHVsZSIsIlNldHRpbmdzIiwiRGF0YVN0b3JlIiwiRG9tTWFuYWdlciIsInV0aWxzIiwiVXRpbGl0aWVzIiwiQ29tcG9uZW50cyIsIlJlYWN0Q29tcG9uZW50cyIsIkJERXZlbnRzIiwiRXZlbnRzIiwiYmRDb25maWciLCJDb25maWciLCJTdHJpbmdzIiwiQ29yZVdyYXBwZXIiLCJjb25zdHJ1Y3RvciIsImNvbmZpZyIsIkNvcmUiLCJzZXRDb25maWciLCJpbml0IiwicGF0Y2hNb2R1bGVMb2FkIiwibmFtZXNwYWNlIiwicHJlZml4IiwiTW9kdWxlIiwicmVxdWlyZSIsImxvYWQiLCJfbG9hZCIsInJlcXVlc3QiLCJzdGFydHNXaXRoIiwicmVxdWVzdGVkIiwic3Vic3RyIiwibGVuZ3RoIiwiYXBwbHkiLCJhcmd1bWVudHMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtDQUdBO0FBQ0E7O0FBQ0EsTUFBTUEsV0FBVyxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBcEI7QUFDQUYsV0FBVyxDQUFDRyxTQUFaLEdBQXdCLGFBQXhCO0FBQ0FILFdBQVcsQ0FBQ0ksS0FBWixHQUFvQiwwQkFBcEI7QUFDQUgsUUFBUSxDQUFDSSxJQUFULENBQWNDLFdBQWQsQ0FBMEJOLFdBQTFCLEUsQ0FFQTs7QUFDQU8sTUFBTSxDQUFDQyxLQUFQLEdBQWVBLDBEQUFmLEMsQ0FDQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQUQsTUFBTSxDQUFDRSxZQUFQLEdBQXNCQyw4REFBdEI7QUFDQUgsTUFBTSxDQUFDSSxXQUFQLEdBQXFCQyw2REFBckIsQyxDQUNBO0FBQ0E7O0FBQ0FMLE1BQU0sQ0FBQ00sUUFBUCxHQUFrQkMsd0RBQVcsQ0FBQ0MsTUFBOUI7QUFDQVIsTUFBTSxDQUFDUyxPQUFQLEdBQWlCRix3REFBVyxDQUFDRyxTQUE3QixDLENBQ0E7O0FBQ0FWLE1BQU0sQ0FBQ1csY0FBUCxHQUF3QkMsZ0VBQXhCO0FBQ0FaLE1BQU0sQ0FBQ2EsU0FBUCxHQUFtQkEsMERBQW5CO0FBR0FiLE1BQU0sQ0FBQ2MsVUFBUCxHQUFvQkEsMkRBQXBCO0FBQ0FkLE1BQU0sQ0FBQ2UsS0FBUCxHQUFlQywyREFBZjtBQUNBaEIsTUFBTSxDQUFDaUIsVUFBUCxHQUFvQkMsaUVBQXBCO0FBRUFsQixNQUFNLENBQUNtQixRQUFQLEdBQWtCQyx3REFBbEI7QUFDQXBCLE1BQU0sQ0FBQ3FCLFFBQVAsR0FBa0JDLDJDQUFsQjtBQUNBdEIsTUFBTSxDQUFDdUIsT0FBUCxHQUFpQkEseURBQWpCO0FBRWUsTUFBTUMsV0FBTixDQUFrQjtBQUM3QkMsYUFBVyxDQUFDQyxNQUFELEVBQVM7QUFDaEJDLHlEQUFJLENBQUNDLFNBQUwsQ0FBZUYsTUFBZjtBQUNIOztBQUVERyxNQUFJLEdBQUc7QUFDSEYseURBQUksQ0FBQ0UsSUFBTDtBQUNIOztBQVA0Qjs7QUFVakMsU0FBU0MsZUFBVCxHQUEyQjtBQUN2QixRQUFNQyxTQUFTLEdBQUcsZUFBbEI7QUFDQSxRQUFNQyxNQUFNLEdBQUksR0FBRUQsU0FBVSxHQUE1Qjs7QUFDQSxRQUFNRSxNQUFNLEdBQUdDLG1CQUFPLENBQUMsc0JBQUQsQ0FBdEI7O0FBQ0EsUUFBTUMsSUFBSSxHQUFHRixNQUFNLENBQUNHLEtBQXBCLENBSnVCLENBS3ZCOztBQUVBSCxRQUFNLENBQUNHLEtBQVAsR0FBZSxVQUFTQyxPQUFULEVBQWtCO0FBQzdCLFFBQUlBLE9BQU8sS0FBS04sU0FBWixJQUF5Qk0sT0FBTyxDQUFDQyxVQUFSLENBQW1CTixNQUFuQixDQUE3QixFQUF5RDtBQUNyRCxZQUFNTyxTQUFTLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixDQUFlUixNQUFNLENBQUNTLE1BQXRCLENBQWxCO0FBQ0EsVUFBSUYsU0FBUyxJQUFJLEtBQWpCLEVBQXdCLE9BQU90QywwREFBUDtBQUMzQjs7QUFFRCxXQUFPa0MsSUFBSSxDQUFDTyxLQUFMLENBQVcsSUFBWCxFQUFpQkMsU0FBakIsQ0FBUDtBQUNILEdBUEQsQ0FQdUIsQ0FnQnZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOzs7QUFFQSxTQUFPLFlBQVc7QUFDZFYsVUFBTSxDQUFDRyxLQUFQLEdBQWVELElBQWY7QUFDSCxHQUZEO0FBR0g7O0FBRURMLGVBQWUsRyxDQUVmO0FBQ0EiLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbmZpZ30gZnJvbSBcImRhdGFcIjtcclxuaW1wb3J0IENvcmUgZnJvbSBcIi4vbW9kdWxlcy9jb3JlXCI7XHJcbmltcG9ydCBCZEFwaSBmcm9tIFwiLi9tb2R1bGVzL3BsdWdpbmFwaVwiO1xyXG5pbXBvcnQgUGx1Z2luTWFuYWdlciBmcm9tIFwiLi9tb2R1bGVzL3BsdWdpbm1hbmFnZXJcIjtcclxuaW1wb3J0IFRoZW1lTWFuYWdlciBmcm9tIFwiLi9tb2R1bGVzL3RoZW1lbWFuYWdlclwiO1xyXG5pbXBvcnQgRXZlbnRzIGZyb20gXCIuL21vZHVsZXMvZW1pdHRlclwiO1xyXG5pbXBvcnQgU2V0dGluZ3MgZnJvbSBcIi4vbW9kdWxlcy9zZXR0aW5nc21hbmFnZXJcIjtcclxuaW1wb3J0IERhdGFTdG9yZSBmcm9tIFwiLi9tb2R1bGVzL2RhdGFzdG9yZVwiO1xyXG5pbXBvcnQgRW1vdGVNb2R1bGUgZnJvbSBcIi4vYnVpbHRpbnMvZW1vdGVzXCI7XHJcbmltcG9ydCBEb21NYW5hZ2VyIGZyb20gXCIuL21vZHVsZXMvZG9tbWFuYWdlclwiO1xyXG5pbXBvcnQgVXRpbGl0aWVzIGZyb20gXCIuL21vZHVsZXMvdXRpbGl0aWVzXCI7XHJcbmltcG9ydCBSZWFjdENvbXBvbmVudHMgZnJvbSBcIi4vbW9kdWxlcy9yZWFjdGNvbXBvbmVudHNcIjtcclxuaW1wb3J0IFN0cmluZ3MgZnJvbSBcIi4vbW9kdWxlcy9zdHJpbmdzXCI7XHJcblxyXG4vLyBQZXJmb3JtIHNvbWUgc2V0dXBcclxuLy8gcHJveHlMb2NhbFN0b3JhZ2UoKTtcclxuY29uc3QgbG9hZGluZ0ljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5sb2FkaW5nSWNvbi5jbGFzc05hbWUgPSBcImJkLWxvYWRlcnYyXCI7XHJcbmxvYWRpbmdJY29uLnRpdGxlID0gXCJCYW5kYWdlZEJEIGlzIGxvYWRpbmcuLi5cIjtcclxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsb2FkaW5nSWNvbik7XHJcblxyXG4vLyB3aW5kb3cuQ29yZSA9IENvcmU7XHJcbndpbmRvdy5CZEFwaSA9IEJkQXBpO1xyXG4vLyB3aW5kb3cuc2V0dGluZ3MgPSBTZXR0aW5nc0luZm87XHJcbi8vIHdpbmRvdy5zZXR0aW5nc0Nvb2tpZSA9IFNldHRpbmdzQ29va2llO1xyXG4vLyB3aW5kb3cucGx1Z2luQ29va2llID0gUGx1Z2luQ29va2llO1xyXG4vLyB3aW5kb3cudGhlbWVDb29raWUgPSBUaGVtZUNvb2tpZTtcclxud2luZG93LnBsdWdpbk1vZHVsZSA9IFBsdWdpbk1hbmFnZXI7XHJcbndpbmRvdy50aGVtZU1vZHVsZSA9IFRoZW1lTWFuYWdlcjtcclxuLy8gd2luZG93LmJkdGhlbWVzID0gVGhlbWVzO1xyXG4vLyB3aW5kb3cuYmRwbHVnaW5zID0gUGx1Z2lucztcclxud2luZG93LmJkRW1vdGVzID0gRW1vdGVNb2R1bGUuRW1vdGVzO1xyXG53aW5kb3cuYmVtb3RlcyA9IEVtb3RlTW9kdWxlLmJsYWNrbGlzdDtcclxuLy8gd2luZG93LmJkUGx1Z2luU3RvcmFnZSA9IGJkUGx1Z2luU3RvcmFnZTtcclxud2luZG93LnNldHRpbmdzTW9kdWxlID0gU2V0dGluZ3M7XHJcbndpbmRvdy5EYXRhU3RvcmUgPSBEYXRhU3RvcmU7XHJcblxyXG5cclxud2luZG93LkRvbU1hbmFnZXIgPSBEb21NYW5hZ2VyO1xyXG53aW5kb3cudXRpbHMgPSBVdGlsaXRpZXM7XHJcbndpbmRvdy5Db21wb25lbnRzID0gUmVhY3RDb21wb25lbnRzO1xyXG5cclxud2luZG93LkJERXZlbnRzID0gRXZlbnRzO1xyXG53aW5kb3cuYmRDb25maWcgPSBDb25maWc7XHJcbndpbmRvdy5TdHJpbmdzID0gU3RyaW5ncztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvcmVXcmFwcGVyIHtcclxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZykge1xyXG4gICAgICAgIENvcmUuc2V0Q29uZmlnKGNvbmZpZyk7XHJcbiAgICB9XHJcblxyXG4gICAgaW5pdCgpIHtcclxuICAgICAgICBDb3JlLmluaXQoKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gcGF0Y2hNb2R1bGVMb2FkKCkge1xyXG4gICAgY29uc3QgbmFtZXNwYWNlID0gXCJiZXR0ZXJkaXNjb3JkXCI7XHJcbiAgICBjb25zdCBwcmVmaXggPSBgJHtuYW1lc3BhY2V9L2A7XHJcbiAgICBjb25zdCBNb2R1bGUgPSByZXF1aXJlKFwibW9kdWxlXCIpO1xyXG4gICAgY29uc3QgbG9hZCA9IE1vZHVsZS5fbG9hZDtcclxuICAgIC8vIGNvbnN0IHJlc29sdmVGaWxlbmFtZSA9IE1vZHVsZS5fcmVzb2x2ZUZpbGVuYW1lO1xyXG5cclxuICAgIE1vZHVsZS5fbG9hZCA9IGZ1bmN0aW9uKHJlcXVlc3QpIHtcclxuICAgICAgICBpZiAocmVxdWVzdCA9PT0gbmFtZXNwYWNlIHx8IHJlcXVlc3Quc3RhcnRzV2l0aChwcmVmaXgpKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlcXVlc3RlZCA9IHJlcXVlc3Quc3Vic3RyKHByZWZpeC5sZW5ndGgpO1xyXG4gICAgICAgICAgICBpZiAocmVxdWVzdGVkID09IFwiYXBpXCIpIHJldHVybiBCZEFwaTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiBsb2FkLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XHJcbiAgICB9O1xyXG5cclxuICAgIC8vIE1vZHVsZS5fcmVzb2x2ZUZpbGVuYW1lID0gZnVuY3Rpb24gKHJlcXVlc3QsIHBhcmVudCwgaXNNYWluKSB7XHJcbiAgICAvLyAgICAgaWYgKHJlcXVlc3QgPT09IFwiYmV0dGVyZGlzY29yZFwiIHx8IHJlcXVlc3Quc3RhcnRzV2l0aChcImJldHRlcmRpc2NvcmQvXCIpKSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnN0IGNvbnRlbnRQYXRoID0gUGx1Z2luTWFuYWdlci5nZXRQbHVnaW5QYXRoQnlNb2R1bGUocGFyZW50KTtcclxuICAgIC8vICAgICAgICAgaWYgKGNvbnRlbnRQYXRoKSByZXR1cm4gcmVxdWVzdDtcclxuICAgIC8vICAgICB9XHJcblxyXG4gICAgLy8gICAgIHJldHVybiByZXNvbHZlRmlsZW5hbWUuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxuICAgIC8vIH07XHJcblxyXG4gICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIE1vZHVsZS5fbG9hZCA9IGxvYWQ7XHJcbiAgICB9O1xyXG59XHJcblxyXG5wYXRjaE1vZHVsZUxvYWQoKTtcclxuXHJcbi8vIHZhciBzZXR0aW5nc1BhbmVsLCBlbW90ZU1vZHVsZSwgcXVpY2tFbW90ZU1lbnUsIHZvaWNlTW9kZSwsIGRNb2RlLCBwdWJsaWNTZXJ2ZXJzTW9kdWxlO1xyXG4vLyB2YXIgYmRDb25maWcgPSBudWxsOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/modules/addonmanager.js":
/*!*************************************!*\
  !*** ./src/modules/addonmanager.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AddonManager; });\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/modules/logger.js\");\n/* harmony import */ var _settingsmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settingsmanager */ \"./src/modules/settingsmanager.js\");\n/* harmony import */ var _emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emitter */ \"./src/modules/emitter.js\");\n/* harmony import */ var _datastore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./datastore */ \"./src/modules/datastore.js\");\n/* harmony import */ var _structs_addonerror__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../structs/addonerror */ \"./src/structs/addonerror.js\");\n/* harmony import */ var _structs_metaerror__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../structs/metaerror */ \"./src/structs/metaerror.js\");\n/* harmony import */ var _ui_toasts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/toasts */ \"./src/ui/toasts.js\");\n\n\n\n\n\n\n\n\n\nconst path = __webpack_require__(/*! path */ \"path\");\n\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n\nconst Module = __webpack_require__(/*! module */ \"module\").Module;\n\nModule.globalPaths.push(path.resolve(__webpack_require__(/*! electron */ \"electron\").remote.app.getAppPath(), \"node_modules\"));\nconst splitRegex = /[^\\S\\r\\n]*?\\n[^\\S\\r\\n]*?\\*[^\\S\\r\\n]?/;\nconst escapedAtRegex = /^\\\\@/;\n\nconst stripBOM = function (fileContent) {\n  if (fileContent.charCodeAt(0) === 0xFEFF) {\n    fileContent = fileContent.slice(1);\n  }\n\n  return fileContent;\n};\n\nclass AddonManager {\n  get name() {\n    return \"\";\n  }\n\n  get moduleExtension() {\n    return \"\";\n  }\n\n  get extension() {\n    return \"\";\n  }\n\n  get addonFolder() {\n    return \"\";\n  }\n\n  get prefix() {\n    return \"addon\";\n  }\n\n  get collection() {\n    return \"settings\";\n  }\n\n  get category() {\n    return \"addons\";\n  }\n\n  get id() {\n    return \"autoReload\";\n  }\n\n  emit(event, ...args) {\n    return _emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"].emit(`${this.prefix}-${event}`, ...args);\n  }\n\n  constructor() {\n    this.timeCache = {};\n    this.addonList = [];\n    this.state = {};\n  }\n\n  initialize() {\n    this.originalRequire = Module._extensions[this.moduleExtension];\n    Module._extensions[this.moduleExtension] = this.getAddonRequire();\n    _settingsmanager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].on(this.collection, this.category, this.id, enabled => {\n      if (enabled) this.watchAddons();else this.unwatchAddons();\n    });\n    return this.loadAllAddons();\n  } // Subclasses should overload this and modify the addon object as needed to fully load it\n\n\n  initializeAddon() {\n    return;\n  } // Subclasses should overload this and modify the fileContent as needed to require() the file\n\n\n  getFileModification(module, fileContent) {\n    return fileContent;\n  }\n\n  startAddon() {\n    return;\n  }\n\n  stopAddon() {\n    return;\n  }\n\n  loadState() {\n    const saved = _datastore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getData(`${this.prefix}s`);\n    if (!saved) return;\n    Object.assign(this.state, saved);\n  }\n\n  saveState() {\n    _datastore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setData(`${this.prefix}s`, this.state);\n  }\n\n  watchAddons() {\n    if (this.watcher) return _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(this.name, `Already watching ${this.prefix} addons.`);\n    _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(this.name, `Starting to watch ${this.prefix} addons.`);\n    this.watcher = fs.watch(this.addonFolder, {\n      persistent: false\n    }, async (eventType, filename) => {\n      if (!eventType || !filename || !filename.endsWith(this.extension)) return;\n      await new Promise(r => setTimeout(r, 50));\n\n      try {\n        fs.statSync(path.resolve(this.addonFolder, filename));\n      } catch (err) {\n        if (err.code !== \"ENOENT\") return;\n        delete this.timeCache[filename];\n        this.unloadAddon(filename, true);\n      }\n\n      if (!fs.statSync(path.resolve(this.addonFolder, filename)).isFile()) return;\n      const stats = fs.statSync(path.resolve(this.addonFolder, filename));\n      if (!stats || !stats.mtime || !stats.mtime.getTime()) return;\n      if (typeof stats.mtime.getTime() !== \"number\") return;\n      if (this.timeCache[filename] == stats.mtime.getTime()) return;\n      this.timeCache[filename] = stats.mtime.getTime();\n      if (eventType == \"rename\") this.loadAddon(filename, true);\n      if (eventType == \"change\") this.reloadAddon(filename, true);\n    });\n  }\n\n  unwatchAddons() {\n    if (!this.watcher) return _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(this.name, `Was not watching ${this.prefix} addons.`);\n    this.watcher.close();\n    delete this.watcher;\n    _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(this.name, `No longer watching ${this.prefix} addons.`);\n  }\n\n  extractMeta(fileContent) {\n    const firstLine = fileContent.split(\"\\n\")[0];\n    const hasOldMeta = firstLine.includes(\"//META\");\n    if (hasOldMeta) return this.parseOldMeta(fileContent);\n    const hasNewMeta = firstLine.includes(\"/**\");\n    if (hasNewMeta) return this.parseNewMeta(fileContent);\n    throw new _structs_metaerror__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\"META was not found.\");\n  }\n\n  parseOldMeta(fileContent) {\n    const meta = fileContent.split(\"\\n\")[0];\n    const metaData = meta.substring(meta.lastIndexOf(\"//META\") + 6, meta.lastIndexOf(\"*//\"));\n    const parsed = _utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].testJSON(metaData);\n    if (!parsed) throw new _structs_metaerror__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\"META could not be parsed.\");\n    if (!parsed.name) throw new _structs_metaerror__WEBPACK_IMPORTED_MODULE_6__[\"default\"](\"META missing name data.\");\n    return parsed;\n  }\n\n  parseNewMeta(fileContent) {\n    const block = fileContent.split(\"/**\", 2)[1].split(\"*/\", 1)[0];\n    const out = {};\n    let field = \"\";\n    let accum = \"\";\n\n    for (const line of block.split(splitRegex)) {\n      if (line.length === 0) continue;\n\n      if (line.charAt(0) === \"@\" && line.charAt(1) !== \" \") {\n        out[field] = accum;\n        const l = line.indexOf(\" \");\n        field = line.substr(1, l - 1);\n        accum = line.substr(l + 1);\n      } else {\n        accum += \" \" + line.replace(\"\\\\n\", \"\\n\").replace(escapedAtRegex, \"@\");\n      }\n    }\n\n    out[field] = accum.trim();\n    delete out[\"\"];\n    return out;\n  }\n\n  getAddonRequire() {\n    const self = this; // const baseFolder = this.addonFolder;\n\n    const originalRequire = this.originalRequire;\n    return function (module, filename) {\n      const possiblePath = path.resolve(self.addonFolder, path.basename(filename));\n      if (!fs.existsSync(possiblePath) || filename !== fs.realpathSync(possiblePath)) return Reflect.apply(originalRequire, this, arguments);\n      let fileContent = fs.readFileSync(filename, \"utf8\");\n      fileContent = stripBOM(fileContent);\n      const meta = self.extractMeta(fileContent);\n      meta.id = meta.name;\n      meta.filename = path.basename(filename);\n      fileContent = self.getFileModification(module, fileContent, meta);\n\n      module._compile(fileContent, filename);\n    };\n  } // Subclasses should use the return (if not AddonError) and push to this.addonList\n\n\n  loadAddon(filename, shouldToast = false) {\n    if (typeof filename === \"undefined\") return;\n\n    try {\n      require(path.resolve(this.addonFolder, filename));\n    } catch (error) {\n      return new _structs_addonerror__WEBPACK_IMPORTED_MODULE_5__[\"default\"](filename, filename, \"Could not be compiled.\", {\n        message: error.message,\n        stack: error.stack\n      });\n    }\n\n    const addon = require(path.resolve(this.addonFolder, filename));\n\n    if (this.addonList.find(c => c.id == addon.id)) return new _structs_addonerror__WEBPACK_IMPORTED_MODULE_5__[\"default\"](addon.name, filename, `There is already a plugin with name ${addon.name}`);\n    const error = this.initializeAddon(addon);\n    if (error) return error;\n    this.addonList.push(addon);\n    if (shouldToast) _ui_toasts__WEBPACK_IMPORTED_MODULE_7__[\"default\"].success(`${addon.name} v${addon.version} was loaded.`);\n    this.emit(\"loaded\", addon.id);\n    if (!this.state[addon.id]) return this.state[addon.id] = false;\n    return this.startAddon(addon);\n  }\n\n  unloadAddon(idOrFileOrAddon, shouldToast = true, isReload = false) {\n    const addon = typeof idOrFileOrAddon == \"string\" ? this.addonList.find(c => c.id == idOrFileOrAddon || c.filename == idOrFileOrAddon) : idOrFileOrAddon;\n    if (!addon) return false;\n    if (this.state[addon.id]) isReload ? this.stopAddon(addon) : this.disableAddon(addon);\n    delete require.cache[require.resolve(path.resolve(this.addonFolder, addon.filename))];\n    this.addonList.splice(this.addonList.indexOf(addon), 1);\n    this.emit(\"unloaded\", addon.id);\n    if (shouldToast) _ui_toasts__WEBPACK_IMPORTED_MODULE_7__[\"default\"].success(`${addon.name} was unloaded.`);\n    return true;\n  }\n\n  reloadAddon(idOrFileOrAddon, shouldToast = true) {\n    const addon = typeof idOrFileOrAddon == \"string\" ? this.addonList.find(c => c.id == idOrFileOrAddon || c.filename == idOrFileOrAddon) : idOrFileOrAddon;\n    const didUnload = this.unloadAddon(addon, shouldToast, true);\n    if (!didUnload) return didUnload;\n    return this.loadAddon(addon.filename, shouldToast);\n  }\n\n  isLoaded(idOrFile) {\n    const addon = this.addonList.find(c => c.id == idOrFile || c.filename == idOrFile);\n    if (!addon) return false;\n    return true;\n  }\n\n  isEnabled(idOrFile) {\n    const addon = this.addonList.find(c => c.id == idOrFile || c.filename == idOrFile);\n    if (!addon) return false;\n    return this.state[addon.id];\n  }\n\n  enableAddon(idOrAddon) {\n    const addon = typeof idOrAddon == \"string\" ? this.addonList.find(p => p.id == idOrAddon) : idOrAddon;\n    if (!addon) return;\n    if (this.state[addon.id]) return;\n    this.state[addon.id] = true;\n    this.startAddon(addon);\n    this.saveState();\n  }\n\n  disableAddon(idOrAddon) {\n    const addon = typeof idOrAddon == \"string\" ? this.addonList.find(p => p.id == idOrAddon) : idOrAddon;\n    if (!addon) return;\n    if (!this.state[addon.id]) return;\n    this.state[addon.id] = false;\n    this.stopAddon(addon);\n    this.saveState();\n  }\n\n  toggleAddon(id) {\n    if (this.state[id]) this.disableAddon(id);else this.enableAddon(id);\n  }\n\n  loadNewAddons() {\n    const files = fs.readdirSync(this.addonFolder);\n    const removed = this.addonList.filter(t => !files.includes(t.filename)).map(c => c.id);\n    const added = files.filter(f => !this.addonList.find(t => t.filename == f) && f.endsWith(this.extension) && fs.statSync(path.resolve(this.addonFolder, f)).isFile());\n    return {\n      added,\n      removed\n    };\n  }\n\n  updateList() {\n    const results = this.loadNewAddons();\n\n    for (const filename of results.added) this.loadAddon(filename);\n\n    for (const name of results.removed) this.unloadAddon(name);\n  }\n\n  loadAllAddons() {\n    this.loadState();\n    const errors = [];\n    const files = fs.readdirSync(this.addonFolder);\n\n    for (const filename of files) {\n      if (!fs.statSync(path.resolve(this.addonFolder, filename)).isFile() || !filename.endsWith(this.extension)) continue;\n      const addon = this.loadAddon(filename, false);\n      if (addon instanceof _structs_addonerror__WEBPACK_IMPORTED_MODULE_5__[\"default\"]) errors.push(addon);\n    }\n\n    this.saveState();\n    if (_settingsmanager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(this.collection, this.category, this.id)) this.watchAddons();\n    return errors;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/addonmanager.js\n");

/***/ }),

/***/ "./src/modules/componentpatcher.js":
/*!*****************************************!*\
  !*** ./src/modules/componentpatcher.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _webpackmodules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webpackmodules */ \"./src/modules/webpackmodules.js\");\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n/* harmony import */ var _patcher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./patcher */ \"./src/modules/patcher.js\");\n/* harmony import */ var _ui_icons_bdlogo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ui/icons/bdlogo */ \"./src/ui/icons/bdlogo.jsx\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class ComponentPatcher {\n  initialize() {\n    _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].suppressErrors(this.patchSocial.bind(this), \"BD Social Patch\")();\n    _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].suppressErrors(this.patchGuildPills.bind(this), \"BD Guild Pills Patch\")();\n    _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].suppressErrors(this.patchGuildListItems.bind(this), \"BD Guild List Items Patch\")();\n    _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].suppressErrors(this.patchGuildSeparator.bind(this), \"BD Guild Separator Patch\")();\n  }\n\n  patchSocial() {\n    if (this.socialPatch) return;\n    const TabBar = _webpackmodules__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByDisplayName(\"TabBar\");\n    const Anchor = _webpackmodules__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByDisplayName(\"Anchor\");\n    if (!TabBar || !Anchor) return;\n    this.socialPatch = _patcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"].after(\"ThemeHelper\", TabBar.prototype, \"render\", (_, __, returnValue) => {\n      const children = returnValue.props.children;\n      if (!children || !children.length) return;\n      if (children[children.length - 2].type.displayName !== \"Separator\") return;\n      if (!children[children.length - 1].type.toString().includes(\"socialLinks\")) return;\n      const original = children[children.length - 1].type;\n\n      const newOne = function () {\n        const returnVal = original(...arguments);\n        returnVal.props.children.push(_discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].React.createElement(Anchor, {\n          className: \"bd-social-link\",\n          href: \"https://github.com/rauenzi/BetterDiscordApp\",\n          rel: \"author\",\n          title: \"BandagedBD\",\n          target: \"_blank\"\n        }, _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].React.createElement(_ui_icons_bdlogo__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n          size: \"16px\",\n          className: \"bd-social-logo\"\n        })));\n        return returnVal;\n      };\n\n      children[children.length - 1].type = newOne;\n    });\n  }\n\n  patchGuildListItems() {\n    if (this.guildListItemsPatch) return;\n    const listItemClass = _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GuildClasses.listItem.split(\" \")[0];\n    const blobClass = _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].GuildClasses.blobContainer.split(\" \")[0];\n    const reactInstance = _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getReactInstance(document.querySelector(`.${listItemClass} .${blobClass}`).parentElement);\n    const GuildComponent = reactInstance.return.type;\n    if (!GuildComponent) return;\n    this.guildListItemsPatch = _patcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"].after(\"ThemeHelper\", GuildComponent.prototype, \"render\", (thisObject, _, returnValue) => {\n      const guildData = thisObject.props;\n      returnValue.props.className += \" bd-guild\";\n      if (guildData.unread) returnValue.props.className += \" bd-unread\";\n      if (guildData.selected) returnValue.props.className += \" bd-selected\";\n      if (guildData.audio) returnValue.props.className += \" bd-audio\";\n      if (guildData.video) returnValue.props.className += \" bd-video\";\n      if (guildData.badge) returnValue.props.className += \" bd-badge\";\n      if (guildData.animatable) returnValue.props.className += \" bd-animatable\";\n      return returnValue;\n    });\n  }\n\n  patchGuildPills() {\n    if (this.guildPillPatch) return;\n    const guildPill = _webpackmodules__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getModule(m => m.default && !m.default.displayName && m.default.toString && m.default.toString().includes(\"translate3d\"));\n    if (!guildPill) return;\n    this.guildPillPatch = _patcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"].after(\"ThemeHelper\", guildPill, \"default\", (_, args, returnValue) => {\n      const props = args[0];\n      if (props.unread) returnValue.props.className += \" bd-unread\";\n      if (props.selected) returnValue.props.className += \" bd-selected\";\n      if (props.hovered) returnValue.props.className += \" bd-hovered\";\n      return returnValue;\n    });\n  }\n\n  patchGuildSeparator() {\n    if (this.guildSeparatorPatch) return;\n    const Guilds = _webpackmodules__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByDisplayName(\"Guilds\");\n    const guildComponents = _webpackmodules__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getByProps(\"renderListItem\");\n    if (!guildComponents || !Guilds) return;\n\n    const GuildSeparator = function () {\n      const returnValue = guildComponents.Separator(...arguments);\n      returnValue.props.className += \" bd-guild-separator\";\n      return returnValue;\n    };\n\n    this.guildSeparatorPatch = _patcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"].after(\"ThemeHelper\", Guilds.prototype, \"render\", (_, __, returnValue) => {\n      const Separator = _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findInReactTree(returnValue, m => m.type && !m.type.displayName && typeof m.type == \"function\" && _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].isEmpty(m.props));\n      if (!Separator) return;\n      Separator.type = GuildSeparator;\n    });\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/componentpatcher.js\n");

/***/ }),

/***/ "./src/modules/core.js":
/*!*****************************!*\
  !*** ./src/modules/core.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _localemanager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localemanager */ \"./src/modules/localemanager.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/modules/logger.js\");\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var _dommanager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dommanager */ \"./src/modules/dommanager.js\");\n/* harmony import */ var _pluginmanager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pluginmanager */ \"./src/modules/pluginmanager.js\");\n/* harmony import */ var _thememanager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./thememanager */ \"./src/modules/thememanager.js\");\n/* harmony import */ var _settingsmanager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./settingsmanager */ \"./src/modules/settingsmanager.js\");\n/* harmony import */ var builtins__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! builtins */ \"./src/builtins/builtins.js\");\n/* harmony import */ var _ui_modals__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ui/modals */ \"./src/ui/modals.js\");\n/* harmony import */ var _reactcomponents__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./reactcomponents */ \"./src/modules/reactcomponents.js\");\n/* harmony import */ var _datastore__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./datastore */ \"./src/modules/datastore.js\");\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony import */ var _componentpatcher__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./componentpatcher */ \"./src/modules/componentpatcher.js\");\n\n\n // import EmoteModule from \"./emotes\";\n// import QuickEmoteMenu from \"../builtins/emotemenu\";\n\n\n\n\n\n\n\n\n\n\n\nconst GuildClasses = _discordmodules__WEBPACK_IMPORTED_MODULE_11__[\"default\"].GuildClasses;\n\nfunction Core() {}\n\nCore.prototype.setConfig = function (config) {\n  Object.assign(data__WEBPACK_IMPORTED_MODULE_2__[\"Config\"], config);\n};\n\nCore.prototype.init = async function () {\n  if (data__WEBPACK_IMPORTED_MODULE_2__[\"Config\"].version < data__WEBPACK_IMPORTED_MODULE_2__[\"Config\"].minSupportedVersion) {\n    _ui_modals__WEBPACK_IMPORTED_MODULE_8__[\"default\"].alert(\"Not Supported\", \"BetterDiscord v\" + data__WEBPACK_IMPORTED_MODULE_2__[\"Config\"].version + \" (your version)\" + \" is not supported by the latest js (\" + data__WEBPACK_IMPORTED_MODULE_2__[\"Config\"].bbdVersion + \").<br><br> Please download the latest version from <a href='https://github.com/rauenzi/BetterDiscordApp/releases/latest' target='_blank'>GitHub</a>\");\n    return;\n  } // const latestLocalVersion = Config.updater ? Config.updater.LatestVersion : Config.latestVersion;\n  // if (latestLocalVersion > Config.version) {\n  //     Modals.alert(\"Update Available\", `\n  //         An update for BandagedBD is available (${latestLocalVersion})! Please Reinstall!<br /><br />\n  //         <a href='https://github.com/rauenzi/BetterDiscordApp/releases/latest' target='_blank'>Download Installer</a>\n  //     `);\n  // }\n\n\n  _datastore__WEBPACK_IMPORTED_MODULE_10__[\"default\"].initialize();\n  await _localemanager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].initialize();\n  _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(\"Startup\", \"Initializing Settings\");\n  _settingsmanager__WEBPACK_IMPORTED_MODULE_6__[\"default\"].initialize();\n  _dommanager__WEBPACK_IMPORTED_MODULE_3__[\"default\"].initialize();\n  await this.waitForGuilds();\n  _reactcomponents__WEBPACK_IMPORTED_MODULE_9__[\"default\"].initialize();\n  _componentpatcher__WEBPACK_IMPORTED_MODULE_12__[\"default\"].initialize();\n\n  for (const module in builtins__WEBPACK_IMPORTED_MODULE_7__) builtins__WEBPACK_IMPORTED_MODULE_7__[module].initialize();\n\n  _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(\"Startup\", \"Loading Plugins\");\n  const pluginErrors = _pluginmanager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].initialize();\n  _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(\"Startup\", \"Loading Themes\");\n  const themeErrors = _thememanager__WEBPACK_IMPORTED_MODULE_5__[\"default\"].initialize();\n  _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(\"Startup\", \"Removing Loading Icon\");\n  document.getElementsByClassName(\"bd-loaderv2\")[0].remove(); // Show loading errors\n\n  _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].log(\"Startup\", \"Collecting Startup Errors\");\n  _ui_modals__WEBPACK_IMPORTED_MODULE_8__[\"default\"].showAddonErrors({\n    plugins: pluginErrors,\n    themes: themeErrors\n  });\n};\n\nCore.prototype.waitForGuilds = function () {\n  return new Promise(resolve => {\n    const checkForGuilds = function () {\n      if (document.readyState != \"complete\") setTimeout(checkForGuilds, 100);\n      const wrapper = GuildClasses.wrapper.split(\" \")[0];\n      const guild = GuildClasses.listItem.split(\" \")[0];\n      const blob = GuildClasses.blobContainer.split(\" \")[0];\n      if (document.querySelectorAll(`.${wrapper} .${guild} .${blob}`).length > 0) return resolve(data__WEBPACK_IMPORTED_MODULE_2__[\"Config\"].deferLoaded = true);\n      setTimeout(checkForGuilds, 100);\n    };\n\n    checkForGuilds();\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new Core());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL21vZHVsZXMvY29yZS5qcz9iNmRlIl0sIm5hbWVzIjpbIkd1aWxkQ2xhc3NlcyIsIkRpc2NvcmRNb2R1bGVzIiwiQ29yZSIsInByb3RvdHlwZSIsInNldENvbmZpZyIsImNvbmZpZyIsIk9iamVjdCIsImFzc2lnbiIsIkNvbmZpZyIsImluaXQiLCJ2ZXJzaW9uIiwibWluU3VwcG9ydGVkVmVyc2lvbiIsIk1vZGFscyIsImFsZXJ0IiwiYmJkVmVyc2lvbiIsIkRhdGFTdG9yZSIsImluaXRpYWxpemUiLCJMb2NhbGVNYW5hZ2VyIiwiTG9nZ2VyIiwibG9nIiwiU2V0dGluZ3MiLCJET01NYW5hZ2VyIiwid2FpdEZvckd1aWxkcyIsIlJlYWN0Q29tcG9uZW50cyIsIkNvbXBvbmVudFBhdGNoZXIiLCJtb2R1bGUiLCJCdWlsdGlucyIsInBsdWdpbkVycm9ycyIsIlBsdWdpbk1hbmFnZXIiLCJ0aGVtZUVycm9ycyIsIlRoZW1lTWFuYWdlciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsInJlbW92ZSIsInNob3dBZGRvbkVycm9ycyIsInBsdWdpbnMiLCJ0aGVtZXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsImNoZWNrRm9yR3VpbGRzIiwicmVhZHlTdGF0ZSIsInNldFRpbWVvdXQiLCJ3cmFwcGVyIiwic3BsaXQiLCJndWlsZCIsImxpc3RJdGVtIiwiYmxvYiIsImJsb2JDb250YWluZXIiLCJxdWVyeVNlbGVjdG9yQWxsIiwibGVuZ3RoIiwiZGVmZXJMb2FkZWQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0NBRUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBLE1BQU1BLFlBQVksR0FBR0Msd0RBQWMsQ0FBQ0QsWUFBcEM7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QUQsRUFBaUIsR0FBakIsQ0FBVjtBQUNILEtBUEQ7O0FBU0FBLGtCQUFjO0FBQ2pCLEdBWE0sQ0FBUDtBQVlILENBYkQ7O0FBZWUsbUVBQUlyQyxJQUFKLEVBQWYiLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9jb3JlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvY2FsZU1hbmFnZXIgZnJvbSBcIi4vbG9jYWxlbWFuYWdlclwiO1xyXG5cclxuaW1wb3J0IExvZ2dlciBmcm9tIFwiLi9sb2dnZXJcIjtcclxuaW1wb3J0IHtDb25maWd9IGZyb20gXCJkYXRhXCI7XHJcbi8vIGltcG9ydCBFbW90ZU1vZHVsZSBmcm9tIFwiLi9lbW90ZXNcIjtcclxuLy8gaW1wb3J0IFF1aWNrRW1vdGVNZW51IGZyb20gXCIuLi9idWlsdGlucy9lbW90ZW1lbnVcIjtcclxuaW1wb3J0IERPTU1hbmFnZXIgZnJvbSBcIi4vZG9tbWFuYWdlclwiO1xyXG5pbXBvcnQgUGx1Z2luTWFuYWdlciBmcm9tIFwiLi9wbHVnaW5tYW5hZ2VyXCI7XHJcbmltcG9ydCBUaGVtZU1hbmFnZXIgZnJvbSBcIi4vdGhlbWVtYW5hZ2VyXCI7XHJcbmltcG9ydCBTZXR0aW5ncyBmcm9tIFwiLi9zZXR0aW5nc21hbmFnZXJcIjtcclxuaW1wb3J0ICogYXMgQnVpbHRpbnMgZnJvbSBcImJ1aWx0aW5zXCI7XHJcbmltcG9ydCBNb2RhbHMgZnJvbSBcIi4uL3VpL21vZGFsc1wiO1xyXG5pbXBvcnQgUmVhY3RDb21wb25lbnRzIGZyb20gXCIuL3JlYWN0Y29tcG9uZW50c1wiO1xyXG5pbXBvcnQgRGF0YVN0b3JlIGZyb20gXCIuL2RhdGFzdG9yZVwiO1xyXG5pbXBvcnQgRGlzY29yZE1vZHVsZXMgZnJvbSBcIi4vZGlzY29yZG1vZHVsZXNcIjtcclxuaW1wb3J0IENvbXBvbmVudFBhdGNoZXIgZnJvbSBcIi4vY29tcG9uZW50cGF0Y2hlclwiO1xyXG5cclxuXHJcbmNvbnN0IEd1aWxkQ2xhc3NlcyA9IERpc2NvcmRNb2R1bGVzLkd1aWxkQ2xhc3NlcztcclxuXHJcbmZ1bmN0aW9uIENvcmUoKSB7XHJcbn1cclxuXHJcbkNvcmUucHJvdG90eXBlLnNldENvbmZpZyA9IGZ1bmN0aW9uKGNvbmZpZykge1xyXG4gICAgT2JqZWN0LmFzc2lnbihDb25maWcsIGNvbmZpZyk7XHJcbn07XHJcblxyXG5Db3JlLnByb3RvdHlwZS5pbml0ID0gYXN5bmMgZnVuY3Rpb24oKSB7XHJcbiAgICBpZiAoQ29uZmlnLnZlcnNpb24gPCBDb25maWcubWluU3VwcG9ydGVkVmVyc2lvbikge1xyXG4gICAgICAgIE1vZGFscy5hbGVydChcIk5vdCBTdXBwb3J0ZWRcIiwgXCJCZXR0ZXJEaXNjb3JkIHZcIiArIENvbmZpZy52ZXJzaW9uICsgXCIgKHlvdXIgdmVyc2lvbilcIiArIFwiIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGxhdGVzdCBqcyAoXCIgKyBDb25maWcuYmJkVmVyc2lvbiArIFwiKS48YnI+PGJyPiBQbGVhc2UgZG93bmxvYWQgdGhlIGxhdGVzdCB2ZXJzaW9uIGZyb20gPGEgaHJlZj0naHR0cHM6Ly9naXRodWIuY29tL3JhdWVuemkvQmV0dGVyRGlzY29yZEFwcC9yZWxlYXNlcy9sYXRlc3QnIHRhcmdldD0nX2JsYW5rJz5HaXRIdWI8L2E+XCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIC8vIGNvbnN0IGxhdGVzdExvY2FsVmVyc2lvbiA9IENvbmZpZy51cGRhdGVyID8gQ29uZmlnLnVwZGF0ZXIuTGF0ZXN0VmVyc2lvbiA6IENvbmZpZy5sYXRlc3RWZXJzaW9uO1xyXG4gICAgLy8gaWYgKGxhdGVzdExvY2FsVmVyc2lvbiA+IENvbmZpZy52ZXJzaW9uKSB7XHJcbiAgICAvLyAgICAgTW9kYWxzLmFsZXJ0KFwiVXBkYXRlIEF2YWlsYWJsZVwiLCBgXHJcbiAgICAvLyAgICAgICAgIEFuIHVwZGF0ZSBmb3IgQmFuZGFnZWRCRCBpcyBhdmFpbGFibGUgKCR7bGF0ZXN0TG9jYWxWZXJzaW9ufSkhIFBsZWFzZSBSZWluc3RhbGwhPGJyIC8+PGJyIC8+XHJcbiAgICAvLyAgICAgICAgIDxhIGhyZWY9J2h0dHBzOi8vZ2l0aHViLmNvbS9yYXVlbnppL0JldHRlckRpc2NvcmRBcHAvcmVsZWFzZXMvbGF0ZXN0JyB0YXJnZXQ9J19ibGFuayc+RG93bmxvYWQgSW5zdGFsbGVyPC9hPlxyXG4gICAgLy8gICAgIGApO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIERhdGFTdG9yZS5pbml0aWFsaXplKCk7XHJcbiAgICBhd2FpdCBMb2NhbGVNYW5hZ2VyLmluaXRpYWxpemUoKTtcclxuXHJcblxyXG4gICAgTG9nZ2VyLmxvZyhcIlN0YXJ0dXBcIiwgXCJJbml0aWFsaXppbmcgU2V0dGluZ3NcIik7XHJcbiAgICBTZXR0aW5ncy5pbml0aWFsaXplKCk7XHJcblxyXG4gICAgRE9NTWFuYWdlci5pbml0aWFsaXplKCk7XHJcbiAgICBhd2FpdCB0aGlzLndhaXRGb3JHdWlsZHMoKTtcclxuICAgIFJlYWN0Q29tcG9uZW50cy5pbml0aWFsaXplKCk7XHJcbiAgICBDb21wb25lbnRQYXRjaGVyLmluaXRpYWxpemUoKTtcclxuICAgIGZvciAoY29uc3QgbW9kdWxlIGluIEJ1aWx0aW5zKSBCdWlsdGluc1ttb2R1bGVdLmluaXRpYWxpemUoKTtcclxuXHJcbiAgICBMb2dnZXIubG9nKFwiU3RhcnR1cFwiLCBcIkxvYWRpbmcgUGx1Z2luc1wiKTtcclxuICAgIGNvbnN0IHBsdWdpbkVycm9ycyA9IFBsdWdpbk1hbmFnZXIuaW5pdGlhbGl6ZSgpO1xyXG5cclxuICAgIExvZ2dlci5sb2coXCJTdGFydHVwXCIsIFwiTG9hZGluZyBUaGVtZXNcIik7XHJcbiAgICBjb25zdCB0aGVtZUVycm9ycyA9IFRoZW1lTWFuYWdlci5pbml0aWFsaXplKCk7XHJcblxyXG4gICAgTG9nZ2VyLmxvZyhcIlN0YXJ0dXBcIiwgXCJSZW1vdmluZyBMb2FkaW5nIEljb25cIik7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYmQtbG9hZGVydjJcIilbMF0ucmVtb3ZlKCk7XHJcblxyXG4gICAgLy8gU2hvdyBsb2FkaW5nIGVycm9yc1xyXG4gICAgTG9nZ2VyLmxvZyhcIlN0YXJ0dXBcIiwgXCJDb2xsZWN0aW5nIFN0YXJ0dXAgRXJyb3JzXCIpO1xyXG4gICAgTW9kYWxzLnNob3dBZGRvbkVycm9ycyh7cGx1Z2luczogcGx1Z2luRXJyb3JzLCB0aGVtZXM6IHRoZW1lRXJyb3JzfSk7XHJcbn07XHJcblxyXG5Db3JlLnByb3RvdHlwZS53YWl0Rm9yR3VpbGRzID0gZnVuY3Rpb24oKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XHJcbiAgICAgICAgY29uc3QgY2hlY2tGb3JHdWlsZHMgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT0gXCJjb21wbGV0ZVwiKSBzZXRUaW1lb3V0KGNoZWNrRm9yR3VpbGRzLCAxMDApO1xyXG4gICAgICAgICAgICBjb25zdCB3cmFwcGVyID0gR3VpbGRDbGFzc2VzLndyYXBwZXIuc3BsaXQoXCIgXCIpWzBdO1xyXG4gICAgICAgICAgICBjb25zdCBndWlsZCA9IEd1aWxkQ2xhc3Nlcy5saXN0SXRlbS5zcGxpdChcIiBcIilbMF07XHJcbiAgICAgICAgICAgIGNvbnN0IGJsb2IgPSBHdWlsZENsYXNzZXMuYmxvYkNvbnRhaW5lci5zcGxpdChcIiBcIilbMF07XHJcbiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuJHt3cmFwcGVyfSAuJHtndWlsZH0gLiR7YmxvYn1gKS5sZW5ndGggPiAwKSByZXR1cm4gcmVzb2x2ZShDb25maWcuZGVmZXJMb2FkZWQgPSB0cnVlKTtcclxuICAgICAgICAgICAgc2V0VGltZW91dChjaGVja0Zvckd1aWxkcywgMTAwKTtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICBjaGVja0Zvckd1aWxkcygpO1xyXG4gICAgfSk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgQ29yZSgpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/core.js\n");

/***/ }),

/***/ "./src/modules/datastore.js":
/*!**********************************!*\
  !*** ./src/modules/datastore.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n\n\n\nconst fs = __webpack_require__(/*! fs */ \"fs\");\n\nconst path = __webpack_require__(/*! path */ \"path\");\n\nconst releaseChannel = DiscordNative.globals.releaseChannel; // Schema\n// =======================\n// %appdata%\\BetterDiscord\n//     -> data\n//         -> [releaseChannel]\\ (stable/canary/ptb)\n//             -> settings.json\n//             -> plugins.json\n//             -> themes.json\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class DataStore {\n  constructor() {\n    this.data = {\n      misc: {}\n    };\n    this.pluginData = {};\n    this.cacheData = {};\n  }\n\n  initialize() {\n    if (!fs.existsSync(this.baseFolder)) fs.mkdirSync(this.baseFolder);\n    if (!fs.existsSync(this.dataFolder)) fs.mkdirSync(this.dataFolder);\n    if (!fs.existsSync(this.localeFolder)) fs.mkdirSync(this.localeFolder);\n    if (!fs.existsSync(this.emoteFolder)) fs.mkdirSync(this.emoteFolder);\n    if (!fs.existsSync(this.cacheFile)) fs.writeFileSync(this.cacheFile, JSON.stringify({}));\n    if (!fs.existsSync(this.BDFile)) fs.writeFileSync(this.BDFile, JSON.stringify(this.data.misc, null, 4));\n    if (!fs.existsSync(this.customCSS)) fs.writeFileSync(this.customCSS, \"\");\n    const dataFiles = fs.readdirSync(this.dataFolder).filter(f => !fs.statSync(path.resolve(this.dataFolder, f)).isDirectory() && f.endsWith(\".json\"));\n\n    for (const file of dataFiles) {\n      this.data[file.split(\".\")[0]] = require(path.resolve(this.dataFolder, file));\n    }\n\n    this.cacheData = _utilities__WEBPACK_IMPORTED_MODULE_1__[\"default\"].testJSON(fs.readFileSync(this.cacheFile).toString()) || {};\n  }\n\n  get customCSS() {\n    return this._customCSS || (this._customCSS = path.resolve(this.dataFolder, \"custom.css\"));\n  }\n\n  get baseFolder() {\n    return this._baseFolder || (this._baseFolder = path.resolve(data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].dataPath, \"data\"));\n  }\n\n  get dataFolder() {\n    return this._dataFolder || (this._dataFolder = path.resolve(this.baseFolder, `${releaseChannel}`));\n  }\n\n  get localeFolder() {\n    return this._localeFolder || (this._localeFolder = path.resolve(this.baseFolder, `locales`));\n  }\n\n  get emoteFolder() {\n    return this._emoteFolder || (this._emoteFolder = path.resolve(this.baseFolder, `emotes`));\n  }\n\n  get cacheFile() {\n    return this._cacheFile || (this._cacheFile = path.resolve(this.baseFolder, `.cache`));\n  }\n\n  get BDFile() {\n    return this._BDFile || (this._BDFile = path.resolve(data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].dataPath, \"data\", `${releaseChannel}.json`));\n  }\n\n  getPluginFile(pluginName) {\n    return path.resolve(data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].dataPath, \"plugins\", pluginName + \".config.json\");\n  }\n\n  _getFile(key) {\n    if (key == \"settings\" || key == \"plugins\" || key == \"themes\") return path.resolve(this.dataFolder, `${key}.json`);\n    return path.resolve(this.dataFolder, `misc.json`);\n  }\n\n  getBDData(key) {\n    return this.data.misc[key] || \"\";\n  }\n\n  setBDData(key, value) {\n    this.data.misc[key] = value;\n    fs.writeFileSync(path.resolve(this.dataFolder, `misc.json`), JSON.stringify(this.data.misc, null, 4));\n  }\n\n  getLocale(locale) {\n    const file = path.resolve(this.localeFolder, `${locale}.json`);\n    if (!fs.existsSync(file)) return null;\n    return _utilities__WEBPACK_IMPORTED_MODULE_1__[\"default\"].testJSON(fs.readFileSync(file).toString());\n  }\n\n  saveLocale(locale, strings) {\n    fs.writeFileSync(path.resolve(this.localeFolder, `${locale}.json`), JSON.stringify(strings, null, 4));\n  }\n\n  getCacheHash(category, key) {\n    if (!this.cacheData[category]) return \"\";\n    if (!fs.existsSync(path.resolve(this.baseFolder, category, `${key}.json`))) return \"\";\n    return this.cacheData[category][key] || \"\";\n  }\n\n  setCacheHash(category, key, hash) {\n    if (!this.cacheData[category]) this.cacheData[category] = {};\n    this.cacheData[category][key] = hash;\n    fs.writeFileSync(this.cacheFile, JSON.stringify(this.cacheData, null, 4));\n  }\n\n  emotesExist(category) {\n    return fs.existsSync(path.resolve(this.emoteFolder, `${category}.json`));\n  }\n\n  getEmoteData(category) {\n    const file = path.resolve(this.emoteFolder, `${category}.json`);\n    if (!fs.existsSync(file)) return null;\n    return _utilities__WEBPACK_IMPORTED_MODULE_1__[\"default\"].testJSON(fs.readFileSync(file).toString());\n  }\n\n  saveEmoteData(category, data) {\n    fs.writeFileSync(path.resolve(this.emoteFolder, `${category}.json`), JSON.stringify(data));\n  }\n\n  getData(key) {\n    return this.data[key] || \"\";\n  }\n\n  setData(key, value) {\n    this.data[key] = value;\n    fs.writeFileSync(path.resolve(this.dataFolder, `${key}.json`), JSON.stringify(value, null, 4));\n  }\n\n  loadCustomCSS() {\n    return fs.readFileSync(this.customCSS).toString();\n  }\n\n  saveCustomCSS(css) {\n    return fs.writeFileSync(this.customCSS, css);\n  }\n\n  getPluginData(pluginName, key) {\n    if (this.pluginData[pluginName] !== undefined) return this.pluginData[pluginName][key] || undefined;\n    if (!fs.existsSync(this.getPluginFile(pluginName))) return undefined;\n    this.pluginData[pluginName] = JSON.parse(fs.readFileSync(this.getPluginFile(pluginName)));\n    return this.pluginData[pluginName][key] || undefined;\n  }\n\n  setPluginData(pluginName, key, value) {\n    if (value === undefined) return;\n    if (this.pluginData[pluginName] === undefined) this.pluginData[pluginName] = {};\n    this.pluginData[pluginName][key] = value;\n    fs.writeFileSync(this.getPluginFile(pluginName), JSON.stringify(this.pluginData[pluginName], null, 4));\n  }\n\n  deletePluginData(pluginName, key) {\n    if (this.pluginData[pluginName] === undefined) this.pluginData[pluginName] = {};\n    delete this.pluginData[pluginName][key];\n    fs.writeFileSync(this.getPluginFile(pluginName), JSON.stringify(this.pluginData[pluginName], null, 4));\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/datastore.js\n");

/***/ }),

/***/ "./src/modules/discordmodules.js":
/*!***************************************!*\
  !*** ./src/modules/discordmodules.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n/* harmony import */ var _webpackmodules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpackmodules */ \"./src/modules/webpackmodules.js\");\n/**\r\n * A large list of known and useful webpack modules internal to Discord.\r\n *\r\n * @module DiscordModules\r\n * @version 0.0.3\r\n */\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].memoizeObject({\n  get React() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"createElement\", \"cloneElement\");\n  },\n\n  get ReactDOM() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"render\", \"findDOMNode\");\n  },\n\n  get Flux() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"connectStores\");\n  },\n\n  get Events() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByPrototypes(\"setMaxListeners\", \"emit\");\n  },\n\n  /* Guild Info, Stores, and Utilities */\n  get GuildStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getGuild\");\n  },\n\n  get SortedGuildStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getSortedGuilds\");\n  },\n\n  get SelectedGuildStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getLastSelectedGuildId\");\n  },\n\n  get GuildSync() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getSyncedGuilds\");\n  },\n\n  get GuildInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getAcronym\");\n  },\n\n  get GuildChannelsStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getChannels\", \"getDefaultChannel\");\n  },\n\n  get GuildMemberStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getMember\");\n  },\n\n  get MemberCountStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getMemberCounts\");\n  },\n\n  get GuildEmojiStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getEmojis\");\n  },\n\n  get GuildActions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"markGuildAsRead\");\n  },\n\n  get GuildPermissions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getGuildPermissions\");\n  },\n\n  /* Channel Store & Actions */\n  get ChannelStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getChannels\", \"getDMFromUserId\");\n  },\n\n  get SelectedChannelStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getLastSelectedChannelId\");\n  },\n\n  get ChannelActions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"selectChannel\");\n  },\n\n  get PrivateChannelActions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"openPrivateChannel\");\n  },\n\n  get ChannelSelector() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"selectGuild\", \"selectChannel\");\n  },\n\n  /* Current User Info, State and Settings */\n  get UserInfoStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getToken\");\n  },\n\n  get UserSettingsStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"guildPositions\");\n  },\n\n  get AccountManager() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"register\", \"login\");\n  },\n\n  get UserSettingsUpdater() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"updateRemoteSettings\");\n  },\n\n  get OnlineWatcher() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"isOnline\");\n  },\n\n  get CurrentUserIdle() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getIdleTime\");\n  },\n\n  get RelationshipStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"isBlocked\", \"getFriendIDs\");\n  },\n\n  get RelationshipManager() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"addRelationship\");\n  },\n\n  get MentionStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getMentions\");\n  },\n\n  /* User Stores and Utils */\n  get UserStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getCurrentUser\");\n  },\n\n  get UserStatusStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getStatus\", \"getState\");\n  },\n\n  get UserTypingStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"isTyping\");\n  },\n\n  get UserActivityStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getActivity\");\n  },\n\n  get UserNameResolver() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getName\");\n  },\n\n  get UserNoteStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getNote\");\n  },\n\n  get UserNoteActions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"updateNote\");\n  },\n\n  /* Emoji Store and Utils */\n  get EmojiInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"isEmojiDisabled\");\n  },\n\n  get EmojiUtils() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getGuildEmoji\");\n  },\n\n  get EmojiStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getByCategory\", \"EMOJI_NAME_RE\");\n  },\n\n  /* Invite Store and Utils */\n  get InviteStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getInvites\");\n  },\n\n  get InviteResolver() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"findInvite\");\n  },\n\n  get InviteActions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"acceptInvite\");\n  },\n\n  /* Discord Objects & Utils */\n  get DiscordConstants() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"Permissions\", \"ActivityTypes\", \"StatusTypes\");\n  },\n\n  get DiscordPermissions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"Permissions\", \"ActivityTypes\", \"StatusTypes\").Permissions;\n  },\n\n  get PermissionUtils() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getHighestRole\");\n  },\n\n  get ColorConverter() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"hex2int\");\n  },\n\n  get ColorShader() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"darken\");\n  },\n\n  get TinyColor() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByPrototypes(\"toRgb\");\n  },\n\n  get ClassResolver() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getClass\");\n  },\n\n  get ButtonData() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"ButtonSizes\");\n  },\n\n  get IconNames() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"IconNames\");\n  },\n\n  get NavigationUtils() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"transitionTo\", \"replaceWith\", \"getHistory\");\n  },\n\n  /* Discord Messages */\n  get MessageStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getMessages\");\n  },\n\n  get MessageActions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"jumpToMessage\", \"_sendMessage\");\n  },\n\n  get MessageQueue() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"enqueue\");\n  },\n\n  get MessageParser() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"createMessage\", \"parse\", \"unparse\");\n  },\n\n  /* Text Processing */\n  get hljs() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"highlight\", \"highlightBlock\");\n  },\n\n  get SimpleMarkdown() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"parseBlock\", \"parseInline\", \"defaultOutput\");\n  },\n\n  /* Experiments */\n  get ExperimentStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getExperimentOverrides\");\n  },\n\n  get ExperimentsManager() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"isDeveloper\");\n  },\n\n  get CurrentExperiment() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getExperimentId\");\n  },\n\n  /* Images, Avatars and Utils */\n  get ImageResolver() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getUserAvatarURL\", \"getGuildIconURL\");\n  },\n\n  get ImageUtils() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getSizedImageSrc\");\n  },\n\n  get AvatarDefaults() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getUserAvatarURL\", \"DEFAULT_AVATARS\");\n  },\n\n  /* Window, DOM, HTML */\n  get WindowInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"isFocused\", \"windowSize\");\n  },\n\n  get TagInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"VALID_TAG_NAMES\");\n  },\n\n  get DOMInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"canUseDOM\");\n  },\n\n  /* Locale/Location and Time */\n  get LocaleManager() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"setLocale\");\n  },\n\n  get Moment() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"parseZone\");\n  },\n\n  get LocationManager() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"createLocation\");\n  },\n\n  get Timestamps() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"fromTimestamp\");\n  },\n\n  get TimeFormatter() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"dateFormat\");\n  },\n\n  /* Strings and Utils */\n  get Strings() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"Messages\").Messages;\n  },\n\n  get StringFormats() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"a\", \"z\");\n  },\n\n  get StringUtils() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"toASCII\");\n  },\n\n  /* URLs and Utils */\n  get URLParser() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"Url\", \"parse\");\n  },\n\n  get ExtraURLs() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getArticleURL\");\n  },\n\n  /* Drag & Drop */\n  get DNDActions() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"beginDrag\");\n  },\n\n  get DNDSources() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"addTarget\");\n  },\n\n  get DNDObjects() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"DragSource\");\n  },\n\n  /* Media Stuff (Audio/Video) */\n  get MediaDeviceInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"Codecs\", \"SUPPORTED_BROWSERS\");\n  },\n\n  get MediaInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getOutputVolume\");\n  },\n\n  get MediaEngineInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"MediaEngineFeatures\");\n  },\n\n  get VoiceInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"EchoCancellation\");\n  },\n\n  get VideoStream() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getVideoStream\");\n  },\n\n  get SoundModule() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"playSound\");\n  },\n\n  /* Electron & Other Internals with Utils*/\n  get ElectronModule() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"setBadge\");\n  },\n\n  get Dispatcher() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"dirtyDispatch\");\n  },\n\n  get PathUtils() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"hasBasename\");\n  },\n\n  get NotificationModule() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"showNotification\");\n  },\n\n  get RouterModule() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"Router\");\n  },\n\n  get APIModule() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getAPIBaseURL\");\n  },\n\n  get AnalyticEvents() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"AnalyticEventConfigs\");\n  },\n\n  get KeyGenerator() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByRegex(/\"binary\"/);\n  },\n\n  get Buffers() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"Buffer\", \"kMaxLength\");\n  },\n\n  get DeviceStore() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"getDevices\");\n  },\n\n  get SoftwareInfo() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"os\");\n  },\n\n  get CurrentContext() {\n    return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"setTagsContext\");\n  },\n\n  /* Commonly Used Classes */\n  get GuildClasses() {\n    const guildsWrapper = _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"wrapper\", \"unreadMentionsBar\");\n    const guilds = _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"guildsError\", \"selected\");\n    const pill = _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(\"blobContainer\");\n    return Object.assign({}, guildsWrapper, guilds, pill);\n  }\n\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/discordmodules.js\n");

/***/ }),

/***/ "./src/modules/dommanager.js":
/*!***********************************!*\
  !*** ./src/modules/dommanager.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DOMManager; });\nclass DOMManager {\n  static get bdHead() {\n    return this.getElement(\"bd-head\");\n  }\n\n  static get bdBody() {\n    return this.getElement(\"bd-body\");\n  }\n\n  static get bdScripts() {\n    return this.getElement(\"bd-scripts\");\n  }\n\n  static get bdStyles() {\n    return this.getElement(\"bd-styles\");\n  }\n\n  static get bdThemes() {\n    return this.getElement(\"bd-themes\");\n  }\n\n  static get bdCustomCSS() {\n    return this.getElement(\"#customcss\");\n  } // static get bdTooltips() { return this.getElement(\"bd-tooltips\") || this.createElement(\"bd-tooltips\").appendTo(this.bdBody); }\n  // static get bdModals() { return this.getElement(\"bd-modals\") || this.createElement(\"bd-modals\").appendTo(this.bdBody); }\n  // static get bdToasts() { return this.getElement(\"bd-toasts\") || this.createElement(\"bd-toasts\").appendTo(this.bdBody); }\n\n\n  static initialize() {\n    this.createElement(\"bd-head\", {\n      target: document.head\n    });\n    this.createElement(\"bd-body\", {\n      target: document.body\n    });\n    this.createElement(\"bd-scripts\", {\n      target: this.bdHead\n    });\n    this.createElement(\"bd-styles\", {\n      target: this.bdHead\n    });\n    this.createElement(\"bd-themes\", {\n      target: this.bdHead\n    });\n    this.createElement(\"style\", {\n      id: \"customcss\",\n      target: this.bdHead\n    });\n  }\n\n  static escapeID(id) {\n    return id.replace(/^[^a-z]+|[^\\w-]+/gi, \"-\");\n  }\n\n  static getElement(e, baseElement = document) {\n    if (e instanceof Node) return e;\n    return baseElement.querySelector(e);\n  }\n\n  static createElement(tag, options = {}) {\n    const {\n      className,\n      id,\n      target\n    } = options;\n    const element = document.createElement(tag);\n    if (className) element.className = className;\n    if (id) element.id = id;\n    if (target) this.getElement(target).append(element);\n    return element;\n  }\n\n  static removeStyle(id) {\n    id = this.escapeID(id);\n    const exists = this.getElement(`#${id}`, this.bdStyles);\n    if (exists) exists.remove();\n  }\n\n  static injectStyle(id, css) {\n    id = this.escapeID(id);\n    const style = this.getElement(`#${id}`, this.bdStyles) || this.createElement(\"style\", {\n      id\n    });\n    style.textContent = css;\n    this.bdStyles.append(style);\n  }\n\n  static removeTheme(id) {\n    id = this.escapeID(id);\n    const exists = this.getElement(`#${id}`, this.bdThemes);\n    if (exists) exists.remove();\n  }\n\n  static injectTheme(id, css) {\n    id = this.escapeID(id);\n    const style = this.getElement(`#${id}`, this.bdThemes) || this.createElement(\"style\", {\n      id\n    });\n    style.textContent = css;\n    this.bdThemes.append(style);\n  }\n\n  static updateCustomCSS(css) {\n    this.bdCustomCSS.textContent = css;\n  }\n\n  static removeScript(id) {\n    id = this.escapeID(id);\n    const exists = this.getElement(`#${id}`, this.bdScripts);\n    if (exists) exists.remove();\n  }\n\n  static injectScript(id, url) {\n    id = this.escapeID(id);\n    return new Promise(resolve => {\n      const script = this.getElement(`#${id}`, this.bdScripts) || this.createElement(\"script\", {\n        id\n      });\n      script.src = url;\n      script.onload = resolve;\n      this.bdScripts.append(script);\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/dommanager.js\n");

/***/ }),

/***/ "./src/modules/emitter.js":
/*!********************************!*\
  !*** ./src/modules/emitter.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst EventEmitter = __webpack_require__(/*! events */ \"events\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class BDEvents extends EventEmitter {\n  constructor() {\n    super();\n    this.setMaxListeners(20);\n  }\n\n  dispatch(eventName, ...args) {\n    this.emit(eventName, ...args);\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL21vZHVsZXMvZW1pdHRlci5qcz9lOTNhIl0sIm5hbWVzIjpbIkV2ZW50RW1pdHRlciIsInJlcXVpcmUiLCJCREV2ZW50cyIsImNvbnN0cnVjdG9yIiwic2V0TWF4TGlzdGVuZXJzIiwiZGlzcGF0Y2giLCJldmVudE5hbWUiLCJhcmdzIiwiZW1pdCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxNQUFNQSxZQUFZLEdBQUdDLG1CQUFPLENBQUMsc0JBQUQsQ0FBNUI7O0FBQ2UsbUVBQUksTUFBTUMsUUFBTixTQUF1QkYsWUFBdkIsQ0FBb0M7QUFDbkRHLGFBQVcsR0FBRztBQUNWO0FBQ0EsU0FBS0MsZUFBTCxDQUFxQixFQUFyQjtBQUNIOztBQUNEQyxVQUFRLENBQUNDLFNBQUQsRUFBWSxHQUFHQyxJQUFmLEVBQXFCO0FBQ3pCLFNBQUtDLElBQUwsQ0FBVUYsU0FBVixFQUFxQixHQUFHQyxJQUF4QjtBQUNIOztBQVBrRCxDQUF4QyxFQUFmIiwiZmlsZSI6Ii4vc3JjL21vZHVsZXMvZW1pdHRlci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoXCJldmVudHNcIik7XHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBCREV2ZW50cyBleHRlbmRzIEV2ZW50RW1pdHRlciB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuc2V0TWF4TGlzdGVuZXJzKDIwKTtcclxuICAgIH1cclxuICAgIGRpc3BhdGNoKGV2ZW50TmFtZSwgLi4uYXJncykge1xyXG4gICAgICAgIHRoaXMuZW1pdChldmVudE5hbWUsIC4uLmFyZ3MpO1xyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/emitter.js\n");

/***/ }),

/***/ "./src/modules/localemanager.js":
/*!**************************************!*\
  !*** ./src/modules/localemanager.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _data_strings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data/strings */ \"./src/data/strings.js\");\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n/* harmony import */ var _emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emitter */ \"./src/modules/emitter.js\");\n/* harmony import */ var _datastore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./datastore */ \"./src/modules/datastore.js\");\n\n\n\n\n\n\nconst request = __webpack_require__(/*! request */ \"request\");\n\nconst {\n  Dispatcher,\n  DiscordConstants,\n  UserSettingsStore\n} = _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class LocaleManager {\n  get discordLocale() {\n    return UserSettingsStore.locale.split(\"-\")[0];\n  }\n\n  get defaultLocale() {\n    return \"en\";\n  }\n\n  constructor() {\n    this.locale = \"\";\n    this.strings = {};\n  }\n\n  async initialize() {\n    await this.setLocale(this.discordLocale);\n    Dispatcher.subscribe(DiscordConstants.ActionTypes.USER_SETTINGS_UPDATE, ({\n      settings\n    }) => {\n      const newLocale = settings.locale;\n      if (newLocale && newLocale != this.locale) this.setLocale(newLocale.split(\"-\")[0]);\n    });\n  }\n\n  async setLocale(newLocale) {\n    let newStrings;\n\n    if (newLocale != this.defaultLocale) {\n      newStrings = await this.getLocaleStrings(newLocale);\n      if (!newStrings) return this.setLocale(this.defaultLocale);\n    } else {\n      newStrings = _data_strings__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    }\n\n    this.locale = newLocale;\n    _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].extend(this.strings, newStrings);\n    _emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"].emit(\"strings-updated\");\n  }\n\n  async getLocaleStrings(locale) {\n    const hash = _datastore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getCacheHash(\"locales\", locale);\n    if (!hash) return await this.downloadLocale(locale);\n    const invalid = await this.downloadLocale(locale, hash);\n    if (!invalid) return _datastore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].getLocale(locale);\n    return invalid;\n  }\n\n  downloadLocale(locale, hash = \"\") {\n    return new Promise(resolve => {\n      const options = {\n        url: _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"].repoUrl(`data/locales/${locale}.json`),\n        timeout: 2000,\n        json: true\n      };\n      if (hash) options.headers = {\n        \"If-None-Match\": hash\n      };\n      request.get(options, (err, resp, newStrings) => {\n        if (err || resp.statusCode !== 200) return resolve(null);\n        _datastore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].saveLocale(locale, newStrings);\n        _datastore__WEBPACK_IMPORTED_MODULE_4__[\"default\"].setCacheHash(\"locales\", locale, resp.headers.etag);\n        resolve(newStrings);\n      });\n    });\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL21vZHVsZXMvbG9jYWxlbWFuYWdlci5qcz8yMzlkIl0sIm5hbWVzIjpbInJlcXVlc3QiLCJyZXF1aXJlIiwiRGlzcGF0Y2hlciIsIkRpc2NvcmRDb25zdGFudHMiLCJVc2VyU2V0dGluZ3NTdG9yZSIsIkRpc2NvcmRNb2R1bGVzIiwiTG9jYWxlTWFuYWdlciIsImRpc2NvcmRMb2NhbGUiLCJsb2NhbGUiLCJzcGxpdCIsImRlZmF1bHRMb2NhbGUiLCJjb25zdHJ1Y3RvciIsInN0cmluZ3MiLCJpbml0aWFsaXplIiwic2V0TG9jYWxlIiwic3Vic2NyaWJlIiwiQWN0aW9uVHlwZXMiLCJVU0VSX1NFVFRJTkdTX1VQREFURSIsInNldHRpbmdzIiwibmV3TG9jYWxlIiwibmV3U3RyaW5ncyIsImdldExvY2FsZVN0cmluZ3MiLCJEZWZhdWx0U3RyaW5ncyIsIlV0aWxpdGllcyIsImV4dGVuZCIsIkV2ZW50cyIsImVtaXQiLCJoYXNoIiwiRGF0YVN0b3JlIiwiZ2V0Q2FjaGVIYXNoIiwiZG93bmxvYWRMb2NhbGUiLCJpbnZhbGlkIiwiZ2V0TG9jYWxlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJvcHRpb25zIiwidXJsIiwicmVwb1VybCIsInRpbWVvdXQiLCJqc29uIiwiaGVhZGVycyIsImdldCIsImVyciIsInJlc3AiLCJzdGF0dXNDb2RlIiwic2F2ZUxvY2FsZSIsInNldENhY2hlSGFzaCIsImV0YWciXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBQ0EsTUFBTUEsT0FBTyxHQUFHQyxtQkFBTyxDQUFDLHdCQUFELENBQXZCOztBQUVBLE1BQU07QUFBQ0MsWUFBRDtBQUFhQyxrQkFBYjtBQUErQkM7QUFBL0IsSUFBb0RDLHVEQUExRDtBQUVlLG1FQUFJLE1BQU1DLGFBQU4sQ0FBb0I7QUFDdEMsTUFBSUMsYUFBSixHQUFvQjtBQUFDLFdBQU9ILGlC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SUFBSSxDQUFDSCxPQUFMLENBQWFPLElBQXZEO0FBQ0FiLGVBQU8sQ0FBQ2QsVUFBRCxDQUFQO0FBQ0EsT0FMRDtBQU1BLEtBYk0sQ0FBUDtBQWNBOztBQXREcUMsQ0FBeEIsRUFBZiIsImZpbGUiOiIuL3NyYy9tb2R1bGVzL2xvY2FsZW1hbmFnZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGVmYXVsdFN0cmluZ3MgZnJvbSBcIi4uL2RhdGEvc3RyaW5nc1wiO1xyXG5pbXBvcnQgRGlzY29yZE1vZHVsZXMgZnJvbSBcIi4vZGlzY29yZG1vZHVsZXNcIjtcclxuaW1wb3J0IFV0aWxpdGllcyBmcm9tIFwiLi91dGlsaXRpZXNcIjtcclxuaW1wb3J0IEV2ZW50cyBmcm9tIFwiLi9lbWl0dGVyXCI7XHJcbmltcG9ydCBEYXRhU3RvcmUgZnJvbSBcIi4vZGF0YXN0b3JlXCI7XHJcbmNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKFwicmVxdWVzdFwiKTtcclxuXHJcbmNvbnN0IHtEaXNwYXRjaGVyLCBEaXNjb3JkQ29uc3RhbnRzLCBVc2VyU2V0dGluZ3NTdG9yZX0gPSBEaXNjb3JkTW9kdWxlcztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBMb2NhbGVNYW5hZ2VyIHtcclxuXHRnZXQgZGlzY29yZExvY2FsZSgpIHtyZXR1cm4gVXNlclNldHRpbmdzU3RvcmUubG9jYWxlLnNwbGl0KFwiLVwiKVswXTt9XHJcblx0Z2V0IGRlZmF1bHRMb2NhbGUoKSB7cmV0dXJuIFwiZW5cIjt9XHJcblxyXG5cdGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMubG9jYWxlID0gXCJcIjtcclxuICAgICAgICB0aGlzLnN0cmluZ3MgPSB7fTtcclxuXHR9XHJcblxyXG5cdGFzeW5jIGluaXRpYWxpemUoKSB7XHJcbiAgICAgICAgYXdhaXQgdGhpcy5zZXRMb2NhbGUodGhpcy5kaXNjb3JkTG9jYWxlKTtcclxuICAgICAgICBEaXNwYXRjaGVyLnN1YnNjcmliZShEaXNjb3JkQ29uc3RhbnRzLkFjdGlvblR5cGVzLlVTRVJfU0VUVElOR1NfVVBEQVRFLCAoe3NldHRpbmdzfSkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBuZXdMb2NhbGUgPSBzZXR0aW5ncy5sb2NhbGU7XHJcbiAgICAgICAgICAgIGlmIChuZXdMb2NhbGUgJiYgbmV3TG9jYWxlICE9IHRoaXMubG9jYWxlKSB0aGlzLnNldExvY2FsZShuZXdMb2NhbGUuc3BsaXQoXCItXCIpWzBdKTtcclxuICAgICAgICB9KTtcclxuXHR9XHJcblxyXG5cdGFzeW5jIHNldExvY2FsZShuZXdMb2NhbGUpIHtcclxuICAgICAgICBsZXQgbmV3U3RyaW5ncztcclxuICAgICAgICBpZiAobmV3TG9jYWxlICE9IHRoaXMuZGVmYXVsdExvY2FsZSkge1xyXG5cdFx0XHRuZXdTdHJpbmdzID0gYXdhaXQgdGhpcy5nZXRMb2NhbGVTdHJpbmdzKG5ld0xvY2FsZSk7XHJcbiAgICAgICAgICAgIGlmICghbmV3U3RyaW5ncykgcmV0dXJuIHRoaXMuc2V0TG9jYWxlKHRoaXMuZGVmYXVsdExvY2FsZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBuZXdTdHJpbmdzID0gRGVmYXVsdFN0cmluZ3M7XHJcbiAgICAgICAgfVxyXG5cdFx0dGhpcy5sb2NhbGUgPSBuZXdMb2NhbGU7XHJcblx0XHRVdGlsaXRpZXMuZXh0ZW5kKHRoaXMuc3RyaW5ncywgbmV3U3RyaW5ncyk7XHJcblx0XHRFdmVudHMuZW1pdChcInN0cmluZ3MtdXBkYXRlZFwiKTtcclxuXHR9XHJcblxyXG5cdGFzeW5jIGdldExvY2FsZVN0cmluZ3MobG9jYWxlKSB7XHJcblx0XHRjb25zdCBoYXNoID0gRGF0YVN0b3JlLmdldENhY2hlSGFzaChcImxvY2FsZXNcIiwgbG9jYWxlKTtcclxuXHRcdGlmICghaGFzaCkgcmV0dXJuIGF3YWl0IHRoaXMuZG93bmxvYWRMb2NhbGUobG9jYWxlKTtcclxuXHRcdGNvbnN0IGludmFsaWQgPSBhd2FpdCB0aGlzLmRvd25sb2FkTG9jYWxlKGxvY2FsZSwgaGFzaCk7XHJcblx0XHRpZiAoIWludmFsaWQpIHJldHVybiBEYXRhU3RvcmUuZ2V0TG9jYWxlKGxvY2FsZSk7XHJcblx0XHRyZXR1cm4gaW52YWxpZDtcclxuXHR9XHJcblxyXG5cdGRvd25sb2FkTG9jYWxlKGxvY2FsZSwgaGFzaCA9IFwiXCIpIHtcclxuXHRcdHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuXHRcdFx0Y29uc3Qgb3B0aW9ucyA9IHtcclxuXHRcdFx0XHR1cmw6IFV0aWxpdGllcy5yZXBvVXJsKGBkYXRhL2xvY2FsZXMvJHtsb2NhbGV9Lmpzb25gKSxcclxuXHRcdFx0XHR0aW1lb3V0OiAyMDAwLFxyXG5cdFx0XHRcdGpzb246IHRydWVcclxuXHRcdFx0fTtcclxuXHRcdFx0aWYgKGhhc2gpIG9wdGlvbnMuaGVhZGVycyA9IHtcIklmLU5vbmUtTWF0Y2hcIjogaGFzaH07XHJcblx0XHRcdHJlcXVlc3QuZ2V0KG9wdGlvbnMsIChlcnIsIHJlc3AsIG5ld1N0cmluZ3MpID0+IHtcclxuXHRcdFx0XHRpZiAoZXJyIHx8IHJlc3Auc3RhdHVzQ29kZSAhPT0gMjAwKSByZXR1cm4gcmVzb2x2ZShudWxsKTtcclxuXHRcdFx0XHREYXRhU3RvcmUuc2F2ZUxvY2FsZShsb2NhbGUsIG5ld1N0cmluZ3MpO1xyXG5cdFx0XHRcdERhdGFTdG9yZS5zZXRDYWNoZUhhc2goXCJsb2NhbGVzXCIsIGxvY2FsZSwgcmVzcC5oZWFkZXJzLmV0YWcpO1xyXG5cdFx0XHRcdHJlc29sdmUobmV3U3RyaW5ncyk7XHJcblx0XHRcdH0pO1xyXG5cdFx0fSk7XHJcblx0fVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/localemanager.js\n");

/***/ }),

/***/ "./src/modules/logger.js":
/*!*******************************!*\
  !*** ./src/modules/logger.js ***!
  \*******************************/
/*! exports provided: LogTypes, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"LogTypes\", function() { return LogTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Logger; });\n/**\r\n * Simple logger for the lib and plugins.\r\n *\r\n * @module Logger\r\n * @version 0.1.0\r\n */\n\n/* eslint-disable no-console */\n\n/**\r\n * List of logging types.\r\n */\nconst LogTypes = {\n  /** Alias for error */\n  err: \"error\",\n  error: \"error\",\n\n  /** Alias for debug */\n  dbg: \"debug\",\n  debug: \"debug\",\n  log: \"log\",\n  warn: \"warn\",\n  info: \"info\"\n};\nclass Logger {\n  /**\r\n   * Logs an error using a collapsed error group with stacktrace.\r\n   *\r\n   * @param {string} module - Name of the calling module.\r\n   * @param {string} message - Message or error to have logged.\r\n  * @param {Error} error - Error object to log with the message.\r\n   */\n  static stacktrace(module, message, error) {\n    console.error(`%c[${module}]%c ${message}\\n\\n%c`, \"color: #3a71c1; font-weight: 700;\", \"color: red; font-weight: 700;\", \"color: red;\", error);\n  }\n  /**\r\n   * Logs using error formatting. For logging an actual error object consider {@link module:Logger.stacktrace}\r\n   *\r\n   * @param {string} module - Name of the calling module.\r\n   * @param {string} message - Messages to have logged.\r\n   */\n\n\n  static err(module, ...message) {\n    Logger._log(module, message, \"error\");\n  }\n  /**\r\n   * Logs a warning message.\r\n   *\r\n   * @param {string} module - Name of the calling module.\r\n   * @param {...any} message - Messages to have logged.\r\n   */\n\n\n  static warn(module, ...message) {\n    Logger._log(module, message, \"warn\");\n  }\n  /**\r\n   * Logs an informational message.\r\n   *\r\n   * @param {string} module - Name of the calling module.\r\n   * @param {...any} message - Messages to have logged.\r\n   */\n\n\n  static info(module, ...message) {\n    Logger._log(module, message, \"info\");\n  }\n  /**\r\n   * Logs used for debugging purposes.\r\n   *\r\n   * @param {string} module - Name of the calling module.\r\n   * @param {...any} message - Messages to have logged.\r\n   */\n\n\n  static debug(module, ...message) {\n    Logger._log(module, message, \"debug\");\n  }\n  /**\r\n   * Logs used for basic loggin.\r\n   *\r\n   * @param {string} module - Name of the calling module.\r\n   * @param {...any} message - Messages to have logged.\r\n   */\n\n\n  static log(module, ...message) {\n    Logger._log(module, message);\n  }\n  /**\r\n   * Logs strings using different console levels and a module label.\r\n   *\r\n   * @param {string} module - Name of the calling module.\r\n   * @param {any|Array<any>} message - Messages to have logged.\r\n   * @param {module:Logger.LogTypes} type - Type of log to use in console.\r\n   */\n\n\n  static _log(module, message, type = \"log\") {\n    type = Logger.parseType(type);\n    if (!Array.isArray(message)) message = [message];\n    console[type](`%c[BandagedBD]%c [${module}]%c`, \"color: #3E82E5; font-weight: 700;\", \"color: #3a71c1;\", \"\", ...message); //console.log(`%c[BandagedBD]%c [${moduleName}]%c ${message}`, \"color: #3a71c1; font-weight: 700;\", \"color: #3a71c1;\", \"\");\n  }\n\n  static parseType(type) {\n    return LogTypes.hasOwnProperty(type) ? LogTypes[type] : \"log\";\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL21vZHVsZXMvbG9nZ2VyLmpzPzk5OGUiXSwibmFtZXMiOlsiTG9nVHlwZXMiLCJlcnIiLCJlcnJvciIsImRiZyIsImRlYnVnIiwibG9nIiwid2FybiIsImluZm8iLCJMb2dnZXIiLCJzdGFja3RyYWNlIiwibW9kdWxlIiwibWVzc2FnZSIsImNvbnNvbGUiLCJfbG9nIiwidHlwZSIsInBhcnNlVHlwZSIsIkFycmF5IiwiaXNBcnJheSIsImhhc093blByb3BlcnR5Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7OztBQU9BOztBQUVBOzs7QUFHTyxNQUFNQSxRQUFRLEdBQUc7QUFDcEI7QUFDQUMsS0FBRyxFQUFFLE9BRmU7QUFHcEJDLE9BQUssRUFBRSxPQUhhOztBQUlwQjtBQUNBQyxLQUFHLEVBQUUsT0FMZTtBQU1wQkMsT0FBSyxFQUFFLE9BTmE7QUFPcEJDLEtBQUcsRUFBRSxLQVBlO0FBUXBCQyxNQUFJLEVBQUUsTUFSYztBQVNwQkMsTUFBSSxFQUFFO0FBVGMsQ0FBakI7QUFZUSxNQUFNQyxNQUFOLENBQWE7QUFFeEI7Ozs7Ozs7QUFPQSxTQUFPQyxVQUFQLENBQWtCQyxNQUFsQixFQUEwQkMsT0FBMUIsRUFBbUNULEtBQW5DLEVBQTBDO0FBQzVDVSxXQUFPLENBQUNWLEtBQVIsQ0FBZSxNQUFLUSxNQUFPLE9BQU1DLE9BQVEsUUFBekMsRUFBa0QsbUNBQWxELEVBQXVGLCtCQUF2RixFQUF3SCxhQUF4SCxFQUF1SVQsS0FBdkk7QUFDRztBQUVEOzs7Ozs7OztBQU1BLFNBQU9ELEdBQVAsQ0FBV1MsTUFBWCxFQUFtQixHQUFHQyxPQUF0QixFQUErQjtBQUFFSCxVQUFNLENBQUNLLElBQVAsQ0FBWUgsTUFBWixFQUFvQkMsT0FBcEIsRUFBNkIsT0FBN0I7QUFBd0M7QUFFekU7Ozs7Ozs7O0FBTUEsU0FBT0wsSUFBUCxDQUFZSSxNQUFaLEVBQW9CLEdBQUdDLE9BQXZCLEVBQWdDO0FBQUVILFVBQU0sQ0FBQ0ssSUFBUCxDQUFZSCxNQUFaLEVBQW9CQyxPQUFwQixFQUE2QixNQUE3QjtBQUF1QztBQUV6RTs7Ozs7Ozs7QUFNQSxTQUFPSixJQUFQLENBQVlHLE1BQVosRUFBb0IsR0FBR0MsT0FBdkIsRUFBZ0M7QUFBRUgsVUFBTSxDQUFDSyxJQUFQLENBQVlILE1BQVosRUFBb0JDLE9BQXBCLEVBQTZCLE1BQTdCO0FBQXVDO0FBRXpFOzs7Ozs7OztBQU1BLFNBQU9QLEtBQVAsQ0FBYU0sTUFBYixFQUFxQixHQUFHQyxPQUF4QixFQUFpQztBQUFFSCxVQUFNLENBQUNLLElBQVAsQ0FBWUgsTUFBWixFQUFvQkMsT0FBcEIsRUFBNkIsT0FBN0I7QUFBd0M7QUFFM0U7Ozs7Ozs7O0FBTUEsU0FBT04sR0FBUCxDQUFXSyxNQUFYLEVBQW1CLEdBQUdDLE9BQXRCLEVBQStCO0FBQUVILFVBQU0sQ0FBQ0ssSUFBUCxDQUFZSCxNQUFaLEVBQW9CQyxPQUFwQjtBQUErQjtBQUVoRTs7Ozs7Ozs7O0FBT0EsU0FBT0UsSUFBUCxDQUFZSCxNQUFaLEVBQW9CQyxPQUFwQixFQUE2QkcsSUFBSSxHQUFHLEtBQXBDLEVBQTJDO0FBQ3ZDQSxRQUFJLEdBQUdOLE1BQU0sQ0FBQ08sU0FBUCxDQUFpQkQsSUFBakIsQ0FBUDtBQUNBLFFBQUksQ0FBQ0UsS0FBSyxDQUFDQyxPQUFOLENBQWNOLE9BQWQsQ0FBTCxFQUE2QkEsT0FBTyxHQUFHLENBQUNBLE9BQUQsQ0FBVjtBQUM3QkMsV0FBTyxDQUFDRSxJQUFELENBQVAsQ0FBZSxxQkFBb0JKLE1BQU8sS0FBMUMsRUFBZ0QsbUNBQWhELEVBQXFGLGlCQUFyRixFQUF3RyxFQUF4RyxFQUE0RyxHQUFHQyxPQUEvRyxFQUh1QyxDQUl2QztBQUNIOztBQUVELFNBQU9JLFNBQVAsQ0FBaUJELElBQWpCLEVBQXVCO0FBQ25CLFdBQU9kLFFBQVEsQ0FBQ2tCLGNBQVQsQ0FBd0JKLElBQXhCLElBQWdDZCxRQUFRLENBQUNjLElBQUQsQ0FBeEMsR0FBaUQsS0FBeEQ7QUFDSDs7QUFyRXVCIiwiZmlsZSI6Ii4vc3JjL21vZHVsZXMvbG9nZ2VyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIFNpbXBsZSBsb2dnZXIgZm9yIHRoZSBsaWIgYW5kIHBsdWdpbnMuXHJcbiAqXHJcbiAqIEBtb2R1bGUgTG9nZ2VyXHJcbiAqIEB2ZXJzaW9uIDAuMS4wXHJcbiAqL1xyXG5cclxuLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xyXG5cclxuLyoqXHJcbiAqIExpc3Qgb2YgbG9nZ2luZyB0eXBlcy5cclxuICovXHJcbmV4cG9ydCBjb25zdCBMb2dUeXBlcyA9IHtcclxuICAgIC8qKiBBbGlhcyBmb3IgZXJyb3IgKi9cclxuICAgIGVycjogXCJlcnJvclwiLFxyXG4gICAgZXJyb3I6IFwiZXJyb3JcIixcclxuICAgIC8qKiBBbGlhcyBmb3IgZGVidWcgKi9cclxuICAgIGRiZzogXCJkZWJ1Z1wiLFxyXG4gICAgZGVidWc6IFwiZGVidWdcIixcclxuICAgIGxvZzogXCJsb2dcIixcclxuICAgIHdhcm46IFwid2FyblwiLFxyXG4gICAgaW5mbzogXCJpbmZvXCJcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2dlciB7XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIGFuIGVycm9yIHVzaW5nIGEgY29sbGFwc2VkIGVycm9yIGdyb3VwIHdpdGggc3RhY2t0cmFjZS5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbW9kdWxlIC0gTmFtZSBvZiB0aGUgY2FsbGluZyBtb2R1bGUuXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAtIE1lc3NhZ2Ugb3IgZXJyb3IgdG8gaGF2ZSBsb2dnZWQuXHJcblx0ICogQHBhcmFtIHtFcnJvcn0gZXJyb3IgLSBFcnJvciBvYmplY3QgdG8gbG9nIHdpdGggdGhlIG1lc3NhZ2UuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBzdGFja3RyYWNlKG1vZHVsZSwgbWVzc2FnZSwgZXJyb3IpIHtcclxuXHRcdGNvbnNvbGUuZXJyb3IoYCVjWyR7bW9kdWxlfV0lYyAke21lc3NhZ2V9XFxuXFxuJWNgLCBcImNvbG9yOiAjM2E3MWMxOyBmb250LXdlaWdodDogNzAwO1wiLCBcImNvbG9yOiByZWQ7IGZvbnQtd2VpZ2h0OiA3MDA7XCIsIFwiY29sb3I6IHJlZDtcIiwgZXJyb3IpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyB1c2luZyBlcnJvciBmb3JtYXR0aW5nLiBGb3IgbG9nZ2luZyBhbiBhY3R1YWwgZXJyb3Igb2JqZWN0IGNvbnNpZGVyIHtAbGluayBtb2R1bGU6TG9nZ2VyLnN0YWNrdHJhY2V9XHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZSAtIE5hbWUgb2YgdGhlIGNhbGxpbmcgbW9kdWxlLlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgLSBNZXNzYWdlcyB0byBoYXZlIGxvZ2dlZC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGVycihtb2R1bGUsIC4uLm1lc3NhZ2UpIHsgTG9nZ2VyLl9sb2cobW9kdWxlLCBtZXNzYWdlLCBcImVycm9yXCIpOyB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIGEgd2FybmluZyBtZXNzYWdlLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtb2R1bGUgLSBOYW1lIG9mIHRoZSBjYWxsaW5nIG1vZHVsZS5cclxuICAgICAqIEBwYXJhbSB7Li4uYW55fSBtZXNzYWdlIC0gTWVzc2FnZXMgdG8gaGF2ZSBsb2dnZWQuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyB3YXJuKG1vZHVsZSwgLi4ubWVzc2FnZSkgeyBMb2dnZXIuX2xvZyhtb2R1bGUsIG1lc3NhZ2UsIFwid2FyblwiKTsgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyBhbiBpbmZvcm1hdGlvbmFsIG1lc3NhZ2UuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZSAtIE5hbWUgb2YgdGhlIGNhbGxpbmcgbW9kdWxlLlxyXG4gICAgICogQHBhcmFtIHsuLi5hbnl9IG1lc3NhZ2UgLSBNZXNzYWdlcyB0byBoYXZlIGxvZ2dlZC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGluZm8obW9kdWxlLCAuLi5tZXNzYWdlKSB7IExvZ2dlci5fbG9nKG1vZHVsZSwgbWVzc2FnZSwgXCJpbmZvXCIpOyB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiBMb2dzIHVzZWQgZm9yIGRlYnVnZ2luZyBwdXJwb3Nlcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbW9kdWxlIC0gTmFtZSBvZiB0aGUgY2FsbGluZyBtb2R1bGUuXHJcbiAgICAgKiBAcGFyYW0gey4uLmFueX0gbWVzc2FnZSAtIE1lc3NhZ2VzIHRvIGhhdmUgbG9nZ2VkLlxyXG4gICAgICovXHJcbiAgICBzdGF0aWMgZGVidWcobW9kdWxlLCAuLi5tZXNzYWdlKSB7IExvZ2dlci5fbG9nKG1vZHVsZSwgbWVzc2FnZSwgXCJkZWJ1Z1wiKTsgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyB1c2VkIGZvciBiYXNpYyBsb2dnaW4uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZSAtIE5hbWUgb2YgdGhlIGNhbGxpbmcgbW9kdWxlLlxyXG4gICAgICogQHBhcmFtIHsuLi5hbnl9IG1lc3NhZ2UgLSBNZXNzYWdlcyB0byBoYXZlIGxvZ2dlZC5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGxvZyhtb2R1bGUsIC4uLm1lc3NhZ2UpIHsgTG9nZ2VyLl9sb2cobW9kdWxlLCBtZXNzYWdlKTsgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogTG9ncyBzdHJpbmdzIHVzaW5nIGRpZmZlcmVudCBjb25zb2xlIGxldmVscyBhbmQgYSBtb2R1bGUgbGFiZWwuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG1vZHVsZSAtIE5hbWUgb2YgdGhlIGNhbGxpbmcgbW9kdWxlLlxyXG4gICAgICogQHBhcmFtIHthbnl8QXJyYXk8YW55Pn0gbWVzc2FnZSAtIE1lc3NhZ2VzIHRvIGhhdmUgbG9nZ2VkLlxyXG4gICAgICogQHBhcmFtIHttb2R1bGU6TG9nZ2VyLkxvZ1R5cGVzfSB0eXBlIC0gVHlwZSBvZiBsb2cgdG8gdXNlIGluIGNvbnNvbGUuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBfbG9nKG1vZHVsZSwgbWVzc2FnZSwgdHlwZSA9IFwibG9nXCIpIHtcclxuICAgICAgICB0eXBlID0gTG9nZ2VyLnBhcnNlVHlwZSh0eXBlKTtcclxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkobWVzc2FnZSkpIG1lc3NhZ2UgPSBbbWVzc2FnZV07XHJcbiAgICAgICAgY29uc29sZVt0eXBlXShgJWNbQmFuZGFnZWRCRF0lYyBbJHttb2R1bGV9XSVjYCwgXCJjb2xvcjogIzNFODJFNTsgZm9udC13ZWlnaHQ6IDcwMDtcIiwgXCJjb2xvcjogIzNhNzFjMTtcIiwgXCJcIiwgLi4ubWVzc2FnZSk7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhgJWNbQmFuZGFnZWRCRF0lYyBbJHttb2R1bGVOYW1lfV0lYyAke21lc3NhZ2V9YCwgXCJjb2xvcjogIzNhNzFjMTsgZm9udC13ZWlnaHQ6IDcwMDtcIiwgXCJjb2xvcjogIzNhNzFjMTtcIiwgXCJcIik7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHBhcnNlVHlwZSh0eXBlKSB7XHJcbiAgICAgICAgcmV0dXJuIExvZ1R5cGVzLmhhc093blByb3BlcnR5KHR5cGUpID8gTG9nVHlwZXNbdHlwZV0gOiBcImxvZ1wiO1xyXG4gICAgfVxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/logger.js\n");

/***/ }),

/***/ "./src/modules/modules.js":
/*!********************************!*\
  !*** ./src/modules/modules.js ***!
  \********************************/
/*! exports provided: WebpackModules, React, ReactDOM, DiscordModules, Utilities, DataStore, Events, Settings, DOMManager, Logger, Patcher, ReactComponents, LocaleManager, Strings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"React\", function() { return React; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReactDOM\", function() { return ReactDOM; });\n/* harmony import */ var _webpackmodules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webpackmodules */ \"./src/modules/webpackmodules.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"WebpackModules\", function() { return _webpackmodules__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DiscordModules\", function() { return _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Utilities\", function() { return _utilities__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _datastore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./datastore */ \"./src/modules/datastore.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DataStore\", function() { return _datastore__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _emitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./emitter */ \"./src/modules/emitter.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Events\", function() { return _emitter__WEBPACK_IMPORTED_MODULE_4__[\"default\"]; });\n\n/* harmony import */ var _settingsmanager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settingsmanager */ \"./src/modules/settingsmanager.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Settings\", function() { return _settingsmanager__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _dommanager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dommanager */ \"./src/modules/dommanager.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DOMManager\", function() { return _dommanager__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./logger */ \"./src/modules/logger.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return _logger__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _patcher__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./patcher */ \"./src/modules/patcher.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Patcher\", function() { return _patcher__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var _reactcomponents__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./reactcomponents */ \"./src/modules/reactcomponents.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"ReactComponents\", function() { return _reactcomponents__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\n\n/* harmony import */ var _localemanager__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./localemanager */ \"./src/modules/localemanager.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"LocaleManager\", function() { return _localemanager__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./strings */ \"./src/modules/strings.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Strings\", function() { return _strings__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; });\n\n\n\nconst React = _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].React;\nconst ReactDOM = _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].ReactDOM;\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL21vZHVsZXMvbW9kdWxlcy5qcz8xNGRiIl0sIm5hbWVzIjpbIlJlYWN0IiwiRGlzY29yZE1vZHVsZXMiLCJSZWFjdERPTSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNPLE1BQU1BLEtBQUssR0FBR0MsdURBQWMsQ0FBQ0QsS0FBN0I7QUFDQSxNQUFNRSxRQUFRLEdBQUdELHVEQUFjLENBQUNDLFFBQWhDO0FBQ1A7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9tb2R1bGVzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHtkZWZhdWx0IGFzIFdlYnBhY2tNb2R1bGVzfSBmcm9tIFwiLi93ZWJwYWNrbW9kdWxlc1wiO1xyXG5cclxuaW1wb3J0IERpc2NvcmRNb2R1bGVzIGZyb20gXCIuL2Rpc2NvcmRtb2R1bGVzXCI7XHJcbmV4cG9ydCBjb25zdCBSZWFjdCA9IERpc2NvcmRNb2R1bGVzLlJlYWN0O1xyXG5leHBvcnQgY29uc3QgUmVhY3RET00gPSBEaXNjb3JkTW9kdWxlcy5SZWFjdERPTTtcclxuZXhwb3J0IHtEaXNjb3JkTW9kdWxlc307XHJcblxyXG5leHBvcnQge2RlZmF1bHQgYXMgVXRpbGl0aWVzfSBmcm9tIFwiLi91dGlsaXRpZXNcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIERhdGFTdG9yZX0gZnJvbSBcIi4vZGF0YXN0b3JlXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBFdmVudHN9IGZyb20gXCIuL2VtaXR0ZXJcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIFNldHRpbmdzfSBmcm9tIFwiLi9zZXR0aW5nc21hbmFnZXJcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIERPTU1hbmFnZXJ9IGZyb20gXCIuL2RvbW1hbmFnZXJcIjtcclxuZXhwb3J0IHtkZWZhdWx0IGFzIExvZ2dlcn0gZnJvbSBcIi4vbG9nZ2VyXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBQYXRjaGVyfSBmcm9tIFwiLi9wYXRjaGVyXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBSZWFjdENvbXBvbmVudHN9IGZyb20gXCIuL3JlYWN0Y29tcG9uZW50c1wiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgTG9jYWxlTWFuYWdlcn0gZnJvbSBcIi4vbG9jYWxlbWFuYWdlclwiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgU3RyaW5nc30gZnJvbSBcIi4vc3RyaW5nc1wiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/modules.js\n");

/***/ }),

/***/ "./src/modules/patcher.js":
/*!********************************!*\
  !*** ./src/modules/patcher.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Patcher; });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"./src/modules/logger.js\");\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony import */ var _webpackmodules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webpackmodules */ \"./src/modules/webpackmodules.js\");\n/**\r\n * Patcher that can patch other functions allowing you to run code before, after or\r\n * instead of the original function. Can also alter arguments and return values.\r\n *\r\n * This is from Zerebos' library {@link https://github.com/JsSucks/BetterDiscordApp/blob/master/client/src/modules/patcher.js}\r\n *\r\n * @module Patcher\r\n * @version 0.0.2\r\n */\n\n\n\nclass Patcher {\n  static get patches() {\n    return this._patches || (this._patches = []);\n  }\n  /**\r\n   * Returns all the patches done by a specific caller\r\n   * @param {string} name - Name of the patch caller\r\n   * @method\r\n   */\n\n\n  static getPatchesByCaller(name) {\n    if (!name) return [];\n    const patches = [];\n\n    for (const patch of this.patches) {\n      for (const childPatch of patch.children) {\n        if (childPatch.caller === name) patches.push(childPatch);\n      }\n    }\n\n    return patches;\n  }\n  /**\r\n   * Unpatches all patches passed, or when a string is passed unpatches all\r\n   * patches done by that specific caller.\r\n   * @param {Array|string} patches - Either an array of patches to unpatch or a caller name\r\n   */\n\n\n  static unpatchAll(patches) {\n    if (typeof patches === \"string\") patches = this.getPatchesByCaller(patches);\n\n    for (const patch of patches) {\n      patch.unpatch();\n    }\n  }\n\n  static resolveModule(module) {\n    if (module instanceof Function || module instanceof Object && !(module instanceof Array)) return module;\n    if (typeof module === \"string\") return _discordmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"][module];\n    if (module instanceof Array) return _webpackmodules__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findByUniqueProperties(module);\n    return null;\n  }\n\n  static makeOverride(patch) {\n    return function () {\n      let returnValue = undefined;\n      if (!patch.children || !patch.children.length) return patch.originalFunction.apply(this, arguments);\n\n      for (const superPatch of patch.children.filter(c => c.type === \"before\")) {\n        try {\n          superPatch.callback(this, arguments);\n        } catch (err) {\n          _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].err(\"Patcher\", `Could not fire before callback of ${patch.functionName} for ${superPatch.caller}`, err);\n        }\n      }\n\n      const insteads = patch.children.filter(c => c.type === \"instead\");\n\n      if (!insteads.length) {\n        returnValue = patch.originalFunction.apply(this, arguments);\n      } else {\n        for (const insteadPatch of insteads) {\n          try {\n            const tempReturn = insteadPatch.callback(this, arguments, patch.originalFunction.bind(this));\n            if (typeof tempReturn !== \"undefined\") returnValue = tempReturn;\n          } catch (err) {\n            _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].err(\"Patcher\", `Could not fire instead callback of ${patch.functionName} for ${insteadPatch.caller}`, err);\n          }\n        }\n      }\n\n      for (const slavePatch of patch.children.filter(c => c.type === \"after\")) {\n        try {\n          const tempReturn = slavePatch.callback(this, arguments, returnValue);\n          if (typeof tempReturn !== \"undefined\") returnValue = tempReturn;\n        } catch (err) {\n          _logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].err(\"Patcher\", `Could not fire after callback of ${patch.functionName} for ${slavePatch.caller}`, err);\n        }\n      }\n\n      return returnValue;\n    };\n  }\n\n  static rePatch(patch) {\n    patch.proxyFunction = patch.module[patch.functionName] = this.makeOverride(patch);\n  }\n\n  static makePatch(module, functionName, name) {\n    const patch = {\n      name,\n      module,\n      functionName,\n      originalFunction: module[functionName],\n      proxyFunction: null,\n      revert: () => {\n        // Calling revert will destroy any patches added to the same module after this\n        patch.module[patch.functionName] = patch.originalFunction;\n        patch.proxyFunction = null;\n        patch.children = [];\n      },\n      counter: 0,\n      children: []\n    };\n    patch.proxyFunction = module[functionName] = this.makeOverride(patch);\n    return this.patches.push(patch), patch;\n  }\n  /**\r\n   * Function with no arguments and no return value that may be called to revert changes made by {@link module:Patcher}, restoring (unpatching) original method.\r\n   * @callback module:Patcher~unpatch\r\n   */\n\n  /**\r\n   * A callback that modifies method logic. This callback is called on each call of the original method and is provided all data about original call. Any of the data can be modified if necessary, but do so wisely.\r\n   *\r\n   * The third argument for the callback will be `undefined` for `before` patches. `originalFunction` for `instead` patches and `returnValue` for `after` patches.\r\n   *\r\n   * @callback module:Patcher~patchCallback\r\n   * @param {object} thisObject - `this` in the context of the original function.\r\n   * @param {arguments} arguments - The original arguments of the original function.\r\n   * @param {(function|*)} extraValue - For `instead` patches, this is the original function from the module. For `after` patches, this is the return value of the function.\r\n   * @return {*} Makes sense only when using an `instead` or `after` patch. If something other than `undefined` is returned, the returned value replaces the value of `returnValue`. If used for `before` the return value is ignored.\r\n   */\n\n  /**\r\n   * This method patches onto another function, allowing your code to run beforehand.\r\n   * Using this, you are also able to modify the incoming arguments before the original method is run.\r\n   *\r\n   * @param {string} caller - Name of the caller of the patch function. Using this you can undo all patches with the same name using {@link module:Patcher.unpatchAll}. Use `\"\"` if you don't care.\r\n   * @param {object} moduleToPatch - Object with the function to be patched. Can also patch an object's prototype.\r\n   * @param {string} functionName - Name of the method to be patched\r\n   * @param {module:Patcher~patchCallback} callback - Function to run before the original method\r\n   * @param {object} options - Object used to pass additional options.\r\n   * @param {string} [options.displayName] You can provide meaningful name for class/object provided in `what` param for logging purposes. By default, this function will try to determine name automatically.\r\n   * @param {boolean} [options.forcePatch=true] Set to `true` to patch even if the function doesnt exist. (Adds noop function in place).\r\n   * @return {module:Patcher~unpatch} Function with no arguments and no return value that should be called to cancel (unpatch) this patch. You should save and run it when your plugin is stopped.\r\n   */\n\n\n  static before(caller, moduleToPatch, functionName, callback, options = {}) {\n    return this.pushChildPatch(caller, moduleToPatch, functionName, callback, Object.assign(options, {\n      type: \"before\"\n    }));\n  }\n  /**\r\n   * This method patches onto another function, allowing your code to run after.\r\n   * Using this, you are also able to modify the return value, using the return of your code instead.\r\n   *\r\n   * @param {string} caller - Name of the caller of the patch function. Using this you can undo all patches with the same name using {@link module:Patcher.unpatchAll}. Use `\"\"` if you don't care.\r\n   * @param {object} moduleToPatch - Object with the function to be patched. Can also patch an object's prototype.\r\n   * @param {string} functionName - Name of the method to be patched\r\n   * @param {module:Patcher~patchCallback} callback - Function to run instead of the original method\r\n   * @param {object} options - Object used to pass additional options.\r\n   * @param {string} [options.displayName] You can provide meaningful name for class/object provided in `what` param for logging purposes. By default, this function will try to determine name automatically.\r\n   * @param {boolean} [options.forcePatch=true] Set to `true` to patch even if the function doesnt exist. (Adds noop function in place).\r\n   * @return {module:Patcher~unpatch} Function with no arguments and no return value that should be called to cancel (unpatch) this patch. You should save and run it when your plugin is stopped.\r\n   */\n\n\n  static after(caller, moduleToPatch, functionName, callback, options = {}) {\n    return this.pushChildPatch(caller, moduleToPatch, functionName, callback, Object.assign(options, {\n      type: \"after\"\n    }));\n  }\n  /**\r\n   * This method patches onto another function, allowing your code to run instead.\r\n   * Using this, you are also able to modify the return value, using the return of your code instead.\r\n   *\r\n   * @param {string} caller - Name of the caller of the patch function. Using this you can undo all patches with the same name using {@link module:Patcher.unpatchAll}. Use `\"\"` if you don't care.\r\n   * @param {object} moduleToPatch - Object with the function to be patched. Can also patch an object's prototype.\r\n   * @param {string} functionName - Name of the method to be patched\r\n   * @param {module:Patcher~patchCallback} callback - Function to run after the original method\r\n   * @param {object} options - Object used to pass additional options.\r\n   * @param {string} [options.displayName] You can provide meaningful name for class/object provided in `what` param for logging purposes. By default, this function will try to determine name automatically.\r\n   * @param {boolean} [options.forcePatch=true] Set to `true` to patch even if the function doesnt exist. (Adds noop function in place).\r\n   * @return {module:Patcher~unpatch} Function with no arguments and no return value that should be called to cancel (unpatch) this patch. You should save and run it when your plugin is stopped.\r\n   */\n\n\n  static instead(caller, moduleToPatch, functionName, callback, options = {}) {\n    return this.pushChildPatch(caller, moduleToPatch, functionName, callback, Object.assign(options, {\n      type: \"instead\"\n    }));\n  }\n  /**\r\n   * This method patches onto another function, allowing your code to run before, instead or after the original function.\r\n   * Using this you are able to modify the incoming arguments before the original function is run as well as the return\r\n   * value before the original function actually returns.\r\n   *\r\n   * @param {string} caller - Name of the caller of the patch function. Using this you can undo all patches with the same name using {@link module:Patcher.unpatchAll}. Use `\"\"` if you don't care.\r\n   * @param {object} moduleToPatch - Object with the function to be patched. Can also patch an object's prototype.\r\n   * @param {string} functionName - Name of the method to be patched\r\n   * @param {module:Patcher~patchCallback} callback - Function to run after the original method\r\n   * @param {object} options - Object used to pass additional options.\r\n   * @param {string} [options.type=after] - Determines whether to run the function `before`, `instead`, or `after` the original.\r\n   * @param {string} [options.displayName] You can provide meaningful name for class/object provided in `what` param for logging purposes. By default, this function will try to determine name automatically.\r\n   * @param {boolean} [options.forcePatch=true] Set to `true` to patch even if the function doesnt exist. (Adds noop function in place).\r\n   * @return {module:Patcher~unpatch} Function with no arguments and no return value that should be called to cancel (unpatch) this patch. You should save and run it when your plugin is stopped.\r\n   */\n\n\n  static pushChildPatch(caller, moduleToPatch, functionName, callback, options = {}) {\n    const {\n      type = \"after\",\n      forcePatch = true\n    } = options;\n    const module = this.resolveModule(moduleToPatch);\n    if (!module) return null;\n    if (!module[functionName] && forcePatch) module[functionName] = function () {};\n    if (!(module[functionName] instanceof Function)) return null;\n    if (typeof moduleToPatch === \"string\") options.displayName = moduleToPatch;\n    const displayName = options.displayName || module.displayName || module.name || module.constructor.displayName || module.constructor.name;\n    const patchId = `${displayName}.${functionName}`;\n    const patch = this.patches.find(p => p.module == module && p.functionName == functionName) || this.makePatch(module, functionName, patchId);\n    if (!patch.proxyFunction) this.rePatch(patch);\n    const child = {\n      caller,\n      type,\n      id: patch.counter,\n      callback,\n      unpatch: () => {\n        patch.children.splice(patch.children.findIndex(cpatch => cpatch.id === child.id && cpatch.type === type), 1);\n\n        if (patch.children.length <= 0) {\n          const patchNum = this.patches.findIndex(p => p.module == module && p.functionName == functionName);\n          this.patches[patchNum].revert();\n          this.patches.splice(patchNum, 1);\n        }\n      }\n    };\n    patch.children.push(child);\n    patch.counter++;\n    return child.unpatch;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/patcher.js\n");

/***/ }),

/***/ "./src/modules/pluginapi.js":
/*!**********************************!*\
  !*** ./src/modules/pluginapi.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n/* harmony import */ var _webpackmodules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpackmodules */ \"./src/modules/webpackmodules.js\");\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony import */ var _datastore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./datastore */ \"./src/modules/datastore.js\");\n/* harmony import */ var _dommanager__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dommanager */ \"./src/modules/dommanager.js\");\n/* harmony import */ var _ui_toasts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/toasts */ \"./src/ui/toasts.js\");\n/* harmony import */ var _ui_modals__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ui/modals */ \"./src/ui/modals.js\");\n\n\n\n\n\n\n\nconst BdApi = {\n  get React() {\n    return _discordmodules__WEBPACK_IMPORTED_MODULE_2__[\"default\"].React;\n  },\n\n  get ReactDOM() {\n    return _discordmodules__WEBPACK_IMPORTED_MODULE_2__[\"default\"].ReactDOM;\n  },\n\n  get WindowConfigFile() {\n    if (this._windowConfigFile) return this._windowConfigFile;\n\n    const electron = __webpack_require__(/*! electron */ \"electron\").remote.app;\n\n    const path = __webpack_require__(/*! path */ \"path\");\n\n    const base = electron.getAppPath();\n    const roamingBase = electron.getPath(\"userData\");\n    const roamingLocation = path.resolve(roamingBase, electron.getVersion(), \"modules\", \"discord_desktop_core\", \"injector\", \"config.json\");\n    const location = path.resolve(base, \"..\", \"app\", \"config.json\");\n\n    const fs = __webpack_require__(/*! fs */ \"fs\");\n\n    const realLocation = fs.existsSync(location) ? location : fs.existsSync(roamingLocation) ? roamingLocation : null;\n    if (!realLocation) return this._windowConfigFile = null;\n    return this._windowConfigFile = realLocation;\n  }\n\n};\n\nBdApi.getAllWindowPreferences = function () {\n  if (!this.WindowConfigFile) return {};\n  return require(this.WindowConfigFile);\n};\n\nBdApi.getWindowPreference = function (key) {\n  if (!this.WindowConfigFile) return undefined;\n  return this.getAllWindowPreferences()[key];\n};\n\nBdApi.setWindowPreference = function (key, value) {\n  if (!this.WindowConfigFile) return;\n\n  const fs = __webpack_require__(/*! fs */ \"fs\");\n\n  const prefs = this.getAllWindowPreferences();\n  prefs[key] = value;\n  delete __webpack_require__.c[this.WindowConfigFile];\n  fs.writeFileSync(this.WindowConfigFile, JSON.stringify(prefs, null, 4));\n}; //Inject CSS to document head\n//id = id of element\n//css = custom css\n\n\nBdApi.injectCSS = function (id, css) {\n  _dommanager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].injectStyle(id, css);\n}; //Clear css/remove any element\n//id = id of element\n\n\nBdApi.clearCSS = function (id) {\n  _dommanager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].removeStyle(id);\n}; //Inject CSS to document head\n//id = id of element\n//css = custom css\n\n\nBdApi.linkJS = function (id, url) {\n  return _dommanager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].injectScript(id, url);\n}; //Clear css/remove any element\n//id = id of element\n\n\nBdApi.unlinkJS = function (id) {\n  _dommanager__WEBPACK_IMPORTED_MODULE_4__[\"default\"].removeScript(id);\n};\n/**\r\n * Shows a generic but very customizable modal.\r\n * @param {string} title - title of the modal\r\n * @param {string} content - a string of text to display in the modal\r\n */\n\n\nBdApi.alert = function (title, content) {\n  _ui_modals__WEBPACK_IMPORTED_MODULE_6__[\"default\"].alert(title, content);\n};\n/**\r\n * Shows a generic but very customizable confirmation modal with optional confirm and cancel callbacks.\r\n * @param {string} title - title of the modal\r\n * @param {(string|ReactElement|Array<string|ReactElement>)} children - a single or mixed array of react elements and strings. Everything is wrapped in Discord's `TextElement` component so strings will show and render properly.\r\n * @param {object} [options] - options to modify the modal\r\n * @param {boolean} [options.danger=false] - whether the main button should be red or not\r\n * @param {string} [options.confirmText=Okay] - text for the confirmation/submit button\r\n * @param {string} [options.cancelText=Cancel] - text for the cancel button\r\n * @param {callable} [options.onConfirm=NOOP] - callback to occur when clicking the submit button\r\n * @param {callable} [options.onCancel=NOOP] - callback to occur when clicking the cancel button\r\n */\n\n\nBdApi.showConfirmationModal = function (title, content, options = {}) {\n  return _ui_modals__WEBPACK_IMPORTED_MODULE_6__[\"default\"].showConfirmationModal(title, content, options);\n};\n/**\r\n * This shows a toast similar to android towards the bottom of the screen.\r\n *\r\n * @param {string} content The string to show in the toast.\r\n * @param {object} options Options object. Optional parameter.\r\n * @param {string} [options.type=\"\"] Changes the type of the toast stylistically and semantically. Choices: \"\", \"info\", \"success\", \"danger\"/\"error\", \"warning\"/\"warn\". Default: \"\"\r\n * @param {boolean} [options.icon=true] Determines whether the icon should show corresponding to the type. A toast without type will always have no icon. Default: true\r\n * @param {number} [options.timeout=3000] Adjusts the time (in ms) the toast should be shown for before disappearing automatically. Default: 3000\r\n * @param {boolean} [options.forceShow=false] Whether to force showing the toast and ignore the bd setting\r\n */\n\n\nBdApi.showToast = function (content, options = {}) {\n  _ui_toasts__WEBPACK_IMPORTED_MODULE_5__[\"default\"].show(content, options);\n}; // Finds module\n\n\nBdApi.findModule = function (filter) {\n  return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getModule(filter);\n}; // Finds module\n\n\nBdApi.findAllModules = function (filter) {\n  return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getModule(filter, false);\n}; // Finds module\n\n\nBdApi.findModuleByProps = function (...props) {\n  return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByProps(...props);\n};\n\nBdApi.findModuleByPrototypes = function (...protos) {\n  return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByPrototypes(...protos);\n};\n\nBdApi.findModuleByDisplayName = function (name) {\n  return _webpackmodules__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getByDisplayName(name);\n}; // Gets react instance\n\n\nBdApi.getInternalInstance = function (node) {\n  if (!(node instanceof window.jQuery) && !(node instanceof Element)) return undefined;\n  if (node instanceof jQuery) node = node[0];\n  return _utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getReactInstance(node);\n}; // Gets data\n\n\nBdApi.loadData = function (pluginName, key) {\n  return _datastore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getPluginData(pluginName, key);\n};\n\nBdApi.getData = BdApi.loadData; // Sets data\n\nBdApi.saveData = function (pluginName, key, data) {\n  return _datastore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setPluginData(pluginName, key, data);\n};\n\nBdApi.setData = BdApi.saveData; // Deletes data\n\nBdApi.deleteData = function (pluginName, key) {\n  return _datastore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].deletePluginData(pluginName, key);\n}; // Patches other functions\n\n\nBdApi.monkeyPatch = function (what, methodName, options) {\n  return _utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].monkeyPatch(what, methodName, options);\n}; // Event when element is removed\n\n\nBdApi.onRemoved = function (node, callback) {\n  return _utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].onRemoved(node, callback);\n}; // Wraps function in try..catch\n\n\nBdApi.suppressErrors = function (method, message) {\n  return _utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].suppressErrors(method, message);\n}; // Tests for valid JSON\n\n\nBdApi.testJSON = function (data) {\n  return _utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].testJSON(data);\n}; //Get another plugin\n//name = name of plugin\n// BdApi.getPlugin = function (name) {\n//     if (Plugins.hasOwnProperty(name)) {\n//         return Plugins[name].plugin;\n//     }\n//     return null;\n// };\n// BdApi.isPluginEnabled = function(name) {\n//     return !!PluginCookie[name];\n// };\n// BdApi.isThemeEnabled = function(name) {\n//     return !!ThemeCookie[name];\n// };\n// BdApi.isSettingEnabled = function(id) {\n//     return !!SettingsCookie[id];\n// };\n// Gets data\n\n\nBdApi.getBDData = function (key) {\n  return _datastore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getBDData(key);\n}; // Sets data\n\n\nBdApi.setBDData = function (key, data) {\n  return _datastore__WEBPACK_IMPORTED_MODULE_3__[\"default\"].setBDData(key, data);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BdApi);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/pluginapi.js\n");

/***/ }),

/***/ "./src/modules/pluginmanager.js":
/*!**************************************!*\
  !*** ./src/modules/pluginmanager.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/modules/logger.js\");\n/* harmony import */ var _addonmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./addonmanager */ \"./src/modules/addonmanager.js\");\n/* harmony import */ var _utilities__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utilities */ \"./src/modules/utilities.js\");\n/* harmony import */ var _structs_addonerror__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../structs/addonerror */ \"./src/structs/addonerror.js\");\n/* harmony import */ var _settingsmanager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settingsmanager */ \"./src/modules/settingsmanager.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./strings */ \"./src/modules/strings.js\");\n/* harmony import */ var _ui_toasts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/toasts */ \"./src/ui/toasts.js\");\n/* harmony import */ var _ui_modals__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../ui/modals */ \"./src/ui/modals.js\");\n/* harmony import */ var _ui_settings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../ui/settings */ \"./src/ui/settings.js\");\n\n\n\n\n\n\n\n\n\n\n\nconst path = __webpack_require__(/*! path */ \"path\");\n\nconst electronRemote = __webpack_require__(/*! electron */ \"electron\").remote;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class PluginManager extends _addonmanager__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  get name() {\n    return \"PluginManager\";\n  }\n\n  get moduleExtension() {\n    return \".js\";\n  }\n\n  get extension() {\n    return \".plugin.js\";\n  }\n\n  get addonFolder() {\n    return path.resolve(data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].dataPath, \"plugins\");\n  }\n\n  get prefix() {\n    return \"plugin\";\n  }\n\n  constructor() {\n    super();\n    this.onSwitch = this.onSwitch.bind(this);\n    this.observer = new MutationObserver(mutations => {\n      for (let i = 0, mlen = mutations.length; i < mlen; i++) {\n        this.onMutation(mutations[i]);\n      }\n    });\n  }\n\n  initialize() {\n    const errors = super.initialize();\n    this.setupFunctions();\n    _settingsmanager__WEBPACK_IMPORTED_MODULE_5__[\"default\"].registerPanel(\"plugins\", _strings__WEBPACK_IMPORTED_MODULE_6__[\"default\"].Panels.plugins, {\n      element: () => _ui_settings__WEBPACK_IMPORTED_MODULE_9__[\"default\"].getAddonPanel(_strings__WEBPACK_IMPORTED_MODULE_6__[\"default\"].Panels.plugins, this.addonList, this.state, {\n        folder: this.addonFolder,\n        onChange: this.togglePlugin.bind(this),\n        reload: this.reloadPlugin.bind(this),\n        refreshList: this.updatePluginList.bind(this)\n      })\n    });\n    return errors;\n  }\n  /* Aliases */\n\n\n  updatePluginList() {\n    return this.updateList();\n  }\n\n  loadAllPlugins() {\n    return this.loadAllAddons();\n  }\n\n  enablePlugin(idOrAddon) {\n    return this.enableAddon(idOrAddon);\n  }\n\n  disablePlugin(idOrAddon) {\n    return this.disableAddon(idOrAddon);\n  }\n\n  togglePlugin(id) {\n    return this.toggleAddon(id);\n  }\n\n  unloadPlugin(idOrFileOrAddon) {\n    return this.unloadAddon(idOrFileOrAddon);\n  }\n\n  loadPlugin(filename) {\n    const error = this.loadAddon(filename);\n    if (error) _ui_modals__WEBPACK_IMPORTED_MODULE_8__[\"default\"].showAddonErrors({\n      themes: [error]\n    });\n  }\n\n  reloadPlugin(idOrFileOrAddon) {\n    const error = this.reloadAddon(idOrFileOrAddon);\n    if (error) _ui_modals__WEBPACK_IMPORTED_MODULE_8__[\"default\"].showAddonErrors({\n      plugins: [error]\n    });\n    return typeof idOrFileOrAddon == \"string\" ? this.addonList.find(c => c.id == idOrFileOrAddon || c.filename == idOrFileOrAddon) : idOrFileOrAddon;\n  }\n  /* Overrides */\n\n\n  initializeAddon(addon) {\n    if (!addon.type) return new _structs_addonerror__WEBPACK_IMPORTED_MODULE_4__[\"default\"](addon.name, addon.filename, \"Plugin had no exports\", {\n      message: \"Plugin had no exports or no name property.\",\n      stack: \"\"\n    });\n\n    try {\n      const thePlugin = new addon.type();\n      addon.plugin = thePlugin;\n      addon.name = thePlugin.getName() || addon.name;\n      addon.author = thePlugin.getAuthor() || addon.author || \"No author\";\n      addon.description = thePlugin.getDescription() || addon.description || \"No description\";\n      addon.version = thePlugin.getVersion() || addon.version || \"No version\";\n\n      try {\n        if (typeof addon.plugin.load == \"function\") addon.plugin.load();\n      } catch (error) {\n        this.state[addon.id] = false;\n        return new _structs_addonerror__WEBPACK_IMPORTED_MODULE_4__[\"default\"](addon.name, addon.filename, \"load() could not be fired.\", {\n          message: error.message,\n          stack: error.stack\n        });\n      }\n    } catch (error) {\n      return new _structs_addonerror__WEBPACK_IMPORTED_MODULE_4__[\"default\"](addon.name, addon.filename, \"Could not be constructed.\", {\n        message: error.message,\n        stack: error.stack\n      });\n    }\n  }\n\n  getFileModification(module, fileContent, meta) {\n    module._compile(fileContent, module.filename);\n\n    const didExport = !_utilities__WEBPACK_IMPORTED_MODULE_3__[\"default\"].isEmpty(module.exports);\n\n    if (didExport) {\n      meta.type = module.exports;\n      module.exports = meta;\n      return \"\";\n    }\n\n    fileContent += `\\nmodule.exports = ${JSON.stringify(meta)};\\nmodule.exports.type = ${meta.exports || meta.name};`;\n    return fileContent;\n  }\n\n  startAddon(id) {\n    return this.startPlugin(id);\n  }\n\n  stopAddon(id) {\n    return this.stopPlugin(id);\n  }\n\n  startPlugin(idOrAddon) {\n    const addon = typeof idOrAddon == \"string\" ? this.addonList.find(p => p.id == idOrAddon) : idOrAddon;\n    if (!addon) return;\n    const plugin = addon.plugin;\n\n    try {\n      plugin.start();\n      this.emit(\"started\", addon.id);\n      _ui_toasts__WEBPACK_IMPORTED_MODULE_7__[\"default\"].show(`${addon.name} v${addon.version} has started.`);\n    } catch (err) {\n      this.state[addon.id] = false;\n      _ui_toasts__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error(`${addon.name} v${addon.version} could not be started.`);\n      _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacktrace(this.name, addon.name + \" could not be started.\", err);\n      return new _structs_addonerror__WEBPACK_IMPORTED_MODULE_4__[\"default\"](addon.name, addon.filename, \"start() could not be fired.\", {\n        message: err.message,\n        stack: err.stack\n      });\n    }\n  }\n\n  stopPlugin(idOrAddon) {\n    const addon = typeof idOrAddon == \"string\" ? this.addonList.find(p => p.id == idOrAddon) : idOrAddon;\n    if (!addon) return;\n    const plugin = addon.plugin;\n\n    try {\n      plugin.stop();\n      this.emit(\"stopped\", addon.id);\n      _ui_toasts__WEBPACK_IMPORTED_MODULE_7__[\"default\"].show(`${addon.name} v${addon.version} has stopped.`);\n    } catch (err) {\n      this.state[addon.id] = false;\n      _ui_toasts__WEBPACK_IMPORTED_MODULE_7__[\"default\"].error(`${addon.name} v${addon.version} could not be stopped.`);\n      _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacktrace(this.name, addon.name + \" could not be stopped.\", err);\n      return new _structs_addonerror__WEBPACK_IMPORTED_MODULE_4__[\"default\"](addon.name, addon.filename, \"stop() could not be fired.\", {\n        message: err.message,\n        stack: err.stack\n      });\n    }\n  }\n\n  setupFunctions() {\n    electronRemote.getCurrentWebContents().on(\"did-navigate-in-page\", this.onSwitch.bind(this));\n    this.observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n  }\n\n  onSwitch() {\n    this.emit(\"page-switch\");\n\n    for (let i = 0; i < this.addonList.length; i++) {\n      const plugin = this.addonList[i].plugin;\n      if (!this.state[this.addonList[i].id]) continue;\n\n      if (typeof plugin.onSwitch === \"function\") {\n        try {\n          plugin.onSwitch();\n        } catch (err) {\n          _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacktrace(this.name, \"Unable to fire onSwitch for \" + this.addonList[i].name + \".\", err);\n        }\n      }\n    }\n  }\n\n  onMutation(mutation) {\n    for (let i = 0; i < this.addonList.length; i++) {\n      const plugin = this.addonList[i].plugin;\n      if (!this.state[this.addonList[i].id]) continue;\n\n      if (typeof plugin.observer === \"function\") {\n        try {\n          plugin.observer(mutation);\n        } catch (err) {\n          _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacktrace(this.name, \"Unable to fire observer for \" + this.addonList[i].name + \".\", err);\n        }\n      }\n    }\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/pluginmanager.js\n");

/***/ }),

/***/ "./src/modules/reactcomponents.js":
/*!****************************************!*\
  !*** ./src/modules/reactcomponents.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony import */ var _patcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./patcher */ \"./src/modules/patcher.js\");\n\n\nconst React = _discordmodules__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React;\nconst components = {};\nconst unknownComponents = new Set();\nconst listeners = new Set();\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class ReactComponents {\n  get named() {\n    return components;\n  }\n\n  get unknown() {\n    return unknownComponents;\n  }\n\n  get listeners() {\n    return listeners;\n  }\n\n  constructor() {\n    _patcher__WEBPACK_IMPORTED_MODULE_1__[\"default\"].after(\"ReactComponents\", React, \"createElement\", (_, __, returnValue) => {\n      this.walkRenderTree(returnValue);\n    });\n    _patcher__WEBPACK_IMPORTED_MODULE_1__[\"default\"].instead(\"ReactComponents\", React.Component.prototype, \"componentWillMount\", thisObject => {\n      this.addComponent(thisObject.constructor);\n    });\n    _patcher__WEBPACK_IMPORTED_MODULE_1__[\"default\"].instead(\"ReactComponents\", React.Component.prototype, \"UNSAFE_componentWillMount\", thisObject => {\n      this.addComponent(thisObject.constructor);\n    });\n    _patcher__WEBPACK_IMPORTED_MODULE_1__[\"default\"].instead(\"ReactComponents\", React.PureComponent.prototype, \"componentWillMount\", thisObject => {\n      this.addComponent(thisObject.constructor);\n    });\n    _patcher__WEBPACK_IMPORTED_MODULE_1__[\"default\"].instead(\"ReactComponents\", React.PureComponent.prototype, \"UNSAFE_componentWillMount\", thisObject => {\n      this.addComponent(thisObject.constructor);\n    });\n  }\n\n  initialize() {\n    this.walkReactTree(document.querySelector(\"#app-mount\")._reactRootContainer._internalRoot.current);\n  }\n\n  get(name, filter) {\n    return new Promise(resolve => {\n      if (components[name]) return resolve(components[name]);\n      listeners.add({\n        name,\n        filter,\n        resolve\n      });\n      if (!filter) return;\n\n      for (const component of unknownComponents) {\n        if (!filter(component)) continue;\n        component.displayName = name;\n        unknownComponents.delete(component);\n        this.addNamedComponent(component);\n      }\n    });\n  }\n\n  addNamedComponent(component) {\n    const name = component.displayName;\n\n    if (!components[name]) {\n      components[name] = component;\n\n      for (const listener of listeners) {\n        if (listener.name !== name) continue;\n        listener.resolve(component);\n        listeners.delete(listener);\n      }\n    }\n  }\n\n  addUnknownComponent(component) {\n    if (unknownComponents.has(component)) return;\n\n    for (const listener of listeners) {\n      if (!listener.filter || !listener.filter(component)) continue;\n      component.displayName = listener.name;\n      this.addNamedComponent(component);\n    }\n\n    if (!component.displayName) unknownComponents.add(component);\n  }\n\n  addComponent(component) {\n    if (component.displayName) return this.addNamedComponent(component);\n    return this.addUnknownComponent(component);\n  }\n\n  walkRenderTree(tree) {\n    if (!tree) return;\n    if (typeof tree.type == \"function\") this.addComponent(tree.type);\n    if (Array.isArray(tree)) for (const value of tree) this.walkRenderTree(value);\n    if (tree.props && tree.props.children) this.walkRenderTree(tree.props.children);\n  }\n\n  walkReactTree(tree) {\n    if (!tree) return;\n    if (typeof tree.type == \"function\") this.addComponent(tree.type);\n    if (tree.child) this.walkReactTree(tree.child);\n    if (tree.sibling) this.walkReactTree(tree.sibling);\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL21vZHVsZXMvcmVhY3Rjb21wb25lbnRzLmpzPzY5NTQiXSwibmFtZXMiOlsiUmVhY3QiLCJEaXNjb3JkTW9kdWxlcyIsImNvbXBvbmVudHMiLCJ1bmtub3duQ29tcG9uZW50cyIsIlNldCIsImxpc3RlbmVycyIsIlJlYWN0Q29tcG9uZW50cyIsIm5hbWVkIiwidW5rbm93biIsImNvbnN0cnVjdG9yIiwiUGF0Y2hlciIsImFmdGVyIiwiXyIsIl9fIiwicmV0dXJuVmFsdWUiLCJ3YWxrUmVuZGVyVHJlZSIsImluc3RlYWQiLCJDb21wb25lbnQiLCJwcm90b3R5cGUiLCJ0aGlzT2JqZWN0IiwiYWRkQ29tcG9uZW50IiwiUHVyZUNvbXBvbmVudCIsImluaXRpYWxpemUiLCJ3YWxrUmVhY3RUcmVlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsIl9pbnRlcm5hbFJvb3QiLCJjdXJyZW50IiwiZ2V0IiwibmFtZSIsImZpbHRlciIsIlByb21pc2UiLCJyZXNvbHZlIiwiYWRkIiwiY29tcG9uZW50IiwiZGlzcGxheU5hbWUiLCJkZWxldGUiLCJhZGROYW1lZENvbXBvbmVudCIsImxpc3RlbmVyIiwiYWRkVW5rbm93bkNvbXBvbmVudCIsImhhcyIsInRyZWUiLCJ0eXBlIiwiQXJyYXkiLCJpc0FycmF5IiwidmFsdWUiLCJwcm9wcyIsImNoaWxkcmVuIiwiY2hpbGQiLCJzaWJsaW5nIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUEsTUFBTUEsS0FBSyxHQUFHQyx1REFBYyxDQUFDRCxLQUE3QjtBQUNBLE1BQU1FLFVBQVUsR0FBRyxFQUFuQjtBQUNBLE1BQU1DLGlCQUFpQixHQUFHLElBQUlDLEdBQUosRUFBMUI7QUFDQSxNQUFNQyxTQUFTLEdBQUcsSUFBSUQsR0FBSixFQUFsQjtBQUVlLG1FQUFJLE1BQU1FLGVBQU4sQ0FBc0I7QUFFckMsTUFBSUMsS0FB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QUFvQjJCLElBQUksQ0FBQ0ssS0FBTCxDQUFXQyxRQUEvQjtBQUMxQzs7QUFFRHpCLGVBQWEsQ0FBQ21CLElBQUQsRUFBTztBQUNoQixRQUFJLENBQUNBLElBQUwsRUFBVztBQUNYLFFBQUksT0FBT0EsSUFBSSxDQUFDQyxJQUFaLElBQXFCLFVBQXpCLEVBQXFDLEtBQUt2QixZQUFMLENBQWtCc0IsSUFBSSxDQUFDQyxJQUF2QjtBQUNyQyxRQUFJRCxJQUFJLENBQUNPLEtBQVQsRUFBZ0IsS0FBSzFCLGFBQUwsQ0FBbUJtQixJQUFJLENBQUNPLEtBQXhCO0FBQ2hCLFFBQUlQLElBQUksQ0FBQ1EsT0FBVCxFQUFrQixLQUFLM0IsYUFBTCxDQUFtQm1CLElBQUksQ0FBQ1EsT0FBeEI7QUFDckI7O0FBbEZvQyxDQUExQixFQUFmIiwiZmlsZSI6Ii4vc3JjL21vZHVsZXMvcmVhY3Rjb21wb25lbnRzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpc2NvcmRNb2R1bGVzIGZyb20gXCIuL2Rpc2NvcmRtb2R1bGVzXCI7XHJcbmltcG9ydCBQYXRjaGVyIGZyb20gXCIuL3BhdGNoZXJcIjtcclxuXHJcbmNvbnN0IFJlYWN0ID0gRGlzY29yZE1vZHVsZXMuUmVhY3Q7XHJcbmNvbnN0IGNvbXBvbmVudHMgPSB7fTtcclxuY29uc3QgdW5rbm93bkNvbXBvbmVudHMgPSBuZXcgU2V0KCk7XHJcbmNvbnN0IGxpc3RlbmVycyA9IG5ldyBTZXQoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG5ldyBjbGFzcyBSZWFjdENvbXBvbmVudHMge1xyXG5cclxuICAgIGdldCBuYW1lZCgpIHtyZXR1cm4gY29tcG9uZW50czt9XHJcbiAgICBnZXQgdW5rbm93bigpIHtyZXR1cm4gdW5rbm93bkNvbXBvbmVudHM7fVxyXG4gICAgZ2V0IGxpc3RlbmVycygpIHtyZXR1cm4gbGlzdGVuZXJzO31cclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBQYXRjaGVyLmFmdGVyKFwiUmVhY3RDb21wb25lbnRzXCIsIFJlYWN0LCBcImNyZWF0ZUVsZW1lbnRcIiwgKF8sIF9fLCByZXR1cm5WYWx1ZSkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLndhbGtSZW5kZXJUcmVlKHJldHVyblZhbHVlKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBQYXRjaGVyLmluc3RlYWQoXCJSZWFjdENvbXBvbmVudHNcIiwgUmVhY3QuQ29tcG9uZW50LnByb3RvdHlwZSwgXCJjb21wb25lbnRXaWxsTW91bnRcIiwgKHRoaXNPYmplY3QpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5hZGRDb21wb25lbnQodGhpc09iamVjdC5jb25zdHJ1Y3Rvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgUGF0Y2hlci5pbnN0ZWFkKFwiUmVhY3RDb21wb25lbnRzXCIsIFJlYWN0LkNvbXBvbmVudC5wcm90b3R5cGUsIFwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudFwiLCAodGhpc09iamVjdCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFkZENvbXBvbmVudCh0aGlzT2JqZWN0LmNvbnN0cnVjdG9yKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgUGF0Y2hlci5pbnN0ZWFkKFwiUmVhY3RDb21wb25lbnRzXCIsIFJlYWN0LlB1cmVDb21wb25lbnQucHJvdG90eXBlLCBcImNvbXBvbmVudFdpbGxNb3VudFwiLCAodGhpc09iamVjdCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFkZENvbXBvbmVudCh0aGlzT2JqZWN0LmNvbnN0cnVjdG9yKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICBQYXRjaGVyLmluc3RlYWQoXCJSZWFjdENvbXBvbmVudHNcIiwgUmVhY3QuUHVyZUNvbXBvbmVudC5wcm90b3R5cGUsIFwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudFwiLCAodGhpc09iamVjdCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmFkZENvbXBvbmVudCh0aGlzT2JqZWN0LmNvbnN0cnVjdG9yKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpbml0aWFsaXplKCkge1xyXG4gICAgICAgIHRoaXMud2Fsa1JlYWN0VHJlZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FwcC1tb3VudFwiKS5fcmVhY3RSb290Q29udGFpbmVyLl9pbnRlcm5hbFJvb3QuY3VycmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0KG5hbWUsIGZpbHRlcikge1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcclxuICAgICAgICAgICAgaWYgKGNvbXBvbmVudHNbbmFtZV0pIHJldHVybiByZXNvbHZlKGNvbXBvbmVudHNbbmFtZV0pO1xyXG4gICAgICAgICAgICBsaXN0ZW5lcnMuYWRkKHtuYW1lLCBmaWx0ZXIsIHJlc29sdmV9KTtcclxuICAgICAgICAgICAgaWYgKCFmaWx0ZXIpIHJldHVybjtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBjb21wb25lbnQgb2YgdW5rbm93bkNvbXBvbmVudHMpIHtcclxuICAgICAgICAgICAgICAgIGlmICghZmlsdGVyKGNvbXBvbmVudCkpIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgY29tcG9uZW50LmRpc3BsYXlOYW1lID0gbmFtZTtcclxuICAgICAgICAgICAgICAgIHVua25vd25Db21wb25lbnRzLmRlbGV0ZShjb21wb25lbnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGROYW1lZENvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkTmFtZWRDb21wb25lbnQoY29tcG9uZW50KSB7XHJcbiAgICAgICAgY29uc3QgbmFtZSA9IGNvbXBvbmVudC5kaXNwbGF5TmFtZTtcclxuICAgICAgICBpZiAoIWNvbXBvbmVudHNbbmFtZV0pIHtcclxuICAgICAgICAgICAgY29tcG9uZW50c1tuYW1lXSA9IGNvbXBvbmVudDtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiBsaXN0ZW5lcnMpIHtcclxuICAgICAgICAgICAgICAgIGlmIChsaXN0ZW5lci5uYW1lICE9PSBuYW1lKSBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGxpc3RlbmVyLnJlc29sdmUoY29tcG9uZW50KTtcclxuICAgICAgICAgICAgICAgIGxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZFVua25vd25Db21wb25lbnQoY29tcG9uZW50KSB7XHJcbiAgICAgICAgaWYgKHVua25vd25Db21wb25lbnRzLmhhcyhjb21wb25lbnQpKSByZXR1cm47XHJcbiAgICAgICAgZm9yIChjb25zdCBsaXN0ZW5lciBvZiBsaXN0ZW5lcnMpIHtcclxuICAgICAgICAgICAgaWYgKCFsaXN0ZW5lci5maWx0ZXIgfHwgIWxpc3RlbmVyLmZpbHRlcihjb21wb25lbnQpKSBjb250aW51ZTtcclxuICAgICAgICAgICAgY29tcG9uZW50LmRpc3BsYXlOYW1lID0gbGlzdGVuZXIubmFtZTtcclxuICAgICAgICAgICAgdGhpcy5hZGROYW1lZENvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoIWNvbXBvbmVudC5kaXNwbGF5TmFtZSkgdW5rbm93bkNvbXBvbmVudHMuYWRkKGNvbXBvbmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkQ29tcG9uZW50KGNvbXBvbmVudCkge1xyXG4gICAgICAgIGlmIChjb21wb25lbnQuZGlzcGxheU5hbWUpIHJldHVybiB0aGlzLmFkZE5hbWVkQ29tcG9uZW50KGNvbXBvbmVudCk7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuYWRkVW5rbm93bkNvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIHdhbGtSZW5kZXJUcmVlKHRyZWUpIHtcclxuICAgICAgICBpZiAoIXRyZWUpIHJldHVybjtcclxuICAgICAgICBpZiAodHlwZW9mKHRyZWUudHlwZSkgPT0gXCJmdW5jdGlvblwiKSB0aGlzLmFkZENvbXBvbmVudCh0cmVlLnR5cGUpO1xyXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRyZWUpKSBmb3IgKGNvbnN0IHZhbHVlIG9mIHRyZWUpIHRoaXMud2Fsa1JlbmRlclRyZWUodmFsdWUpO1xyXG4gICAgICAgIGlmICh0cmVlLnByb3BzICYmIHRyZWUucHJvcHMuY2hpbGRyZW4pIHRoaXMud2Fsa1JlbmRlclRyZWUodHJlZS5wcm9wcy5jaGlsZHJlbik7XHJcbiAgICB9XHJcblxyXG4gICAgd2Fsa1JlYWN0VHJlZSh0cmVlKSB7XHJcbiAgICAgICAgaWYgKCF0cmVlKSByZXR1cm47XHJcbiAgICAgICAgaWYgKHR5cGVvZih0cmVlLnR5cGUpID09IFwiZnVuY3Rpb25cIikgdGhpcy5hZGRDb21wb25lbnQodHJlZS50eXBlKTtcclxuICAgICAgICBpZiAodHJlZS5jaGlsZCkgdGhpcy53YWxrUmVhY3RUcmVlKHRyZWUuY2hpbGQpO1xyXG4gICAgICAgIGlmICh0cmVlLnNpYmxpbmcpIHRoaXMud2Fsa1JlYWN0VHJlZSh0cmVlLnNpYmxpbmcpO1xyXG4gICAgfVxyXG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/modules/reactcomponents.js\n");

/***/ }),

/***/ "./src/modules/settingsmanager.js":
/*!****************************************!*\
  !*** ./src/modules/settingsmanager.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/modules/logger.js\");\n/* harmony import */ var _datastore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./datastore */ \"./src/modules/datastore.js\");\n/* harmony import */ var _emitter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./emitter */ \"./src/modules/emitter.js\");\n/* harmony import */ var _discordmodules__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./discordmodules */ \"./src/modules/discordmodules.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./strings */ \"./src/modules/strings.js\");\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class SettingsManager {\n  constructor() {\n    this.state = {};\n    this.collections = [];\n    this.panels = [];\n    this.registerCollection(\"settings\", \"Settings\", data__WEBPACK_IMPORTED_MODULE_0__[\"SettingsConfig\"]);\n    this.updateStrings = this.updateStrings.bind(this);\n  }\n\n  initialize() {\n    this.loadSettings();\n    this.updateStrings();\n    _emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"].on(\"strings-updated\", this.updateStrings); // this.patchSections();\n  }\n\n  registerCollection(id, name, settings, button = null) {\n    if (this.collections.find(c => c.id == id)) return _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Settings\", \"Already have a collection with id \" + id);\n    this.collections.push({\n      type: \"collection\",\n      id: id,\n      name: name,\n      settings: settings,\n      button: button\n    });\n    this.setup();\n    this.updateStrings();\n  }\n\n  removeCollection(id) {\n    const location = this.collections.findIndex(c => c.id == id);\n    if (!location < 0) return _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Settings\", \"No collection with id \" + id);\n    this.collections.splice(location, 1);\n  } // TODO: Move this to SettingsRenderer and also add a registerContentPanel\n\n\n  registerPanel(id, name, options) {\n    if (this.panels.find(p => p.id == id)) return _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Settings\", \"Already have a panel with id \" + id);\n    const {\n      element,\n      onClick,\n      order = 1\n    } = options;\n    const section = {\n      id,\n      order,\n      label: name,\n      section: id\n    };\n    if (onClick) section.clickListener = onClick;\n    if (element) section.element = element instanceof _discordmodules__WEBPACK_IMPORTED_MODULE_4__[\"default\"].React.Component ? () => _discordmodules__WEBPACK_IMPORTED_MODULE_4__[\"default\"].React.createElement(element, {}) : typeof element == \"function\" ? element : () => element;\n    this.panels.push(section);\n  }\n\n  removePanel(id) {\n    const location = this.panels.findIndex(c => c.id == id);\n    if (!location < 0) return _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"Settings\", \"No collection with id \" + id);\n    this.panels.splice(location, 1);\n  }\n\n  getPath(path, collectionId = \"\", categoryId = \"\") {\n    const collection = path.length == 3 ? path[0] : collectionId;\n    const category = path.length == 3 ? path[1] : path.length == 2 ? path[0] : categoryId;\n    const setting = path[path.length - 1];\n    return {\n      collection,\n      category,\n      setting\n    };\n  }\n\n  setup() {\n    for (let c = 0; c < this.collections.length; c++) {\n      const collection = this.collections[c];\n      const categories = this.collections[c].settings;\n      if (!this.state[collection.id]) this.state[collection.id] = {};\n\n      for (let cc = 0; cc < categories.length; cc++) {\n        const category = categories[cc];\n\n        if (category.type != \"category\") {\n          if (!this.state[collection.id].hasOwnProperty(category.id)) this.state[collection.id][category.id] = category.value;\n        } else {\n          if (!this.state[collection.id].hasOwnProperty(category.id)) this.state[collection.id][category.id] = {};\n\n          for (let s = 0; s < category.settings.length; s++) {\n            const setting = category.settings[s];\n            if (!this.state[collection.id][category.id].hasOwnProperty(setting.id)) this.state[collection.id][category.id][setting.id] = setting.value;\n\n            if (setting.enableWith) {\n              const path = this.getPath(setting.enableWith.split(\".\"), collection.id, category.id);\n              if (setting.hasOwnProperty(\"disabled\")) continue;\n              Object.defineProperty(setting, \"disabled\", {\n                get: () => {\n                  return !this.state[path.collection][path.category][path.setting];\n                }\n              });\n            }\n\n            if (setting.disableWith) {\n              const path = this.getPath(setting.disableWith.split(\".\"), collection.id, category.id);\n              if (setting.hasOwnProperty(\"disabled\")) continue;\n              Object.defineProperty(setting, \"disabled\", {\n                get: () => {\n                  return this.state[path.collection][path.category][path.setting];\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n  saveSettings() {\n    _datastore__WEBPACK_IMPORTED_MODULE_2__[\"default\"].setData(\"settings\", this.state);\n  }\n\n  loadSettings() {\n    const previousState = _datastore__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getData(\"settings\");\n    if (!previousState) return this.saveSettings();\n\n    for (const collection in this.state) {\n      if (!previousState[collection]) Object.assign(previousState, {\n        [collection]: this.state[collection]\n      });\n\n      for (const category in this.state[collection]) {\n        if (!previousState[collection][category]) Object.assign(previousState[collection], {\n          [category]: this.state[collection][category]\n        });\n\n        for (const setting in this.state[collection][category]) {\n          if (previousState[collection][category][setting] == undefined) continue;\n          this.state[collection][category][setting] = previousState[collection][category][setting];\n        }\n      }\n    }\n\n    this.saveSettings(); // in case new things were added\n  }\n\n  onSettingChange(collection, category, id, value) {\n    this.state[collection][category][id] = value;\n    _emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dispatch(\"setting-updated\", collection, category, id, value);\n    this.saveSettings();\n  }\n\n  getSetting(collection, category, id) {\n    if (arguments.length == 2) return this.collections[0].find(c => c.id == arguments[0]).settings.find(s => s.id == arguments[1]);\n    return this.collections.find(c => c.id == collection).find(c => c.id == category).settings.find(s => s.id == id);\n  }\n\n  get(collection, category, id) {\n    if (arguments.length == 2) {\n      id = category;\n      category = collection;\n      collection = \"settings\";\n    }\n\n    if (!this.state[collection] || !this.state[collection][category]) return false;\n    return this.state[collection][category][id];\n  }\n\n  set(collection, category, id, value) {\n    if (arguments.length == 3) {\n      value = id;\n      id = category;\n      category = collection;\n      collection = \"settings\";\n    }\n\n    return this.onSettingChange(collection, category, id, value);\n  }\n\n  on(collection, category, identifier, callback) {\n    const handler = (col, cat, id, value) => {\n      if (col !== collection || cat !== category || id !== identifier) return;\n      callback(value);\n    };\n\n    _emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"].on(\"setting-updated\", handler);\n    return () => {\n      _emitter__WEBPACK_IMPORTED_MODULE_3__[\"default\"].off(\"setting-updated\", handler);\n    };\n  }\n\n  updateStrings() {\n    // Update settings collections\n    for (let c = 0; c < this.collections.length; c++) {\n      const collection = this.collections[c];\n      const CS = _strings__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Collections[collection.id];\n      if (!CS) continue;\n      collection.name = CS.name || collection.name;\n      const categories = this.collections[c].settings;\n\n      for (let cat = 0; cat < categories.length; cat++) {\n        const category = categories[cat];\n        const CatStr = CS[category.id];\n        if (!CatStr) continue;\n        category.name = CatStr.name || category.name;\n\n        for (let s = 0; s < category.settings.length; s++) {\n          const setting = category.settings[s];\n          const SetStr = CatStr[setting.id];\n          if (!SetStr) continue;\n          setting.name = SetStr.name || setting.name;\n          setting.note = SetStr.note || setting.note;\n        }\n      }\n    } // Update panel labels\n\n\n    for (let p = 0; p < this.panels.length; p++) {\n      const panel = this.panels[p];\n      const Str = _strings__WEBPACK_IMPORTED_MODULE_5__[\"default\"].Panels[panel.id];\n      panel.label = Str || panel.label;\n    }\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/settingsmanager.js\n");

/***/ }),

/***/ "./src/modules/strings.js":
/*!********************************!*\
  !*** ./src/modules/strings.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _localemanager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./localemanager */ \"./src/modules/localemanager.js\");\n/* harmony import */ var _structs_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../structs/string */ \"./src/structs/string.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new Proxy(_localemanager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].strings, {\n  get: function (strings, category) {\n    if (!strings.hasOwnProperty(category)) {\n      return new Proxy({}, {\n        get: function () {\n          return `String group \"${category}\" not found.`;\n        }\n      });\n    }\n\n    return new Proxy(strings[category], {\n      get: function (obj, prop) {\n        if (typeof obj[prop] == \"string\") return new _structs_string__WEBPACK_IMPORTED_MODULE_1__[\"default\"](obj[prop]);\n        return obj[prop];\n      }\n    });\n  }\n}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL21vZHVsZXMvc3RyaW5ncy5qcz8zNTllIl0sIm5hbWVzIjpbIlByb3h5IiwiTG9jYWxlTWFuYWdlciIsInN0cmluZ3MiLCJnZXQiLCJjYXRlZ29yeSIsImhhc093blByb3BlcnR5Iiwib2JqIiwicHJvcCIsIkZvcm1hdHRhYmxlU3RyaW5nIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRWUsbUVBQUlBLEtBQUosQ0FBVUMsc0RBQWEsQ0FBQ0MsT0FBeEIsRUFBaUM7QUFDL0NDLEtBQUcsRUFBRSxVQUFTRCxPQUFULEVBQWtCRSxRQUFsQixFQUE0QjtBQUMxQixRQUFJLENBQUNGLE9BQU8sQ0FBQ0csY0FBUixDQUF1QkQsUUFBdkIsQ0FBTCxFQUF1QztBQUM1QyxhQUFPLElBQUlKLEtBQUosQ0FBVSxFQUFWLEVBQWM7QUFDcEJHLFdBQUcsRUFBRSxZQUFXO0FBQ2YsaUJBQVEsaUJBQWdCQyxRQUFTLGNBQWpDO0FBQ0E7QUFIbUIsT0FBZCxDQUFQO0FBS0E7O0FBQ0QsV0FBTyxJQUFJSixLQUFKLENBQVVFLE9BQU8sQ0FBQ0UsUUFBRCxDQUFqQixFQUE2QjtBQUNuQ0QsU0FBRyxFQUFFLFVBQVNHLEdBQVQsRUFBY0MsSUFBZCxFQUFvQjtBQUN4QixZQUFJLE9BQU9ELEdBQUcsQ0FBQ0MsSUFBRCxDQUFWLElBQXFCLFFBQXpCLEVBQW1DLE9BQU8sSUFBSUMsdURBQUosQ0FBc0JGLEdBQUcsQ0FBQ0MsSUFBRCxDQUF6QixDQUFQO0FBQ25DLGVBQU9ELEdBQUcsQ0FBQ0MsSUFBRCxDQUFWO0FBQ0E7QUFKa0MsS0FBN0IsQ0FBUDtBQU1BO0FBZjhDLENBQWpDLENBQWYiLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9zdHJpbmdzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvY2FsZU1hbmFnZXIgZnJvbSBcIi4vbG9jYWxlbWFuYWdlclwiO1xyXG5pbXBvcnQgRm9ybWF0dGFibGVTdHJpbmcgZnJvbSBcIi4uL3N0cnVjdHMvc3RyaW5nXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgUHJveHkoTG9jYWxlTWFuYWdlci5zdHJpbmdzLCB7XHJcblx0Z2V0OiBmdW5jdGlvbihzdHJpbmdzLCBjYXRlZ29yeSkge1xyXG4gICAgICAgIGlmICghc3RyaW5ncy5oYXNPd25Qcm9wZXJ0eShjYXRlZ29yeSkpIHtcclxuXHRcdFx0cmV0dXJuIG5ldyBQcm94eSh7fSwge1xyXG5cdFx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gYFN0cmluZyBncm91cCBcIiR7Y2F0ZWdvcnl9XCIgbm90IGZvdW5kLmA7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBuZXcgUHJveHkoc3RyaW5nc1tjYXRlZ29yeV0sIHtcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbihvYmosIHByb3ApIHtcclxuXHRcdFx0XHRpZiAodHlwZW9mKG9ialtwcm9wXSkgPT0gXCJzdHJpbmdcIikgcmV0dXJuIG5ldyBGb3JtYXR0YWJsZVN0cmluZyhvYmpbcHJvcF0pO1xyXG5cdFx0XHRcdHJldHVybiBvYmpbcHJvcF07XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdH1cclxufSk7XHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/modules/strings.js\n");

/***/ }),

/***/ "./src/modules/thememanager.js":
/*!*************************************!*\
  !*** ./src/modules/thememanager.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var _addonmanager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./addonmanager */ \"./src/modules/addonmanager.js\");\n/* harmony import */ var _settingsmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settingsmanager */ \"./src/modules/settingsmanager.js\");\n/* harmony import */ var _dommanager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dommanager */ \"./src/modules/dommanager.js\");\n/* harmony import */ var _strings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./strings */ \"./src/modules/strings.js\");\n/* harmony import */ var _ui_toasts__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../ui/toasts */ \"./src/ui/toasts.js\");\n/* harmony import */ var _ui_modals__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../ui/modals */ \"./src/ui/modals.js\");\n/* harmony import */ var _ui_settings__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../ui/settings */ \"./src/ui/settings.js\");\n\n\n\n\n\n\n\n\n\nconst path = __webpack_require__(/*! path */ \"path\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class ThemeManager extends _addonmanager__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n  get name() {\n    return \"ThemeManager\";\n  }\n\n  get moduleExtension() {\n    return \".css\";\n  }\n\n  get extension() {\n    return \".theme.css\";\n  }\n\n  get addonFolder() {\n    return path.resolve(data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].dataPath, \"themes\");\n  }\n\n  get prefix() {\n    return \"theme\";\n  }\n\n  initialize() {\n    const errors = super.initialize();\n    _settingsmanager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].registerPanel(\"themes\", _strings__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Panels.themes, {\n      element: () => _ui_settings__WEBPACK_IMPORTED_MODULE_7__[\"default\"].getAddonPanel(_strings__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Panels.themes, this.addonList, this.state, {\n        folder: this.addonFolder,\n        onChange: this.toggleTheme.bind(this),\n        reload: this.reloadTheme.bind(this),\n        refreshList: this.updateThemeList.bind(this)\n      })\n    });\n    return errors;\n  }\n  /* Aliases */\n\n\n  updateThemeList() {\n    return this.updateList();\n  }\n\n  loadAllThemes() {\n    return this.loadAllAddons();\n  }\n\n  enableTheme(idOrAddon) {\n    return this.enableAddon(idOrAddon);\n  }\n\n  disableTheme(idOrAddon) {\n    return this.disableAddon(idOrAddon);\n  }\n\n  toggleTheme(id) {\n    return this.toggleAddon(id);\n  }\n\n  unloadTheme(idOrFileOrAddon) {\n    return this.unloadAddon(idOrFileOrAddon);\n  }\n\n  loadTheme(filename) {\n    const error = this.loadAddon(filename);\n    if (error) _ui_modals__WEBPACK_IMPORTED_MODULE_6__[\"default\"].showAddonErrors({\n      themes: [error]\n    });\n  }\n\n  reloadTheme(idOrFileOrAddon) {\n    const error = this.reloadAddon(idOrFileOrAddon);\n    if (error) _ui_modals__WEBPACK_IMPORTED_MODULE_6__[\"default\"].showAddonErrors({\n      themes: [error]\n    });\n  }\n  /* Overrides */\n\n\n  getFileModification(module, fileContent, meta) {\n    meta.css = fileContent;\n    return `module.exports = ${JSON.stringify(meta)};`;\n  }\n\n  startAddon(id) {\n    return this.addTheme(id);\n  }\n\n  stopAddon(id) {\n    return this.removeTheme(id);\n  }\n\n  addTheme(idOrAddon) {\n    const addon = typeof idOrAddon == \"string\" ? this.addonList.find(p => p.id == idOrAddon) : idOrAddon;\n    if (!addon) return;\n    _dommanager__WEBPACK_IMPORTED_MODULE_3__[\"default\"].injectTheme(addon.id, addon.css);\n    _ui_toasts__WEBPACK_IMPORTED_MODULE_5__[\"default\"].show(`${addon.name} v${addon.version} has been applied.`);\n  }\n\n  removeTheme(idOrAddon) {\n    const addon = typeof idOrAddon == \"string\" ? this.addonList.find(p => p.id == idOrAddon) : idOrAddon;\n    if (!addon) return;\n    _dommanager__WEBPACK_IMPORTED_MODULE_3__[\"default\"].removeTheme(addon.id);\n    _ui_toasts__WEBPACK_IMPORTED_MODULE_5__[\"default\"].show(`${addon.name} v${addon.version} has been removed.`);\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/thememanager.js\n");

/***/ }),

/***/ "./src/modules/utilities.js":
/*!**********************************!*\
  !*** ./src/modules/utilities.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Utilities; });\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ \"./src/modules/logger.js\");\n\n\nclass Utilities {\n  static repoUrl(path) {\n    return `https://cdn.staticaly.com/gh/${data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].repo}/BetterDiscordApp/${data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].hash}/${path}`;\n  }\n  /**\r\n   * Parses a string of HTML and returns the results. If the second parameter is true,\r\n   * the parsed HTML will be returned as a document fragment {@see https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment}.\r\n   * This is extremely useful if you have a list of elements at the top level, they can then be appended all at once to another node.\r\n   *\r\n   * If the second parameter is false, then the return value will be the list of parsed\r\n   * nodes and there were multiple top level nodes, otherwise the single node is returned.\r\n   * @param {string} html - HTML to be parsed\r\n   * @param {boolean} [fragment=false] - Whether or not the return should be the raw `DocumentFragment`\r\n   * @returns {(DocumentFragment|NodeList|HTMLElement)} - The result of HTML parsing\r\n   */\n\n\n  static parseHTML(html, fragment = false) {\n    const template = document.createElement(\"template\");\n    template.innerHTML = html;\n    const node = template.content.cloneNode(true);\n    if (fragment) return node;\n    return node.childNodes.length > 1 ? node.childNodes : node.childNodes[0];\n  }\n\n  static getTextArea() {\n    return $(\".channelTextArea-1LDbYG textarea\");\n  }\n\n  static insertText(textarea, text) {\n    textarea.focus();\n    textarea.selectionStart = 0;\n    textarea.selectionEnd = textarea.value.length;\n    document.execCommand(\"insertText\", false, text);\n  }\n\n  static escape(s) {\n    return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  }\n\n  static testJSON(data) {\n    try {\n      return JSON.parse(data);\n    } catch (err) {\n      return false;\n    }\n  }\n\n  static suppressErrors(method, message) {\n    return (...params) => {\n      try {\n        return method(...params);\n      } catch (e) {\n        _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacktrace(\"SuppressedError\", \"Error occurred in \" + message, e);\n      }\n    };\n  }\n\n  static monkeyPatch(what, methodName, options) {\n    const {\n      before,\n      after,\n      instead,\n      once = false,\n      silent = false,\n      force = false\n    } = options;\n    const displayName = options.displayName || what.displayName || what.name || what.constructor.displayName || what.constructor.name;\n    if (!silent) console.log(\"patch\", methodName, \"of\", displayName); // eslint-disable-line no-console\n\n    if (!what[methodName]) {\n      if (force) what[methodName] = function () {};else return console.error(methodName, \"does not exist for\", displayName); // eslint-disable-line no-console\n    }\n\n    const origMethod = what[methodName];\n\n    const cancel = () => {\n      if (!silent) console.log(\"unpatch\", methodName, \"of\", displayName); // eslint-disable-line no-console\n\n      what[methodName] = origMethod;\n    };\n\n    what[methodName] = function () {\n      const data = {\n        thisObject: this,\n        methodArguments: arguments,\n        cancelPatch: cancel,\n        originalMethod: origMethod,\n        callOriginalMethod: () => data.returnValue = data.originalMethod.apply(data.thisObject, data.methodArguments)\n      };\n\n      if (instead) {\n        const tempRet = Utilities.suppressErrors(instead, \"`instead` callback of \" + what[methodName].displayName)(data);\n        if (tempRet !== undefined) data.returnValue = tempRet;\n      } else {\n        if (before) Utilities.suppressErrors(before, \"`before` callback of \" + what[methodName].displayName)(data);\n        data.callOriginalMethod();\n        if (after) Utilities.suppressErrors(after, \"`after` callback of \" + what[methodName].displayName)(data);\n      }\n\n      if (once) cancel();\n      return data.returnValue;\n    };\n\n    what[methodName].__monkeyPatched = true;\n    if (!what[methodName].__originalMethod) what[methodName].__originalMethod = origMethod;\n    what[methodName].displayName = \"patched \" + (what[methodName].displayName || methodName);\n    return cancel;\n  }\n\n  static onRemoved(node, callback) {\n    const observer = new MutationObserver(mutations => {\n      for (let m = 0; m < mutations.length; m++) {\n        const mutation = mutations[m];\n        const nodes = Array.from(mutation.removedNodes);\n        const directMatch = nodes.indexOf(node) > -1;\n        const parentMatch = nodes.some(parent => parent.contains(node));\n\n        if (directMatch || parentMatch) {\n          observer.disconnect();\n          callback();\n        }\n      }\n    });\n    observer.observe(document.body, {\n      subtree: true,\n      childList: true\n    });\n  }\n\n  static isEmpty(obj) {\n    if (obj == null || obj == undefined || obj == \"\") return true;\n    if (typeof obj !== \"object\") return false;\n    if (Array.isArray(obj)) return obj.length == 0;\n\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) return false;\n    }\n\n    return true;\n  }\n  /**\r\n   * Generates an automatically memoizing version of an object.\r\n   * @author Zerebos\r\n   * @param {Object} object - object to memoize\r\n   * @returns {Proxy} the proxy to the object that memoizes properties\r\n   */\n\n\n  static memoizeObject(object) {\n    const proxy = new Proxy(object, {\n      get: function (obj, mod) {\n        if (!obj.hasOwnProperty(mod)) return undefined;\n\n        if (Object.getOwnPropertyDescriptor(obj, mod).get) {\n          const value = obj[mod];\n          delete obj[mod];\n          obj[mod] = value;\n        }\n\n        return obj[mod];\n      },\n      set: function (obj, mod, value) {\n        if (obj.hasOwnProperty(mod)) return _logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(\"MemoizedObject\", \"Trying to overwrite existing property\");\n        obj[mod] = value;\n        return obj[mod];\n      }\n    });\n    Object.defineProperty(proxy, \"hasOwnProperty\", {\n      value: function (prop) {\n        return this[prop] !== undefined;\n      }\n    });\n    return proxy;\n  }\n  /**\r\n   * Deep extends an object with a set of other objects. Objects later in the list\r\n   * of `extenders` have priority, that is to say if one sets a key to be a primitive,\r\n   * it will be overwritten with the next one with the same key. If it is an object,\r\n   * and the keys match, the object is extended. This happens recursively.\r\n   * @param {object} extendee - Object to be extended\r\n   * @param {...object} extenders - Objects to extend with\r\n   * @returns {object} - A reference to `extendee`\r\n   */\n\n\n  static extend(extendee, ...extenders) {\n    for (let i = 0; i < extenders.length; i++) {\n      for (const key in extenders[i]) {\n        if (extenders[i].hasOwnProperty(key)) {\n          if (typeof extendee[key] === \"object\" && typeof extenders[i][key] === \"object\") this.extend(extendee[key], extenders[i][key]);else if (typeof extenders[i][key] === \"object\") extendee[key] = {}, this.extend(extendee[key], extenders[i][key]);else extendee[key] = extenders[i][key];\n        }\n      }\n    }\n\n    return extendee;\n  }\n  /**\r\n   * Format strings with placeholders (`{{placeholder}}`) into full strings.\r\n   * Quick example: `PluginUtilities.formatString(\"Hello, {{user}}\", {user: \"Zerebos\"})`\r\n   * would return \"Hello, Zerebos\".\r\n   * @param {string} string - string to format\r\n   * @param {object} values - object literal of placeholders to replacements\r\n   * @returns {string} the properly formatted string\r\n   */\n\n\n  static formatString(string, values) {\n    for (const val in values) {\n      let replacement = values[val];\n      if (Array.isArray(replacement)) replacement = JSON.stringify(replacement);\n      if (typeof replacement === \"object\" && replacement !== null) replacement = replacement.toString();\n      string = string.replace(new RegExp(`{{${val}}}`, \"g\"), replacement);\n    }\n\n    return string;\n  }\n  /**\r\n   * Finds a value, subobject, or array from a tree that matches a specific filter.\r\n   * @param {object} tree Tree that should be walked\r\n   * @param {callable} searchFilter Filter to check against each object and subobject\r\n   * @param {object} options Additional options to customize the search\r\n   * @param {Array<string>|null} [options.walkable=null] Array of strings to use as keys that are allowed to be walked on. Null value indicates all keys are walkable\r\n   * @param {Array<string>} [options.ignore=[]] Array of strings to use as keys to exclude from the search, most helpful when `walkable = null`.\r\n   */\n\n\n  static findInTree(tree, searchFilter, {\n    walkable = null,\n    ignore = []\n  } = {}) {\n    if (typeof searchFilter === \"string\") {\n      if (tree.hasOwnProperty(searchFilter)) return tree[searchFilter];\n    } else if (searchFilter(tree)) {\n      return tree;\n    }\n\n    if (typeof tree !== \"object\" || tree == null) return undefined;\n    let tempReturn = undefined;\n\n    if (tree instanceof Array) {\n      for (const value of tree) {\n        tempReturn = this.findInTree(value, searchFilter, {\n          walkable,\n          ignore\n        });\n        if (typeof tempReturn != \"undefined\") return tempReturn;\n      }\n    } else {\n      const toWalk = walkable == null ? Object.keys(tree) : walkable;\n\n      for (const key of toWalk) {\n        if (!tree.hasOwnProperty(key) || ignore.includes(key)) continue;\n        tempReturn = this.findInTree(tree[key], searchFilter, {\n          walkable,\n          ignore\n        });\n        if (typeof tempReturn != \"undefined\") return tempReturn;\n      }\n    }\n\n    return tempReturn;\n  }\n  /**\r\n   * Gets a nested property (if it exists) safely. Path should be something like `prop.prop2.prop3`.\r\n   * Numbers can be used for arrays as well like `prop.prop2.array.0.id`.\r\n   * @param {Object} obj - object to get nested property of\r\n   * @param {string} path - representation of the property to obtain\r\n   */\n\n\n  static getNestedProp(obj, path) {\n    return path.split(/\\s?\\.\\s?/).reduce(function (currentObj, prop) {\n      return currentObj && currentObj[prop];\n    }, obj);\n  }\n  /**\r\n   * Finds a value, subobject, or array from a tree that matches a specific filter. Great for patching render functions.\r\n   * @param {object} tree React tree to look through. Can be a rendered object or an internal instance.\r\n   * @param {callable} searchFilter Filter function to check subobjects against.\r\n   */\n\n\n  static findInRenderTree(tree, searchFilter, {\n    walkable = [\"props\", \"children\", \"child\", \"sibling\"],\n    ignore = []\n  } = {}) {\n    return this.findInTree(tree, searchFilter, {\n      walkable,\n      ignore\n    });\n  }\n  /**\r\n   * Finds a value, subobject, or array from a tree that matches a specific filter. Great for patching render functions.\r\n   * @param {object} tree React tree to look through. Can be a rendered object or an internal instance.\r\n   * @param {callable} searchFilter Filter function to check subobjects against.\r\n   */\n\n\n  static findInReactTree(tree, searchFilter) {\n    return this.findInTree(tree, searchFilter, {\n      walkable: [\"props\", \"children\", \"return\", \"stateNode\"]\n    });\n  }\n\n  static getReactInstance(node) {\n    if (node.__reactInternalInstance$) return node.__reactInternalInstance$;\n    return node[Object.keys(node).find(k => k.startsWith(\"__reactInternalInstance\"))] || null;\n  }\n  /**\r\n  * Grabs a value from the react internal instance. Allows you to grab\r\n  * long depth values safely without accessing no longer valid properties.\r\n  * @param {HTMLElement} node - node to obtain react instance of\r\n  * @param {object} options - options for the search\r\n  * @param {array} [options.include] - list of items to include from the search\r\n  * @param {array} [options.exclude=[\"Popout\", \"Tooltip\", \"Scroller\", \"BackgroundFlash\"]] - list of items to exclude from the search\r\n  * @param {callable} [options.filter=_=>_] - filter to check the current instance with (should return a boolean)\r\n  * @return {(*|null)} the owner instance or undefined if not found.\r\n  */\n\n\n  static getOwnerInstance(node, {\n    include,\n    exclude = [\"Popout\", \"Tooltip\", \"Scroller\", \"BackgroundFlash\"],\n    filter = _ => _\n  } = {}) {\n    if (node === undefined) return undefined;\n    const excluding = include === undefined;\n    const nameFilter = excluding ? exclude : include;\n\n    function getDisplayName(owner) {\n      const type = owner.type;\n      if (!type) return null;\n      return type.displayName || type.name || null;\n    }\n\n    function classFilter(owner) {\n      const name = getDisplayName(owner);\n      return name !== null && !!(nameFilter.includes(name) ^ excluding);\n    }\n\n    let curr = this.getReactInstance(node);\n\n    for (curr = curr && curr.return; curr !== null; curr = curr.return) {\n      if (curr === null) continue;\n      const owner = curr.stateNode;\n      if (curr !== null && !(owner instanceof HTMLElement) && classFilter(curr) && filter(owner)) return owner;\n    }\n\n    return null;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/utilities.js\n");

/***/ }),

/***/ "./src/modules/webpackmodules.js":
/*!***************************************!*\
  !*** ./src/modules/webpackmodules.js ***!
  \***************************************/
/*! exports provided: Filters, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Filters\", function() { return Filters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return WebpackModules; });\n/**\r\n * Allows for grabbing and searching through Discord's webpacked modules.\r\n * @module WebpackModules\r\n * @version 0.0.2\r\n */\n// import DiscordModules from \"./discordmodules\";\n\n/**\r\n * Checks if a given module matches a set of parameters.\r\n * @callback module:WebpackModules.Filters~filter\r\n * @param {*} module - module to check\r\n * @returns {boolean} - True if the module matches the filter, false otherwise\r\n */\n\n/**\r\n * Filters for use with {@link module:WebpackModules} but may prove useful elsewhere.\r\n */\nclass Filters {\n  /**\r\n   * Generates a {@link module:WebpackModules.Filters~filter} that filters by a set of properties.\r\n   * @param {Array<string>} props - Array of property names\r\n   * @param {module:WebpackModules.Filters~filter} filter - Additional filter\r\n   * @returns {module:WebpackModules.Filters~filter} - A filter that checks for a set of properties\r\n   */\n  static byProperties(props, filter = m => m) {\n    return module => {\n      const component = filter(module);\n      if (!component) return false;\n      return props.every(property => component[property] !== undefined);\n    };\n  }\n  /**\r\n   * Generates a {@link module:WebpackModules.Filters~filter} that filters by a set of properties on the object's prototype.\r\n   * @param {Array<string>} fields - Array of property names\r\n   * @param {module:WebpackModules.Filters~filter} filter - Additional filter\r\n   * @returns {module:WebpackModules.Filters~filter} - A filter that checks for a set of properties on the object's prototype\r\n   */\n\n\n  static byPrototypeFields(fields, filter = m => m) {\n    return module => {\n      const component = filter(module);\n      if (!component) return false;\n      if (!component.prototype) return false;\n      return fields.every(field => component.prototype[field] !== undefined);\n    };\n  }\n  /**\r\n   * Generates a {@link module:WebpackModules.Filters~filter} that filters by a regex.\r\n   * @param {RegExp} search - A RegExp to check on the module\r\n   * @param {module:WebpackModules.Filters~filter} filter - Additional filter\r\n   * @returns {module:WebpackModules.Filters~filter} - A filter that checks for a set of properties\r\n   */\n\n\n  static byCode(search, filter = m => m) {\n    return module => {\n      const method = filter(module);\n      if (!method) return false;\n      return method.toString([]).search(search) !== -1;\n    };\n  }\n  /**\r\n   * Generates a {@link module:WebpackModules.Filters~filter} that filters by strings.\r\n   * @param {...String} search - A RegExp to check on the module\r\n   * @returns {module:WebpackModules.Filters~filter} - A filter that checks for a set of strings\r\n   */\n\n\n  static byString(...strings) {\n    return module => {\n      const moduleString = module.toString([]);\n\n      for (const s of strings) {\n        if (!moduleString.includes(s)) return false;\n      }\n\n      return true;\n    };\n  }\n  /**\r\n   * Generates a {@link module:WebpackModules.Filters~filter} that filters by a set of properties.\r\n   * @param {string} name - Name the module should have\r\n   * @param {module:WebpackModules.Filters~filter} filter - Additional filter\r\n   * @returns {module:WebpackModules.Filters~filter} - A filter that checks for a set of properties\r\n   */\n\n\n  static byDisplayName(name) {\n    return module => {\n      return module && module.displayName === name;\n    };\n  }\n  /**\r\n   * Generates a combined {@link module:WebpackModules.Filters~filter} from a list of filters.\r\n   * @param {...module:WebpackModules.Filters~filter} filters - A list of filters\r\n   * @returns {module:WebpackModules.Filters~filter} - Combinatory filter of all arguments\r\n   */\n\n\n  static combine(...filters) {\n    return module => {\n      return filters.every(filter => filter(module));\n    };\n  }\n\n}\nclass WebpackModules {\n  static find(filter, first = true) {\n    return this.getModule(filter, first);\n  }\n\n  static findAll(filter) {\n    return this.getModule(filter, false);\n  }\n\n  static findByUniqueProperties(props, first = true) {\n    return first ? this.getByProps(...props) : this.getAllByProps(...props);\n  }\n\n  static findByDisplayName(name) {\n    return this.getByDisplayName(name);\n  }\n  /**\r\n   * Finds a module using a filter function.\r\n   * @param {Function} filter A function to use to filter modules\r\n   * @param {Boolean} first Whether to return only the first matching module\r\n   * @return {Any}\r\n   */\n\n\n  static getModule(filter, first = true) {\n    const modules = this.getAllModules();\n    const rm = [];\n\n    for (const index in modules) {\n      if (!modules.hasOwnProperty(index)) continue;\n      const module = modules[index];\n      const {\n        exports\n      } = module;\n      let foundModule = null;\n      if (!exports) continue;\n      if (exports.__esModule && exports.default && filter(exports.default)) foundModule = exports.default;\n      if (filter(exports)) foundModule = exports;\n      if (!foundModule) continue;\n      if (first) return foundModule;\n      rm.push(foundModule);\n    }\n\n    return first || rm.length == 0 ? undefined : rm;\n  }\n  /**\r\n   * Finds all modules matching a filter function.\r\n   * @param {Function} filter A function to use to filter modules\r\n   */\n\n\n  static getModules(filter) {\n    return this.getModule(filter, false);\n  }\n  /**\r\n   * Finds a module by its name.\r\n   * @param {String} name The name of the module\r\n   * @param {Function} fallback A function to use to filter modules if not finding a known module\r\n   * @return {Any}\r\n   */\n  // static getModuleByName(name, fallback) {\n  //     if (DiscordModules.hasOwnProperty(name)) return DiscordModules[name];\n  //     if (!fallback) return undefined;\n  //     const module = this.getModule(fallback, true);\n  //     return module ? DiscordModules[name] = module : undefined;\n  // }\n\n  /**\r\n   * Finds a module by its display name.\r\n   * @param {String} name The display name of the module\r\n   * @return {Any}\r\n   */\n\n\n  static getByDisplayName(name) {\n    return this.getModule(Filters.byDisplayName(name), true);\n  }\n  /**\r\n   * Finds a module using its code.\r\n   * @param {RegEx} regex A regular expression to use to filter modules\r\n   * @param {Boolean} first Whether to return the only the first matching module\r\n   * @return {Any}\r\n   */\n\n\n  static getByRegex(regex, first = true) {\n    return this.getModule(Filters.byCode(regex), first);\n  }\n  /**\r\n   * Finds a single module using properties on its prototype.\r\n   * @param {...string} prototypes Properties to use to filter modules\r\n   * @return {Any}\r\n   */\n\n\n  static getByPrototypes(...prototypes) {\n    return this.getModule(Filters.byPrototypeFields(prototypes), true);\n  }\n  /**\r\n   * Finds all modules with a set of properties of its prototype.\r\n   * @param {...string} prototypes Properties to use to filter modules\r\n   * @return {Any}\r\n   */\n\n\n  static getAllByPrototypes(...prototypes) {\n    return this.getModule(Filters.byPrototypeFields(prototypes), false);\n  }\n  /**\r\n   * Finds a single module using its own properties.\r\n   * @param {...string} props Properties to use to filter modules\r\n   * @return {Any}\r\n   */\n\n\n  static getByProps(...props) {\n    return this.getModule(Filters.byProperties(props), true);\n  }\n  /**\r\n   * Finds all modules with a set of properties.\r\n   * @param {...string} props Properties to use to filter modules\r\n   * @return {Any}\r\n   */\n\n\n  static getAllByProps(...props) {\n    return this.getModule(Filters.byProperties(props), false);\n  }\n  /**\r\n   * Finds a single module using a set of strings.\r\n   * @param {...String} props Strings to use to filter modules\r\n   * @return {Any}\r\n   */\n\n\n  static getByString(...strings) {\n    return this.getModule(Filters.byString(...strings), true);\n  }\n  /**\r\n   * Finds all modules with a set of strings.\r\n   * @param {...String} strings Strings to use to filter modules\r\n   * @return {Any}\r\n   */\n\n\n  static getAllByString(...strings) {\n    return this.getModule(Filters.byString(...strings), false);\n  }\n  /**\r\n   * Discord's __webpack_require__ function.\r\n   */\n\n\n  static get require() {\n    if (this._require) return this._require;\n    const id = \"bbd-webpackmodules\";\n\n    const __webpack_require__ = typeof window.webpackJsonp == \"function\" ? window.webpackJsonp([], {\n      [id]: (module, exports, __internal_require__) => exports.default = __internal_require__\n    }, [id]).default : window.webpackJsonp.push([[], {\n      [id]: (module, exports, __internal_require__) => module.exports = __internal_require__\n    }, [[id]]]);\n\n    delete __webpack_require__.m[id];\n    delete __webpack_require__.c[id];\n    return this._require = __webpack_require__;\n  }\n  /**\r\n   * Returns all loaded modules.\r\n   * @return {Array}\r\n   */\n\n\n  static getAllModules() {\n    return this.require.c;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/modules/webpackmodules.js\n");

/***/ }),

/***/ "./src/structs/addonerror.js":
/*!***********************************!*\
  !*** ./src/structs/addonerror.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AddonError; });\nclass AddonError extends Error {\n  constructor(name, filename, message, error) {\n    super(message);\n    this.name = name;\n    this.file = filename;\n    this.error = error;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3N0cnVjdHMvYWRkb25lcnJvci5qcz9lZjgwIl0sIm5hbWVzIjpbIkFkZG9uRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibmFtZSIsImZpbGVuYW1lIiwibWVzc2FnZSIsImVycm9yIiwiZmlsZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlLE1BQU1BLFVBQU4sU0FBeUJDLEtBQXpCLENBQStCO0FBQzFDQyxhQUFXLENBQUNDLElBQUQsRUFBT0MsUUFBUCxFQUFpQkMsT0FBakIsRUFBMEJDLEtBQTFCLEVBQWlDO0FBQ3hDLFVBQU1ELE9BQU47QUFDQSxTQUFLRixJQUFMLEdBQVlBLElBQVo7QUFDQSxTQUFLSSxJQUFMLEdBQVlILFFBQVo7QUFDQSxTQUFLRSxLQUFMLEdBQWFBLEtBQWI7QUFDSDs7QUFOeUMiLCJmaWxlIjoiLi9zcmMvc3RydWN0cy9hZGRvbmVycm9yLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWRkb25FcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG5hbWUsIGZpbGVuYW1lLCBtZXNzYWdlLCBlcnJvcikge1xyXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5maWxlID0gZmlsZW5hbWU7XHJcbiAgICAgICAgdGhpcy5lcnJvciA9IGVycm9yO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/structs/addonerror.js\n");

/***/ }),

/***/ "./src/structs/builtin.js":
/*!********************************!*\
  !*** ./src/structs/builtin.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BuiltinModule; });\n/* harmony import */ var _modules_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/logger */ \"./src/modules/logger.js\");\n/* harmony import */ var _modules_emitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/emitter */ \"./src/modules/emitter.js\");\n/* harmony import */ var _modules_settingsmanager__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/settingsmanager */ \"./src/modules/settingsmanager.js\");\n/* harmony import */ var _modules_patcher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/patcher */ \"./src/modules/patcher.js\");\n\n\n\n\nclass BuiltinModule {\n  get name() {\n    return \"Unnamed Builtin\";\n  }\n\n  get collection() {\n    return \"settings\";\n  }\n\n  get category() {\n    return \"general\";\n  }\n\n  get id() {\n    return \"None\";\n  }\n\n  async initialize() {\n    if (_modules_settingsmanager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(this.collection, this.category, this.id)) await this.enable();\n    _modules_emitter__WEBPACK_IMPORTED_MODULE_1__[\"default\"].on(\"setting-updated\", (collection, category, id, enabled) => {\n      if (collection != this.collection || category !== this.category || id !== this.id) return;\n      if (enabled) this.enable();else this.disable();\n    });\n  }\n\n  registerSetting(collection, category, id, onEnable, onDisable) {\n    if (arguments.length == 4) {\n      collection = this.collection;\n      category = arguments[0];\n      id = arguments[1];\n      onEnable = arguments[2];\n      onDisable = arguments[3];\n    } else if (arguments.length == 3) {\n      collection = this.collection;\n      category = this.category;\n      id = arguments[0];\n      onEnable = arguments[1];\n      onDisable = arguments[2];\n    }\n\n    return _modules_settingsmanager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].on(collection, category, id, value => {\n      if (value) onEnable();else onDisable();\n    });\n  }\n\n  get(collection, category, id) {\n    if (arguments.length == 2) {\n      collection = this.collection;\n      category = arguments[0];\n      id = arguments[1];\n    } else if (arguments.length == 1) {\n      collection = this.collection;\n      category = this.category;\n      id = arguments[0];\n    }\n\n    return _modules_settingsmanager__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(collection, category, id);\n  }\n\n  async enable() {\n    this.log(\"Enabled\");\n    await this.enabled();\n  }\n\n  async disable() {\n    this.log(\"Disabled\");\n    await this.disabled();\n  }\n\n  async enabled() {}\n\n  async disabled() {}\n\n  log(...message) {\n    _modules_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].log(this.name, ...message);\n  }\n\n  warn(...message) {\n    _modules_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(this.name, ...message);\n  }\n\n  error(...message) {\n    _modules_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].err(this.name, ...message);\n  }\n\n  stacktrace(message, error) {\n    _modules_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stacktrace(this.name, message, error);\n  }\n\n  after(object, func, callback) {\n    return _modules_patcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"].after(this.name, object, func, callback);\n  }\n\n  unpatchAll() {\n    return _modules_patcher__WEBPACK_IMPORTED_MODULE_3__[\"default\"].unpatchAll(this.name);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3N0cnVjdHMvYnVpbHRpbi5qcz85NTYyIl0sIm5hbWVzIjpbIkJ1aWx0aW5Nb2R1bGUiLCJuYW1lIiwiY29sbGVjdGlvbiIsImNhdGVnb3J5IiwiaWQiLCJpbml0aWFsaXplIiwiU2V0dGluZ3MiLCJnZXQiLCJlbmFibGUiLCJFdmVudHMiLCJvbiIsImVuYWJsZWQiLCJkaXNhYmxlIiwicmVnaXN0ZXJTZXR0aW5nIiwib25FbmFibGUiLCJvbkRpc2FibGUiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ2YWx1ZSIsImxvZyIsImRpc2FibGVkIiwibWVzc2FnZSIsIkxvZ2dlciIsIndhcm4iLCJlcnJvciIsImVyciIsInN0YWNrdHJhY2UiLCJhZnRlciIsIm9iamVjdCIsImZ1bmMiLCJjYWxsYmFjayIsIlBhdGNoZXIiLCJ1bnBhdGNoQWxsIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVlLE1BQU1BLGFBQU4sQ0FBb0I7QUFFL0IsTUFBSUMsSUFBSixHQUFXO0FBQUMsV0FBTyxpQkFBUDtBQUEwQjs7QUFDdEMsTUFBSUMsVUFBSixHQUFpQjtBQUFDLFdBQU8sVUFBUDtBQUFtQjs7QUFDckMsTUFBSUMsUUFBSixHQUFlO0FBQUMsV0FBTyxTQUFQO0FBQWtCOztBQUNsQyxNQUFJQyxFQUFKLEdBQVM7QUFBQyxXQUFPLE1BQVA7QUFBZTs7QUFFekIsUUFBTUMsVUFBTixHQUFtQjtBQUNmLFFBQUlDLGdFQUFRLENBQUNDLEdBQVQsQ0FBYSxLQUFLTCxVQUFsQixFQUE4QixLQUFLQyxRQUFuQyxFQUE2QyxLQUFLQyxFQUFsRCxDQUFKLEVBQTJELE1BQU0sS0FBS0ksTUFBTCxFQUFOO0FBQzNEQyw0REFBTSxDQUFDQyxFQUFQLENBQVUsaUJBQVYsRUFBNkIsQ0FBQ1IsVUFBRCxFQUFhQyxRQUFiLEVBQXVCQyxFQUF2QixFQUEyQk8sT0FBM0IsS0FBdUM7QUFD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RURLLFlBQVUsQ0FBQ0wsT0FBRCxFQUFVRyxLQUFWLEVBQWlCO0FBQ3ZCRiwyREFBTSxDQUFDSSxVQUFQLENBQWtCLEtBQUt6QixJQUF2QixFQUE2Qm9CLE9BQTdCLEVBQXNDRyxLQUF0QztBQUNIOztBQUVERyxPQUFLLENBQUNDLE1BQUQsRUFBU0MsSUFBVCxFQUFlQyxRQUFmLEVBQXlCO0FBQzFCLFdBQU9DLHdEQUFPLENBQUNKLEtBQVIsQ0FBYyxLQUFLMUIsSUFBbkIsRUFBeUIyQixNQUF6QixFQUFpQ0MsSUFBakMsRUFBdUNDLFFBQXZDLENBQVA7QUFDSDs7QUFFREUsWUFBVSxHQUFHO0FBQ1QsV0FBT0Qsd0RBQU8sQ0FBQ0MsVUFBUixDQUFtQixLQUFLL0IsSUFBeEIsQ0FBUDtBQUNIOztBQXRGOEIiLCJmaWxlIjoiLi9zcmMvc3RydWN0cy9idWlsdGluLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvZ2dlciBmcm9tIFwiLi4vbW9kdWxlcy9sb2dnZXJcIjtcclxuaW1wb3J0IEV2ZW50cyBmcm9tIFwiLi4vbW9kdWxlcy9lbWl0dGVyXCI7XHJcbmltcG9ydCBTZXR0aW5ncyBmcm9tIFwiLi4vbW9kdWxlcy9zZXR0aW5nc21hbmFnZXJcIjtcclxuaW1wb3J0IFBhdGNoZXIgZnJvbSBcIi4uL21vZHVsZXMvcGF0Y2hlclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnVpbHRpbk1vZHVsZSB7XHJcblxyXG4gICAgZ2V0IG5hbWUoKSB7cmV0dXJuIFwiVW5uYW1lZCBCdWlsdGluXCI7fVxyXG4gICAgZ2V0IGNvbGxlY3Rpb24oKSB7cmV0dXJuIFwic2V0dGluZ3NcIjt9XHJcbiAgICBnZXQgY2F0ZWdvcnkoKSB7cmV0dXJuIFwiZ2VuZXJhbFwiO31cclxuICAgIGdldCBpZCgpIHtyZXR1cm4gXCJOb25lXCI7fVxyXG5cclxuICAgIGFzeW5jIGluaXRpYWxpemUoKSB7XHJcbiAgICAgICAgaWYgKFNldHRpbmdzLmdldCh0aGlzLmNvbGxlY3Rpb24sIHRoaXMuY2F0ZWdvcnksIHRoaXMuaWQpKSBhd2FpdCB0aGlzLmVuYWJsZSgpO1xyXG4gICAgICAgIEV2ZW50cy5vbihcInNldHRpbmctdXBkYXRlZFwiLCAoY29sbGVjdGlvbiwgY2F0ZWdvcnksIGlkLCBlbmFibGVkKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjb2xsZWN0aW9uICE9IHRoaXMuY29sbGVjdGlvbiB8fCBjYXRlZ29yeSAhPT0gdGhpcy5jYXRlZ29yeSB8fCBpZCAhPT0gdGhpcy5pZCkgcmV0dXJuO1xyXG4gICAgICAgICAgICBpZiAoZW5hYmxlZCkgdGhpcy5lbmFibGUoKTtcclxuICAgICAgICAgICAgZWxzZSB0aGlzLmRpc2FibGUoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZWdpc3RlclNldHRpbmcoY29sbGVjdGlvbiwgY2F0ZWdvcnksIGlkLCBvbkVuYWJsZSwgb25EaXNhYmxlKSB7XHJcbiAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gNCkge1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uID0gdGhpcy5jb2xsZWN0aW9uO1xyXG4gICAgICAgICAgICBjYXRlZ29yeSA9IGFyZ3VtZW50c1swXTtcclxuICAgICAgICAgICAgaWQgPSBhcmd1bWVudHNbMV07XHJcbiAgICAgICAgICAgIG9uRW5hYmxlID0gYXJndW1lbnRzWzJdO1xyXG4gICAgICAgICAgICBvbkRpc2FibGUgPSBhcmd1bWVudHNbM107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT0gMykge1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uID0gdGhpcy5jb2xsZWN0aW9uO1xyXG4gICAgICAgICAgICBjYXRlZ29yeSA9IHRoaXMuY2F0ZWdvcnk7XHJcbiAgICAgICAgICAgIGlkID0gYXJndW1lbnRzWzBdO1xyXG4gICAgICAgICAgICBvbkVuYWJsZSA9IGFyZ3VtZW50c1sxXTtcclxuICAgICAgICAgICAgb25EaXNhYmxlID0gYXJndW1lbnRzWzJdO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gU2V0dGluZ3Mub24oY29sbGVjdGlvbiwgY2F0ZWdvcnksIGlkLCAodmFsdWUpID0+IHtcclxuICAgICAgICAgICAgaWYgKHZhbHVlKSBvbkVuYWJsZSgpO1xyXG4gICAgICAgICAgICBlbHNlIG9uRGlzYWJsZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldChjb2xsZWN0aW9uLCBjYXRlZ29yeSwgaWQpIHtcclxuICAgICAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PSAyKSB7XHJcbiAgICAgICAgICAgIGNvbGxlY3Rpb24gPSB0aGlzLmNvbGxlY3Rpb247XHJcbiAgICAgICAgICAgIGNhdGVnb3J5ID0gYXJndW1lbnRzWzBdO1xyXG4gICAgICAgICAgICBpZCA9IGFyZ3VtZW50c1sxXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PSAxKSB7XHJcbiAgICAgICAgICAgIGNvbGxlY3Rpb24gPSB0aGlzLmNvbGxlY3Rpb247XHJcbiAgICAgICAgICAgIGNhdGVnb3J5ID0gdGhpcy5jYXRlZ29yeTtcclxuICAgICAgICAgICAgaWQgPSBhcmd1bWVudHNbMF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBTZXR0aW5ncy5nZXQoY29sbGVjdGlvbiwgY2F0ZWdvcnksIGlkKTtcclxuICAgIH1cclxuXHJcbiAgICBhc3luYyBlbmFibGUoKSB7XHJcbiAgICAgICAgdGhpcy5sb2coXCJFbmFibGVkXCIpO1xyXG4gICAgICAgIGF3YWl0IHRoaXMuZW5hYmxlZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGRpc2FibGUoKSB7XHJcbiAgICAgICAgdGhpcy5sb2coXCJEaXNhYmxlZFwiKTtcclxuICAgICAgICBhd2FpdCB0aGlzLmRpc2FibGVkKCk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgZW5hYmxlZCgpIHt9XHJcbiAgICBhc3luYyBkaXNhYmxlZCgpIHt9XHJcblxyXG4gICAgbG9nKC4uLm1lc3NhZ2UpIHtcclxuICAgICAgICBMb2dnZXIubG9nKHRoaXMubmFtZSwgLi4ubWVzc2FnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgd2FybiguLi5tZXNzYWdlKSB7XHJcbiAgICAgICAgTG9nZ2VyLndhcm4odGhpcy5uYW1lLCAuLi5tZXNzYWdlKTtcclxuICAgIH1cclxuXHJcbiAgICBlcnJvciguLi5tZXNzYWdlKSB7XHJcbiAgICAgICAgTG9nZ2VyLmVycih0aGlzLm5hbWUsIC4uLm1lc3NhZ2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YWNrdHJhY2UobWVzc2FnZSwgZXJyb3IpIHtcclxuICAgICAgICBMb2dnZXIuc3RhY2t0cmFjZSh0aGlzLm5hbWUsIG1lc3NhZ2UsIGVycm9yKTtcclxuICAgIH1cclxuXHJcbiAgICBhZnRlcihvYmplY3QsIGZ1bmMsIGNhbGxiYWNrKSB7XHJcbiAgICAgICAgcmV0dXJuIFBhdGNoZXIuYWZ0ZXIodGhpcy5uYW1lLCBvYmplY3QsIGZ1bmMsIGNhbGxiYWNrKTtcclxuICAgIH1cclxuXHJcbiAgICB1bnBhdGNoQWxsKCkge1xyXG4gICAgICAgIHJldHVybiBQYXRjaGVyLnVucGF0Y2hBbGwodGhpcy5uYW1lKTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/structs/builtin.js\n");

/***/ }),

/***/ "./src/structs/metaerror.js":
/*!**********************************!*\
  !*** ./src/structs/metaerror.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MetaError; });\nclass MetaError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"MetaError\";\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3N0cnVjdHMvbWV0YWVycm9yLmpzP2UxOTYiXSwibmFtZXMiOlsiTWV0YUVycm9yIiwiRXJyb3IiLCJjb25zdHJ1Y3RvciIsIm1lc3NhZ2UiLCJuYW1lIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQWUsTUFBTUEsU0FBTixTQUF3QkMsS0FBeEIsQ0FBOEI7QUFDekNDLGFBQVcsQ0FBQ0MsT0FBRCxFQUFVO0FBQ2pCLFVBQU1BLE9BQU47QUFDQSxTQUFLQyxJQUFMLEdBQVksV0FBWjtBQUNIOztBQUp3QyIsImZpbGUiOiIuL3NyYy9zdHJ1Y3RzL21ldGFlcnJvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIE1ldGFFcnJvciBleHRlbmRzIEVycm9yIHtcclxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcclxuICAgICAgICBzdXBlcihtZXNzYWdlKTtcclxuICAgICAgICB0aGlzLm5hbWUgPSBcIk1ldGFFcnJvclwiO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/structs/metaerror.js\n");

/***/ }),

/***/ "./src/structs/psconnection.js":
/*!*************************************!*\
  !*** ./src/structs/psconnection.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PublicServersConnection; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nconst SortedGuildStore = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"getSortedGuilds\");\nconst AvatarDefaults = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"getUserAvatarURL\", \"DEFAULT_AVATARS\");\nconst InviteActions = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"acceptInvite\");\n\nconst BrowserWindow = __webpack_require__(/*! electron */ \"electron\").remote.BrowserWindow;\n\nclass PublicServersConnection {\n  static get endPoint() {\n    return \"https://search.discordservers.com\";\n  }\n\n  static get joinEndPoint() {\n    return \"https://j.discordservers.com\";\n  }\n\n  static get connectEndPoint() {\n    return \"https://auth.discordservers.com/info\";\n  }\n\n  static getDefaultAvatar() {\n    return AvatarDefaults.DEFAULT_AVATARS[Math.floor(Math.random() * 5)];\n  }\n\n  static hasJoined(id) {\n    return SortedGuildStore.guildPositions.includes(id);\n  }\n\n  static search({\n    term = \"\",\n    category = \"\",\n    from = 0\n  } = {}) {\n    return new Promise(resolve => {\n      const queries = [];\n      if (category) queries.push(`category=${category.replace(/ /g, \"%20\")}`);\n      if (term) queries.push(`term=${term.replace(/ /g, \"%20\")}`);\n      if (from) queries.push(`from=${from}`);\n      const query = `?${queries.join(\"&\")}`;\n      $.ajax({\n        method: \"GET\",\n        url: `${this.endPoint}${query}`,\n        success: data => {\n          const next = data.size + data.from;\n          resolve({\n            servers: data.results,\n            size: data.size,\n            from: data.from,\n            total: data.total,\n            next: next >= data.total ? null : next\n          });\n        },\n        error: () => resolve(null)\n      });\n    });\n  }\n\n  static join(id, native = false) {\n    return new Promise(resolve => {\n      if (native) return InviteActions.acceptInvite(id), resolve(true);\n      $.ajax({\n        method: \"GET\",\n        url: `${this.joinEndPoint}/${id}`,\n        headers: {\n          \"Accept\": \"application/json;\",\n          \"Content-Type\": \"application/json;\",\n          \"x-discord-token\": this._accessToken\n        },\n        crossDomain: true,\n        xhrFields: {\n          withCredentials: true\n        },\n        success: () => resolve(true),\n        error: () => resolve(false)\n      });\n    });\n  }\n\n  static checkConnection() {\n    return new Promise(resolve => {\n      try {\n        $.ajax({\n          method: \"GET\",\n          url: this.connectEndPoint,\n          headers: {\n            \"Accept\": \"application/json;\",\n            \"Content-Type\": \"application/json;\"\n          },\n          crossDomain: true,\n          xhrFields: {\n            withCredentials: true\n          },\n          success: data => {\n            this._accessToken = data.access_token;\n            resolve(data);\n          },\n          error: () => resolve(false)\n        });\n      } catch (error) {\n        resolve(false);\n      }\n    });\n  }\n\n  static connect() {\n    return new Promise(resolve => {\n      const joinWindow = new BrowserWindow(this.windowOptions);\n      const url = `https://auth.discordservers.com/connect?scopes=guilds.join&previousUrl=${this.connectEndPoint}`;\n      joinWindow.webContents.on(\"did-navigate\", (event, navUrl) => {\n        if (navUrl != this.connectEndPoint) return;\n        joinWindow.close();\n        resolve();\n      });\n      joinWindow.loadURL(url);\n    });\n  }\n\n  static get windowOptions() {\n    return {\n      width: 380,\n      height: 450,\n      backgroundColor: \"#282b30\",\n      show: true,\n      resizable: true,\n      maximizable: false,\n      minimizable: false,\n      alwaysOnTop: true,\n      frame: false,\n      center: true,\n      webPreferences: {\n        nodeIntegration: false\n      }\n    };\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/structs/psconnection.js\n");

/***/ }),

/***/ "./src/structs/screen.js":
/*!*******************************!*\
  !*** ./src/structs/screen.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Screen; });\nclass Screen {\n  /** Document/window width */\n  static get width() {\n    return Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n  }\n  /** Document/window height */\n\n\n  static get height() {\n    return Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3N0cnVjdHMvc2NyZWVuLmpzPzRiMjEiXSwibmFtZXMiOlsiU2NyZWVuIiwid2lkdGgiLCJNYXRoIiwibWF4IiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJoZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJpbm5lckhlaWdodCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFlLE1BQU1BLE1BQU4sQ0FBYTtBQUN4QjtBQUNBLGFBQVdDLEtBQVgsR0FBbUI7QUFBRSxXQUFPQyxJQUFJLENBQUNDLEdBQUwsQ0FBU0MsUUFBUSxDQUFDQyxlQUFULENBQXlCQyxXQUFsQyxFQUErQ0MsTUFBTSxDQUFDQyxVQUFQLElBQXFCLENBQXBFLENBQVA7QUFBZ0Y7QUFDckc7OztBQUNBLGFBQVdDLE1BQVgsR0FBb0I7QUFBRSxXQUFPUCxJQUFJLENBQUNDLEdBQUwsQ0FBU0MsUUFBUSxDQUFDQyxlQUFULENBQXlCSyxZQUFsQyxFQUFnREgsTUFBTSxDQUFDSSxXQUFQLElBQXNCLENBQXRFLENBQVA7QUFBa0Y7O0FBSmhGIiwiZmlsZSI6Ii4vc3JjL3N0cnVjdHMvc2NyZWVuLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2NyZWVuIHtcclxuICAgIC8qKiBEb2N1bWVudC93aW5kb3cgd2lkdGggKi9cclxuICAgIHN0YXRpYyBnZXQgd2lkdGgoKSB7IHJldHVybiBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGgsIHdpbmRvdy5pbm5lcldpZHRoIHx8IDApOyB9XHJcbiAgICAvKiogRG9jdW1lbnQvd2luZG93IGhlaWdodCAqL1xyXG4gICAgc3RhdGljIGdldCBoZWlnaHQoKSB7IHJldHVybiBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LCB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgMCk7IH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/structs/screen.js\n");

/***/ }),

/***/ "./src/structs/string.js":
/*!*******************************!*\
  !*** ./src/structs/string.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FormattableString; });\n/* harmony import */ var _modules_utilities__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../modules/utilities */ \"./src/modules/utilities.js\");\n\nclass FormattableString extends String {\n  format(values) {\n    return _modules_utilities__WEBPACK_IMPORTED_MODULE_0__[\"default\"].formatString(this, values);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3N0cnVjdHMvc3RyaW5nLmpzPzNhOGUiXSwibmFtZXMiOlsiRm9ybWF0dGFibGVTdHJpbmciLCJTdHJpbmciLCJmb3JtYXQiLCJ2YWx1ZXMiLCJVdGlsaXRpZXMiLCJmb3JtYXRTdHJpbmciXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWUsTUFBTUEsaUJBQU4sU0FBZ0NDLE1BQWhDLENBQXVDO0FBQ2xEQyxRQUFNLENBQUNDLE1BQUQsRUFBUztBQUNYLFdBQU9DLDBEQUFTLENBQUNDLFlBQVYsQ0FBdUIsSUFBdkIsRUFBNkJGLE1BQTdCLENBQVA7QUFDSDs7QUFIaUQiLCJmaWxlIjoiLi9zcmMvc3RydWN0cy9zdHJpbmcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXRpbGl0aWVzIGZyb20gXCIuLi9tb2R1bGVzL3V0aWxpdGllc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybWF0dGFibGVTdHJpbmcgZXh0ZW5kcyBTdHJpbmcge1xyXG4gICAgZm9ybWF0KHZhbHVlcykge1xyXG4gICAgICAgIHJldHVybiBVdGlsaXRpZXMuZm9ybWF0U3RyaW5nKHRoaXMsIHZhbHVlcyk7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/structs/string.js\n");

/***/ }),

/***/ "./src/ui/customcss/checkbox.jsx":
/*!***************************************!*\
  !*** ./src/ui/customcss/checkbox.jsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Checkbox; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass Checkbox extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n    this.state = {\n      checked: this.props.checked || false\n    };\n  }\n\n  render() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"checkbox-item\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"checkbox-label label-JWQiNe da-label\"\n    }, this.props.text), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"checkbox-wrapper checkbox-3kaeSU da-checkbox checkbox-3EVISJ da-checkbox\",\n      onClick: this.onClick\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"checkbox-inner checkboxInner-3yjcPe da-checkboxInner\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"input\", {\n      className: \"checkbox checkboxElement-1qV33p da-checkboxElement\",\n      checked: this.state.checked,\n      type: \"checkbox\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", null)), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", null)));\n  }\n\n  onClick() {\n    this.props.onChange(!this.state.checked);\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2N1c3RvbWNzcy9jaGVja2JveC5qc3g/MjJiNSJdLCJuYW1lcyI6WyJDaGVja2JveCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsIm9uQ2xpY2siLCJiaW5kIiwic3RhdGUiLCJjaGVja2VkIiwicmVuZGVyIiwidGV4dCIsIm9uQ2hhbmdlIiwic2V0U3RhdGUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWUsTUFBTUEsUUFBTixTQUF1QkMsNkNBQUssQ0FBQ0MsU0FBN0IsQ0FBdUM7QUFDbERDLGFBQVcsQ0FBQ0MsS0FBRCxFQUFRO0FBQ2YsVUFBTUEsS0FBTjtBQUNBLFNBQUtDLE9BQUwsR0FBZSxLQUFLQSxPQUFMLENBQWFDLElBQWIsQ0FBa0IsSUFBbEIsQ0FBZjtBQUNBLFNBQUtDLEtBQUwsR0FBYTtBQUFDQyxhQUFPLEVBQUUsS0FBS0osS0FBTCxDQUFXSSxPQUFYLElBQXNCO0FBQWhDLEtBQWI7QUFDSDs7QUFFREMsUUFBTSxHQUFHO0FBQ0wsV0FBTztBQUFLLGVBQVMsRUFBQztBQUFmLE9BQ0g7QUFBSyxlQUFTLEVBQUM7QUFBZixPQUF1RCxLQUFLTCxLQUFMLENBQVdNLElBQWxFLENBREcsRUFFSDtBQUFLLGVBQVMsRUFBQywwRUFBZjtBQUEwRixhQUFPLEVBQUUsS0FBS0w7QUFBeEcsT0FDSTtBQUFLLGVBQVMsRUFBQztBQUFmLE9BQ0k7QUFBTyxlQUFTLEVBQUMsb0RBQWpCO0FBQXNFLGFBQU8sRUFBRSxLQUFLRSxLQUFMLENBQVdDLE9BQTFGO0FBQW1HLFVBQUksRUFBQztBQUF4RyxNQURKLEVBRUkseUVBRkosQ0FESixFQUtJLHlFQUxKLENBRkcsQ0FBUDtBQVVIOztBQUVESCxTQUFPLEdBQUc7QUFDTixTQUFLRCxLQUFMLENBQVdPLFFBQVgsQ0FBb0IsQ0FBQyxLQUFLSixLQUFMLENBQVdDLE9BQWhDO0FBQ0EsU0FBS0ksUUFBTCxDQUFjO0FBQUNKLGFBQU8sRUFBRSxDQUFDLEtBQUtELEtBQUwsQ0FBV0M7QUFBdEIsS0FBZDtBQUNIOztBQXZCaUQiLCJmaWxlIjoiLi9zcmMvdWkvY3VzdG9tY3NzL2NoZWNrYm94LmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVhY3R9IGZyb20gXCJtb2R1bGVzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDaGVja2JveCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLm9uQ2xpY2sgPSB0aGlzLm9uQ2xpY2suYmluZCh0aGlzKTtcclxuICAgICAgICB0aGlzLnN0YXRlID0ge2NoZWNrZWQ6IHRoaXMucHJvcHMuY2hlY2tlZCB8fCBmYWxzZX07XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiA8ZGl2IGNsYXNzTmFtZT1cImNoZWNrYm94LWl0ZW1cIj5cclxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjaGVja2JveC1sYWJlbCBsYWJlbC1KV1FpTmUgZGEtbGFiZWxcIj57dGhpcy5wcm9wcy50ZXh0fTwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoZWNrYm94LXdyYXBwZXIgY2hlY2tib3gtM2thZVNVIGRhLWNoZWNrYm94IGNoZWNrYm94LTNFVklTSiBkYS1jaGVja2JveFwiIG9uQ2xpY2s9e3RoaXMub25DbGlja30+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNoZWNrYm94LWlubmVyIGNoZWNrYm94SW5uZXItM3lqY1BlIGRhLWNoZWNrYm94SW5uZXJcIj5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3NOYW1lPVwiY2hlY2tib3ggY2hlY2tib3hFbGVtZW50LTFxVjMzcCBkYS1jaGVja2JveEVsZW1lbnRcIiBjaGVja2VkPXt0aGlzLnN0YXRlLmNoZWNrZWR9IHR5cGU9XCJjaGVja2JveFwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4+PC9zcGFuPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8c3Bhbj48L3NwYW4+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PjtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsaWNrKCkge1xyXG4gICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoIXRoaXMuc3RhdGUuY2hlY2tlZCk7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y2hlY2tlZDogIXRoaXMuc3RhdGUuY2hlY2tlZH0pO1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ui/customcss/checkbox.jsx\n");

/***/ }),

/***/ "./src/ui/customcss/csseditor.jsx":
/*!****************************************!*\
  !*** ./src/ui/customcss/csseditor.jsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CssEditor; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _editor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./editor */ \"./src/ui/customcss/editor.jsx\");\n/* harmony import */ var _icons_reload__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icons/reload */ \"./src/ui/icons/reload.jsx\");\n/* harmony import */ var _icons_save__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../icons/save */ \"./src/ui/icons/save.jsx\");\n/* harmony import */ var _icons_edit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../icons/edit */ \"./src/ui/icons/edit.jsx\");\n/* harmony import */ var _icons_cog__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../icons/cog */ \"./src/ui/icons/cog.jsx\");\n/* harmony import */ var _icons_detach__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../icons/detach */ \"./src/ui/icons/detach.jsx\");\n\n // import Checkbox from \"./checkbox\";\n\n\n\n\n\n\nclass CssEditor extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    this.hasUnsavedChanges = false;\n    this.onChange = this.onChange.bind(this);\n    this.toggleLiveUpdate = this.toggleLiveUpdate.bind(this);\n    this.updateCss = this.updateCss.bind(this);\n    this.saveCss = this.saveCss.bind(this);\n    this.openDetached = this.props.openDetached ? this.openDetached.bind(this) : null;\n    this.openNative = this.openNative.bind(this);\n    this.updateEditor = this.updateEditor.bind(this);\n    this.controls = [{\n      label: modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_reload__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        size: \"18px\"\n      }),\n      tooltip: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].CustomCSS.update,\n      onClick: this.updateCss\n    }, {\n      label: modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_save__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        size: \"18px\"\n      }),\n      tooltip: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].CustomCSS.save,\n      onClick: this.saveCss\n    }, {\n      label: modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_edit__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        size: \"18px\"\n      }),\n      tooltip: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].CustomCSS.openNative,\n      onClick: this.openNative\n    }, {\n      label: modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_cog__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        size: \"18px\"\n      }),\n      tooltip: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].CustomCSS.settings,\n      onClick: \"showSettings\"\n    }, {\n      label: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Collections.settings.customcss.liveUpdate.name,\n      type: \"checkbox\",\n      onChange: this.toggleLiveUpdate,\n      checked: modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].get(\"settings\", \"customcss\", \"liveUpdate\"),\n      side: \"right\"\n    }];\n    if (this.openDetached) this.controls.push({\n      label: modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_detach__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n        size: \"18px\"\n      }),\n      tooltip: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].CustomCSS.openDetached,\n      onClick: this.openDetached,\n      side: \"right\"\n    });\n  }\n\n  componentDidMount() {\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].on(\"customcss-updated\", this.updateEditor);\n  }\n\n  componentWillUnmount() {\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].off(\"customcss-updated\", this.updateEditor);\n  }\n\n  updateEditor(newCSS) {\n    if (!this.editor) return;\n    this.editor.value = newCSS;\n  }\n\n  get value() {\n    return this.editor.session.getValue();\n  }\n\n  set value(newValue) {\n    this.editor.setValue(newValue);\n  }\n\n  showSettings() {\n    return this.editor.keyBinding.$defaultHandler.commands.showSettingsMenu.exec(this.editor);\n  }\n\n  resize() {\n    return this.editor.resize();\n  }\n\n  setEditorRef(editor) {\n    this.editor = editor;\n    if (this.props.editorRef && typeof this.props.editorRef.current !== \"undefined\") this.props.editorRef.current = editor;else if (this.props.editorRef) this.props.editorRef = editor;\n  }\n\n  onChange() {\n    this.hasUnsavedChanges = true;\n    if (this.props.onChange) this.props.onChange(...arguments);\n  }\n\n  render() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_editor__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      ref: this.setEditorRef.bind(this),\n      readOnly: this.props.readOnly,\n      id: this.props.id || \"bd-customcss-editor\",\n      onChange: this.onChange,\n      controls: this.controls,\n      value: this.props.css\n    });\n  }\n\n  toggleLiveUpdate(checked) {\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].set(\"settings\", \"customcss\", \"liveUpdate\", checked);\n  }\n\n  updateCss(event, newCss) {\n    if (this.props.update) this.props.update(newCss);\n  }\n\n  saveCss(event, newCss) {\n    this.hasUnsavedChanges = false;\n    if (this.props.save) this.props.save(newCss);\n  }\n\n  openDetached(event, currentCSS) {\n    if (!this.props.openDetached) return;\n    this.props.openDetached(currentCSS);\n  }\n\n  openNative() {\n    if (this.props.openNative) this.props.openNative();\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/customcss/csseditor.jsx\n");

/***/ }),

/***/ "./src/ui/customcss/editor.jsx":
/*!*************************************!*\
  !*** ./src/ui/customcss/editor.jsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CodeEditor; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _checkbox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./checkbox */ \"./src/ui/customcss/checkbox.jsx\");\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\nconst Tooltip = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByDisplayName(\"Tooltip\");\nconst languages = [\"abap\", \"abc\", \"actionscript\", \"ada\", \"apache_conf\", \"asciidoc\", \"assembly_x86\", \"autohotkey\", \"batchfile\", \"bro\", \"c_cpp\", \"c9search\", \"cirru\", \"clojure\", \"cobol\", \"coffee\", \"coldfusion\", \"csharp\", \"csound_document\", \"csound_orchestra\", \"csound_score\", \"css\", \"curly\", \"d\", \"dart\", \"diff\", \"dockerfile\", \"dot\", \"drools\", \"dummy\", \"dummysyntax\", \"eiffel\", \"ejs\", \"elixir\", \"elm\", \"erlang\", \"forth\", \"fortran\", \"ftl\", \"gcode\", \"gherkin\", \"gitignore\", \"glsl\", \"gobstones\", \"golang\", \"graphqlschema\", \"groovy\", \"haml\", \"handlebars\", \"haskell\", \"haskell_cabal\", \"haxe\", \"hjson\", \"html\", \"html_elixir\", \"html_ruby\", \"ini\", \"io\", \"jack\", \"jade\", \"java\", \"javascript\", \"json\", \"jsoniq\", \"jsp\", \"jssm\", \"jsx\", \"julia\", \"kotlin\", \"latex\", \"less\", \"liquid\", \"lisp\", \"livescript\", \"logiql\", \"lsl\", \"lua\", \"luapage\", \"lucene\", \"makefile\", \"markdown\", \"mask\", \"matlab\", \"maze\", \"mel\", \"mushcode\", \"mysql\", \"nix\", \"nsis\", \"objectivec\", \"ocaml\", \"pascal\", \"perl\", \"pgsql\", \"php\", \"pig\", \"powershell\", \"praat\", \"prolog\", \"properties\", \"protobuf\", \"python\", \"r\", \"razor\", \"rdoc\", \"red\", \"rhtml\", \"rst\", \"ruby\", \"rust\", \"sass\", \"scad\", \"scala\", \"scheme\", \"scss\", \"sh\", \"sjs\", \"smarty\", \"snippets\", \"soy_template\", \"space\", \"sql\", \"sqlserver\", \"stylus\", \"svg\", \"swift\", \"tcl\", \"tex\", \"text\", \"textile\", \"toml\", \"tsx\", \"twig\", \"typescript\", \"vala\", \"vbscript\", \"velocity\", \"verilog\", \"vhdl\", \"wollok\", \"xml\", \"xquery\", \"yaml\", \"django\"];\nconst themes = [\"chrome\", \"clouds\", \"crimson_editor\", \"dawn\", \"dreamweaver\", \"eclipse\", \"github\", \"iplastic\", \"solarized_light\", \"textmate\", \"tomorrow\", \"xcode\", \"kuroir\", \"katzenmilch\", \"sqlserver\", \"ambiance\", \"chaos\", \"clouds_midnight\", \"cobalt\", \"gruvbox\", \"gob\", \"idle_fingers\", \"kr_theme\", \"merbivore\", \"merbivore_soft\", \"mono_industrial\", \"monokai\", \"pastel_on_dark\", \"solarized_dark\", \"terminal\", \"tomorrow_night\", \"tomorrow_night_blue\", \"tomorrow_night_bright\", \"tomorrow_night_eighties\", \"twilight\", \"vibrant_ink\"];\nclass CodeEditor extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  static get defaultId() {\n    return \"bd-editor\";\n  }\n\n  constructor(props) {\n    super(props);\n\n    for (const control of this.props.controls) {\n      if (control.type == \"checkbox\") continue;\n      if (control.onClick == \"showSettings\") control.onClick = this.showSettings.bind(this);\n    }\n\n    this.props.theme = this.props.theme.toLowerCase().replace(/ /g, \"_\");\n    if (!themes.includes(this.props.theme)) this.props.theme = CodeEditor.defaultProps.theme;\n    this.props.language = this.props.language.toLowerCase().replace(/ /g, \"_\");\n    if (!languages.includes(this.props.language)) this.props.language = CodeEditor.defaultProps.language;\n    this.onChange = this.onChange.bind(this);\n  }\n\n  static get defaultProps() {\n    return {\n      controls: [],\n      theme: \"bd-monokai\",\n      language: \"css\",\n      id: this.defaultId,\n      fontSize: 14\n    };\n  }\n\n  static get themes() {\n    return themes;\n  }\n\n  componentDidMount() {\n    this.editor = ace.edit(this.props.id); // Add id to the ace menu container\n\n    const originalShow = this.editor.keyBinding.$defaultHandler.commands.showSettingsMenu.exec;\n\n    this.editor.keyBinding.$defaultHandler.commands.showSettingsMenu.exec = function () {\n      originalShow.apply(this, arguments);\n      const observer = new MutationObserver(mutations => {\n        for (const mutation of mutations) {\n          if (!mutation.addedNodes.length || !(mutation.addedNodes[0] instanceof Element)) continue;\n          const node = mutation.addedNodes[0];\n          if (node.parentElement !== document.body || !node.querySelector(\"#ace_settingsmenu\")) continue;\n          node.id = \"ace_settingsmenu_container\";\n          observer.disconnect();\n        }\n      });\n      observer.observe(document.body, {\n        childList: true\n      });\n    };\n\n    const theme = this.props.theme == CodeEditor.defaultProps.theme ? this.props.theme.split(\"-\")[1] : this.props.theme;\n    this.editor.setTheme(`ace/theme/${theme}`);\n    this.editor.session.setMode(`ace/mode/${this.props.language}`);\n    this.editor.setShowPrintMargin(false);\n    this.editor.setFontSize(this.props.fontSize);\n    this.editor.on(\"change\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    this.editor.destroy();\n  }\n\n  get value() {\n    return this.editor.session.getValue();\n  }\n\n  set value(newValue) {\n    this.editor.setValue(newValue);\n  }\n\n  onChange() {\n    if (this.props.onChange) this.props.onChange(this.value);\n  }\n\n  showSettings() {\n    return this.editor.keyBinding.$defaultHandler.commands.showSettingsMenu.exec(this.editor);\n  }\n\n  resize() {\n    return this.editor.resize();\n  }\n\n  buildControl(control) {\n    if (control.type == \"checkbox\") return this.makeCheckbox(control);\n    return this.makeButton(control);\n  }\n\n  makeCheckbox(checkbox) {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_checkbox__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      text: checkbox.label,\n      onChange: checkbox.onChange,\n      checked: checkbox.checked\n    });\n  }\n\n  makeButton(button) {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(Tooltip, {\n      color: \"black\",\n      position: \"top\",\n      text: button.tooltip\n    }, props => {\n      return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"button\", _extends({}, props, {\n        className: \"btn btn-primary\",\n        onClick: event => {\n          button.onClick(event, this.value);\n        }\n      }), button.label);\n    });\n  }\n\n  render() {\n    if (this.editor && this.editor.resize) this.editor.resize();\n    const controlsLeft = this.props.controls.filter(c => c.side != \"right\").map(this.buildControl.bind(this));\n    const controlsRight = this.props.controls.filter(c => c.side == \"right\").map(this.buildControl.bind(this));\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      id: \"bd-editor-panel\",\n      className: this.props.theme\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      id: \"bd-editor-controls\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"controls-section controls-left\"\n    }, controlsLeft), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"controls-section controls-right\"\n    }, controlsRight)), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"editor-wrapper\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      id: this.props.id,\n      className: \"editor \" + this.props.theme\n    }, this.props.value)));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/customcss/editor.jsx\n");

/***/ }),

/***/ "./src/ui/emote.js":
/*!*************************!*\
  !*** ./src/ui/emote.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BDEmote; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nconst TooltipWrapper = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByDisplayName(\"TooltipDeprecated\");\nclass BDEmote extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldAnimate: !this.animateOnHover,\n      isFavorite: this.props.isFavorite\n    };\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.toggleFavorite = this.toggleFavorite.bind(this);\n  }\n\n  get animateOnHover() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].get(\"emotes\", \"general\", \"animateOnHover\");\n  }\n\n  get label() {\n    return this.props.modifier ? `${this.props.name}:${this.props.modifier}` : this.props.name;\n  }\n\n  get modifierClass() {\n    return this.props.modifier ? ` emote${this.props.modifier}` : \"\";\n  }\n\n  onMouseEnter() {\n    if (!this.state.shouldAnimate && this.animateOnHover) this.setState({\n      shouldAnimate: true\n    }); // if (!this.state.isFavorite && EmoteMenu.favoriteEmotes[this.label]) this.setState({isFavorite: true});\n    // else if (this.state.isFavorite && !EmoteMenu.favoriteEmotes[this.label]) this.setState({isFavorite: false});\n  }\n\n  onMouseLeave() {\n    if (this.state.shouldAnimate && this.animateOnHover) this.setState({\n      shouldAnimate: false\n    });\n  }\n\n  onClick(e) {\n    if (this.props.onClick) this.props.onClick(e);\n  }\n\n  toggleFavorite(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.state.isFavorite) modules__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].emit(\"emotes-favorite-removed\", this.label);else modules__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].emit(\"emotes-favorite-added\", this.label, this.props.url);\n    this.setState({\n      isFavorite: !this.state.isFavorite\n    });\n  }\n\n  render() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(TooltipWrapper, {\n      color: \"black\",\n      position: \"top\",\n      text: this.label,\n      delay: 750\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"emotewrapper\" + (this.props.jumboable ? \" jumboable\" : \"\"),\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave,\n      onClick: this.onClick\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"img\", {\n      draggable: false,\n      className: \"emote\" + this.modifierClass + (this.props.jumboable ? \" jumboable\" : \"\") + (!this.state.shouldAnimate ? \" stop-animation\" : \"\"),\n      dataModifier: this.props.modifier,\n      alt: this.label,\n      src: this.props.url\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"input\", {\n      className: \"fav\" + (this.state.isFavorite ? \" active\" : \"\"),\n      title: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Emotes.favoriteAction,\n      type: \"button\",\n      onClick: this.toggleFavorite\n    })));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/emote.js\n");

/***/ }),

/***/ "./src/ui/floating/container.jsx":
/*!***************************************!*\
  !*** ./src/ui/floating/container.jsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _window__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./window */ \"./src/ui/floating/window.jsx\");\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\nclass FloatingWindowContainer extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      windows: []\n    };\n  }\n\n  render() {\n    return this.state.windows.map(window => modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_window__WEBPACK_IMPORTED_MODULE_1__[\"default\"], _extends({}, window, {\n      close: this.close.bind(this, window.id)\n    }), window.children));\n  }\n\n  open(window) {\n    this.setState({\n      windows: [...this.state.windows, window]\n    });\n  }\n\n  close(id) {\n    this.setState({\n      windows: this.state.windows.filter(w => {\n        if (w.id == id && w.onClose) w.onClose();\n        return w.id != id;\n      })\n    });\n  }\n\n  static get id() {\n    return \"floating-windows\";\n  }\n\n  static get root() {\n    if (this._root) return this._root;\n    const container = document.createElement(\"div\");\n    container.id = this.id;\n    document.body.append(container);\n    return this._root = container;\n  }\n\n}\n\nconst containerRef = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createRef();\nconst container = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(FloatingWindowContainer, {\n  ref: containerRef\n});\nconst App = modules__WEBPACK_IMPORTED_MODULE_0__[\"Utilities\"].findInReactTree(modules__WEBPACK_IMPORTED_MODULE_0__[\"Utilities\"].getReactInstance(document.querySelector(\".app-19_DXt\")), m => m && m.type && m.type.displayName && m.type.displayName == \"App\");\nmodules__WEBPACK_IMPORTED_MODULE_0__[\"Patcher\"].after(\"FloatingContainer\", App.type.prototype, \"render\", (thisObject, args, returnValue) => {\n  const group = modules__WEBPACK_IMPORTED_MODULE_0__[\"Utilities\"].findInRenderTree(returnValue, m => m && m[5] && m[5].type && m[5].type.displayName == \"LayerContainer\", {\n    walkable: [\"children\", \"props\"]\n  });\n  group.push(container);\n});\nApp.stateNode.forceUpdate();\n/* harmony default export */ __webpack_exports__[\"default\"] = (containerRef.current);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2Zsb2F0aW5nL2NvbnRhaW5lci5qc3g/MTU2OSJdLCJuYW1lcyI6WyJGbG9hdGluZ1dpbmRvd0NvbnRhaW5lciIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwid2luZG93cyIsInJlbmRlciIsIm1hcCIsIndpbmRvdyIsImNsb3NlIiwiYmluZCIsImlkIiwiY2hpbGRyZW4iLCJvcGVuIiwic2V0U3RhdGUiLCJmaWx0ZXIiLCJ3Iiwib25DbG9zZSIsInJvb3QiLCJfcm9vdCIsImNvbnRhaW5lciIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJhcHBlbmQiLCJjb250YWluZXJSZWYiLCJjcmVhdGVSZWYiLCJBcHAiLCJVdGlsaXRpZXMiLCJmaW5kSW5SZWFjdFRyZWUiLCJnZXRSZWFjdEluc3RhbmNlIiwicXVlcnlTZWxlY3RvciIsIm0iLCJ0eXBlIiwiZGlzcGxheU5hbWUiLCJQYXRjaGVyIiwiYWZ0ZXIiLCJwcm90b3R5cGUiLCJ0aGlzT2JqZWN0IiwiYXJncyIsInJldHVyblZhbHVlIiwiZ3JvdXAiLCJmaW5kSW5SZW5kZXJUcmVlIiwid2Fsa2FibGUiLCJwdXNoIiwic3RhdGVOb2RlIiwiZm9yY2VVcGRhdGUiLCJjdXJyZW50Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBRUE7O0FBRUEsTUFBTUEsdUJBQU4sU0FBc0NDLDZDQUFLLENBQUNDLFNBQTVDLENBQXNEO0FBRWxEQyxhQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNmLFVBQU1BLEtBQU47QUFDQSxTQUFLQyxLQUFMLEdBQWE7QUFBQ0MsYUFBTyxFQUFFO0FBQVYsS0FBYjtBQUNIOztBQUVEQyxRQUFNLEdBQUc7QUFDTCxXQUFPLEtBQUtGLEtBQUwsQ0FBV0MsT0FBWCxDQUFtQkUsR0FBbkIsQ0FBdUJDLE1BQU0sSUFDaEMsNERBQUMsK0NBQUQsZUFBb0JBLE1BQXBCO0FBQTRCLFdBQUssRUFBRSxLQUFLQyxLQUFMLENBQVdDLElBQVgsQ0FBZ0IsSUFBaEIsRUFBc0JGLE1BQU0sQ0FBQ0csRUFBN0I7QUFBbkMsUUFDU0gsTUFBTSxDQUFDSSxRQURoQixDQURHLENBQVA7QUFLSDs7QUFFREMsTUFBSSxDQUFDTCxNQUFELEVBQVM7QUFDVCxTQUFLTSxRQUFMLENBQWM7QUFDVlQsYUFBTyxFQUFFLENBQUMsR0FBRyxLQUFLRCxLQUFMLENBQVdDLE9BQWYsRUFBd0JHLE1BQXhCO0FBREMsS0FBZDtBQUdIOztBQUVEQyxPQUFLLENBQUNFLEVBQUQsRUFBSztBQUNOLFNBQUtHLFFBQUwsQ0FBYztBQUNWVCxhQUFPLEVBQUUsS0FBS0QsS0FBTCxDQUFXQyxPQUFYLENBQW1CVSxNQUFuQixDQUEwQkMsQ0FBQyxJQUFJO0FBQ3BDLFlBQUlBLENBQUMsQ0FBQ0wsRUFBRixJQUFRQSxFQUFSLElBQWNLLENBQUMsQ0FBQ0MsT0FBcEIsRUFBNkJELENBQUMsQ0FBQ0MsT0FBRjtBQUM3QixlQUFPRCxDQUFDLENBQUNMLEVBQUYsSUFBUUEsRUFBZjtBQUNILE9BSFE7QUFEQyxLQUFkO0FBTUg7O0FBRUQsYUFBV0EsRUFBWCxHQUFnQjtBQUFDLFdBQU8sa0JBQVA7QUFBMkI7O0FBQzVDLGFBQVdPLElBQVgsR0FBa0I7QUFDZCxRQUFJLEtBQUtDLEtBQVQsRUFBZ0IsT0FBTyxLQUFLQSxLQUFaO0FBQ2hCLFVBQU1DLFNBQVMsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQWxCO0FBQ0FGLGFBQVMsQ0FBQ1QsRUFBVixHQUFlLEtBQUtBLEVBQXBCO0FBQ0FVLFlBQVEsQ0FBQ0UsSUFBVCxDQUFjQyxNQUFkLENBQXFCSixTQUFyQjtBQUNBLFdBQU8sS0FBS0QsS0FBTCxHQUFhQyxTQUFwQjtBQUNIOztBQXJDaUQ7O0FBd0N0RCxNQUFNSyxZQUFZLEdBQUd6Qiw2Q0FBSyxDQUFDMEIsU0FBTixFQUFyQjtBQUNBLE1BQU1OLFNBQVMsR0FBRyw0REFBQyx1QkFBRDtBQUF5QixLQUFHLEVBQUVLO0FBQTlCLEVBQWxCO0FBQ0EsTUFBTUUsR0FBRyxHQUFHQyxpREFBUyxDQUFDQyxlQUFWLENBQTBCRCxpREFBUyxDQUFDRSxnQkFBVixDQUEyQlQsUUFBUSxDQUFDVSxhQUFULENBQXVCLGFBQXZCLENBQTNCLENBQTFCLEVBQTZGQyxDQUFDLElBQUlBLENBQUMsSUFBSUEsQ0FBQyxDQUFDQyxJQUFQLElBQWVELENBQUMsQ0FBQ0MsSUFBRixDQUFPQyxXQUF0QixJQUFxQ0YsQ0FBQyxDQUFDQyxJQUFGLENBQU9DLFdBQVAsSUFBc0IsS0FBN0osQ0FBWjtBQUNBQywrQ0FBTyxDQUFDQyxLQUFSLENBQWMsbUJBQWQsRUFBbUNULEdBQUcsQ0FBQ00sSUFBSixDQUFTSSxTQUE1QyxFQUF1RCxRQUF2RCxFQUFpRSxDQUFDQyxVQUFELEVBQWFDLElBQWIsRUFBbUJDLFdBQW5CLEtBQW1DO0FBQ2hHLFFBQU1DLEtBQUssR0FBR2IsaURBQVMsQ0FBQ2MsZ0JBQVYsQ0FBMkJGLFdBQTNCLEVBQXdDUixDQUFDLElBQUlBLENBQUMsSUFBSUEsQ0FBQyxDQUFDLENBQUQsQ0FBTixJQUFhQSxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUtDLElBQWxCLElBQTBCRCxDQUFDLENBQUMsQ0FBRCxDQUFELENBQUtDLElBQUwsQ0FBVUMsV0FBVixJQUF5QixnQkFBaEcsRUFBa0g7QUFBQ1MsWUFBUSxFQUFFLENBQUMsVUFBRCxFQUFhLE9BQWI7QUFBWCxHQUFsSCxDQUFkO0FBQ0FGLE9BQUssQ0FBQ0csSUFBTixDQUFXeEIsU0FBWDtBQUNILENBSEQ7QUFJQU8sR0FBRyxDQUFDa0IsU0FBSixDQUFjQyxXQUFkO0FBQ2VyQiwyRUFBWSxDQUFDc0IsT0FBNUIiLCJmaWxlIjoiLi9zcmMvdWkvZmxvYXRpbmcvY29udGFpbmVyLmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVhY3QsIFV0aWxpdGllcywgUGF0Y2hlcn0gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmltcG9ydCBGbG9hdGluZ1dpbmRvdyBmcm9tIFwiLi93aW5kb3dcIjtcclxuXHJcbmNsYXNzIEZsb2F0aW5nV2luZG93Q29udGFpbmVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgICB0aGlzLnN0YXRlID0ge3dpbmRvd3M6IFtdfTtcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGUud2luZG93cy5tYXAod2luZG93ID0+XHJcbiAgICAgICAgICAgIDxGbG9hdGluZ1dpbmRvdyB7Li4ud2luZG93fSBjbG9zZT17dGhpcy5jbG9zZS5iaW5kKHRoaXMsIHdpbmRvdy5pZCl9PlxyXG4gICAgICAgICAgICAgICAgICAgIHt3aW5kb3cuY2hpbGRyZW59XHJcbiAgICAgICAgICAgIDwvRmxvYXRpbmdXaW5kb3c+XHJcbiAgICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKHdpbmRvdykge1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICB3aW5kb3dzOiBbLi4udGhpcy5zdGF0ZS53aW5kb3dzLCB3aW5kb3ddXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoaWQpIHtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcclxuICAgICAgICAgICAgd2luZG93czogdGhpcy5zdGF0ZS53aW5kb3dzLmZpbHRlcih3ID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICh3LmlkID09IGlkICYmIHcub25DbG9zZSkgdy5vbkNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdy5pZCAhPSBpZDtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0IGlkKCkge3JldHVybiBcImZsb2F0aW5nLXdpbmRvd3NcIjt9XHJcbiAgICBzdGF0aWMgZ2V0IHJvb3QoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3Jvb3QpIHJldHVybiB0aGlzLl9yb290O1xyXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICAgICAgY29udGFpbmVyLmlkID0gdGhpcy5pZDtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZChjb250YWluZXIpO1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9yb290ID0gY29udGFpbmVyO1xyXG4gICAgfVxyXG59XHJcblxyXG5jb25zdCBjb250YWluZXJSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuY29uc3QgY29udGFpbmVyID0gPEZsb2F0aW5nV2luZG93Q29udGFpbmVyIHJlZj17Y29udGFpbmVyUmVmfSAvPjtcclxuY29uc3QgQXBwID0gVXRpbGl0aWVzLmZpbmRJblJlYWN0VHJlZShVdGlsaXRpZXMuZ2V0UmVhY3RJbnN0YW5jZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFwcC0xOV9EWHRcIikpLCBtID0+IG0gJiYgbS50eXBlICYmIG0udHlwZS5kaXNwbGF5TmFtZSAmJiBtLnR5cGUuZGlzcGxheU5hbWUgPT0gXCJBcHBcIik7XHJcblBhdGNoZXIuYWZ0ZXIoXCJGbG9hdGluZ0NvbnRhaW5lclwiLCBBcHAudHlwZS5wcm90b3R5cGUsIFwicmVuZGVyXCIsICh0aGlzT2JqZWN0LCBhcmdzLCByZXR1cm5WYWx1ZSkgPT4ge1xyXG4gICAgY29uc3QgZ3JvdXAgPSBVdGlsaXRpZXMuZmluZEluUmVuZGVyVHJlZShyZXR1cm5WYWx1ZSwgbSA9PiBtICYmIG1bNV0gJiYgbVs1XS50eXBlICYmIG1bNV0udHlwZS5kaXNwbGF5TmFtZSA9PSBcIkxheWVyQ29udGFpbmVyXCIsIHt3YWxrYWJsZTogW1wiY2hpbGRyZW5cIiwgXCJwcm9wc1wiXX0pO1xyXG4gICAgZ3JvdXAucHVzaChjb250YWluZXIpO1xyXG59KTtcclxuQXBwLnN0YXRlTm9kZS5mb3JjZVVwZGF0ZSgpO1xyXG5leHBvcnQgZGVmYXVsdCBjb250YWluZXJSZWYuY3VycmVudDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/floating/container.jsx\n");

/***/ }),

/***/ "./src/ui/floating/window.jsx":
/*!************************************!*\
  !*** ./src/ui/floating/window.jsx ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FloatingWindow; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _structs_screen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../structs/screen */ \"./src/structs/screen.js\");\n/* harmony import */ var _icons_close__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icons/close */ \"./src/ui/icons/close.jsx\");\n/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modals */ \"./src/ui/modals.js\");\n\n\n\n\nclass FloatingWindow extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalOpen: false\n    };\n    this.offX = 0;\n    this.offY = 0;\n    this.titlebar = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createRef();\n    this.window = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createRef();\n    this.close = this.close.bind(this);\n    this.onDrag = this.onDrag.bind(this);\n    this.onDragStart = this.onDragStart.bind(this);\n    this.onDragStop = this.onDragStop.bind(this);\n    this.onResizeStart = this.onResizeStart.bind(this);\n  }\n\n  componentDidMount() {\n    this.window.current.addEventListener(\"mousedown\", this.onResizeStart, false);\n    this.titlebar.current.addEventListener(\"mousedown\", this.onDragStart, false);\n    document.addEventListener(\"mouseup\", this.onDragStop, false);\n  }\n\n  onResizeStart() {\n    this.currentWidth = this.window.current.style.width;\n    this.currentHeight = this.window.current.style.height;\n  }\n\n  onDragStop() {\n    document.removeEventListener(\"mousemove\", this.onDrag, true);\n\n    if (this.props.onResize) {\n      const width = this.window.current.style.width;\n      const height = this.window.current.style.height;\n      if (width != this.currentWidth || height != this.currentHeight) this.props.onResize();\n      this.currentWidth = width;\n      this.currentHeight = height;\n    }\n  }\n\n  onDragStart(e) {\n    const div = this.window.current;\n    this.offY = e.clientY - parseInt(div.offsetTop);\n    this.offX = e.clientX - parseInt(div.offsetLeft);\n    document.addEventListener(\"mousemove\", this.onDrag, true);\n  }\n\n  onDrag(e) {\n    const div = this.window.current;\n    div.style.position = \"fixed\";\n    div.style.top = e.clientY - this.offY + \"px\";\n    div.style.left = e.clientX - this.offX + \"px\";\n  }\n\n  componentWillUnmount() {\n    this.titlebar.current.removeEventListener(\"mousedown\", this.onDragStart, false);\n    document.removeEventListener(\"mouseup\", this.onDragStop, false);\n  }\n\n  render() {\n    const top = this.props.center ? _structs_screen__WEBPACK_IMPORTED_MODULE_1__[\"default\"].height / 2 - this.props.height / 2 : this.props.top;\n    const left = this.props.center ? _structs_screen__WEBPACK_IMPORTED_MODULE_1__[\"default\"].width / 2 - this.props.width / 2 : this.props.left; // console.log(top, left);\n\n    const className = `floating-window${` ${this.props.className}` || \"\"}${this.props.resizable ? \" resizable\" : \"\"}${this.state.modalOpen ? \" modal-open\" : \"\"}`;\n    const styles = {\n      height: this.props.height,\n      width: this.props.width,\n      left: left || 0,\n      top: top || 0\n    };\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      id: this.props.id,\n      className: className,\n      ref: this.window,\n      style: styles\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"floating-window-titlebar\",\n      ref: this.titlebar\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", {\n      className: \"title\"\n    }, this.props.title), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"floating-window-buttons\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"button close-button\",\n      onClick: this.close\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_close__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null)))), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"floating-window-content\"\n    }, this.props.children));\n  }\n\n  async close() {\n    let shouldClose = true;\n    const confirmClose = typeof this.props.confirmClose == \"function\" ? this.props.confirmClose() : this.props.confirmClose;\n\n    if (confirmClose) {\n      this.setState({\n        modalOpen: true\n      });\n      shouldClose = await this.confirmClose();\n      this.setState({\n        modalOpen: false\n      });\n    }\n\n    if (this.props.close && shouldClose) this.props.close();\n  }\n\n  confirmClose() {\n    return new Promise(resolve => {\n      _modals__WEBPACK_IMPORTED_MODULE_3__[\"default\"].showConfirmationModal(modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.confirmClose, this.props.confirmationText, {\n        danger: true,\n        confirmText: \"Close\",\n        onConfirm: () => {\n          resolve(true);\n        },\n        onCancel: () => {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/floating/window.jsx\n");

/***/ }),

/***/ "./src/ui/icons/bdlogo.jsx":
/*!*********************************!*\
  !*** ./src/ui/icons/bdlogo.jsx ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BDLogo; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass BDLogo extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"svg\", {\n      className: \"bd-logo \" + this.props.className,\n      height: \"100%\",\n      width: this.props.size || \"16px\",\n      viewBox: \"0 0 2000 2000\",\n      style: {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"metadata\", null), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"defs\", null, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"filter\", {\n      id: \"shadow1\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"feDropShadow\", {\n      dx: \"20\",\n      dy: \"0\",\n      stdDeviation: \"20\",\n      floodColor: \"rgba(0,0,0,0.35)\"\n    })), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"filter\", {\n      id: \"shadow2\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"feDropShadow\", {\n      dx: \"15\",\n      dy: \"0\",\n      stdDeviation: \"20\",\n      floodColor: \"rgba(255,255,255,0.15)\"\n    })), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"filter\", {\n      id: \"shadow3\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"feDropShadow\", {\n      dx: \"10\",\n      dy: \"0\",\n      stdDeviation: \"20\",\n      floodColor: \"rgba(0,0,0,0.35)\"\n    }))), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"g\", null, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      style: {\n        filter: \"url(#shadow3)\"\n      },\n      fill: \"#171717\",\n      opacity: \"1\",\n      d: \"M1195.44+135.442L1195.44+135.442L997.6+136.442C1024.2+149.742+1170.34+163.542+1193.64+179.742C1264.34+228.842+1319.74+291.242+1358.24+365.042C1398.14+441.642+1419.74+530.642+1422.54+629.642L1422.54+630.842L1422.54+632.042C1422.54+773.142+1422.54+1228.14+1422.54+1369.14L1422.54+1370.34L1422.54+1371.54C1419.84+1470.54+1398.24+1559.54+1358.24+1636.14C1319.74+1709.94+1264.44+1772.34+1193.64+1821.44C1171.04+1837.14+1025.7+1850.54+1000+1863.54L1193.54+1864.54C1539.74+1866.44+1864.54+1693.34+1864.54+1296.64L1864.54+716.942C1866.44+312.442+1541.64+135.442+1195.44+135.442Z\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      style: {\n        filter: \"url(#shadow2)\"\n      },\n      fill: \"#3E82E5\",\n      opacity: \"1\",\n      d: \"M1695.54+631.442C1685.84+278.042+1409.34+135.442+1052.94+135.442L361.74+136.442L803.74+490.442L1060.74+490.442C1335.24+490.442+1335.24+835.342+1060.74+835.342L1060.74+1164.84C1150.22+1164.84+1210.53+1201.48+1241.68+1250.87C1306.07+1353+1245.76+1509.64+1060.74+1509.64L361.74+1863.54L1052.94+1864.54C1409.24+1864.54+1685.74+1721.94+1695.54+1368.54C1695.54+1205.94+1651.04+1084.44+1572.64+999.942C1651.04+915.542+1695.54+794.042+1695.54+631.442Z\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      style: {\n        filter: \"url(#shadow1)\"\n      },\n      fill: \"#FFFFFF\",\n      opacity: \"1\",\n      d: \"M1469.25+631.442C1459.55+278.042+1183.05+135.442+826.65+135.442L135.45+135.442L135.45+1004C135.45+1004+135.427+1255.21+355.626+1255.21C575.825+1255.21+575.848+1004+575.848+1004L577.45+490.442L834.45+490.442C1108.95+490.442+1108.95+835.342+834.45+835.342L664.65+835.342L664.65+1164.84L834.45+1164.84C923.932+1164.84+984.244+1201.48+1015.39+1250.87C1079.78+1353+1019.47+1509.64+834.45+1509.64L135.45+1509.64L135.45+1864.54L826.65+1864.54C1182.95+1864.54+1459.45+1721.94+1469.25+1368.54C1469.25+1205.94+1424.75+1084.44+1346.35+999.942C1424.75+915.542+1469.25+794.042+1469.25+631.442Z\"\n    })));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2ljb25zL2JkbG9nby5qc3g/YmQ4OSJdLCJuYW1lcyI6WyJCRExvZ28iLCJSZWFjdCIsIkNvbXBvbmVudCIsInJlbmRlciIsInByb3BzIiwiY2xhc3NOYW1lIiwic2l6ZSIsImZpbGxSdWxlIiwiY2xpcFJ1bGUiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJmaWx0ZXIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWUsTUFBTUEsTUFBTixTQUFxQkMsNkNBQUssQ0FBQ0MsU0FBM0IsQ0FBcUM7QUFDaERDLFFBQU0sR0FBRztBQUNMLFdBQU87QUFBSyxlQUFTLEVBQUUsYUFBYSxLQUFLQyxLQUFMLENBQVdDLFNBQXhDO0FBQW1ELFlBQU0sRUFBQyxNQUExRDtBQUFpRSxXQUFLLEVBQUUsS0FBS0QsS0FBTCxDQUFXRSxJQUFYLElBQW1CLE1BQTNGO0FBQW1HLGFBQU8sRUFBQyxlQUEzRztBQUEySCxXQUFLLEVBQUU7QUFBQ0MsZ0JBQVEsRUFBRSxTQUFYO0FBQXNCQyxnQkFBUSxFQUFFLFNBQWhDO0FBQTJDQyxxQkFBYSxFQUFFLE9BQTFEO0FBQW1FQyxzQkFBYyxFQUFFO0FBQW5GO0FBQWxJLE9BQ0gsNkVBREcsRUFFSCwwRUFDSTtBQUFRLFFBQUUsRUFBQztBQUFYLE9BQXFCO0FBQWMsUUFBRSxFQUFDLElBQWpCO0FBQXNCLFFBQUUsRUFBQyxHQUF6QjtBQUE2QixrQkFBWSxFQUFDLElBQTFDO0FBQStDLGdCQUFVLEVBQUM7QUFBMUQsTUFBckIsQ0FESixFQUVJO0FBQVEsUUFBRSxFQUFDO0FBQVgsT0FBcUI7QUFBYyxRQUFFLEVBQUMsSUFBakI7QUFBc0IsUUFBRSxFQUFDLEdBQXpCO0FBQTZCLGtCQUFZLEVBQUMsSUFBMUM7QUFBK0MsZ0JBQVUsRUFBQztBQUExRCxNQUFyQixDQUZKLEVBR0k7QUFBUSxRQUFFLEVBQUM7QUFBWCxPQUFxQjtBQUFjLFFBQUUsRUFBQyxJQUFqQjtBQUFzQixRQUFFLEVBQUMsR0FBekI7QUFBNkIsa0JBQVksRUFBQyxJQUExQztBQUErQyxnQkFBVSxFQUFDO0FBQTFELE1BQXJCLENBSEosQ0FGRyxFQU9ILHVFQUNJO0FBQU0sV0FBSyxFQUFFO0FBQUNDLGNBQU0sRUFBRTtBQUFULE9BQWI7QUFBd0MsVUFBSSxFQUFDLFNBQTdDO0FBQXVELGFBQU8sRUFBQyxHQUEvRDtBQUFtRSxPQUFDLEVBQUM7QUFBckUsTUFESixFQUVJO0FBQU0sV0FBSyxFQUFFO0FBQUNBLGNBQU0sRUFBRTtBQUFULE9BQWI7QUFBd0MsVUFBSSxFQUFDLFNBQTdDO0FBQXVELGFBQU8sRUFBQyxHQUEvRDtBQUFtRSxPQUFDLEVBQUM7QUFBckUsTUFGSixFQUdJO0FBQU0sV0FBSyxFQUFFO0FBQUNBLGNBQU0sRUFBRTtBQUFULE9BQWI7QUFBd0MsVUFBSSxFQUFDLFNBQTdDO0FBQXVELGFBQU8sRUFBQyxHQUEvRDtBQUFtRSxPQUFDLEVBQUM7QUFBckUsTUFISixDQVBHLENBQVA7QUFhSDs7QUFmK0MiLCJmaWxlIjoiLi9zcmMvdWkvaWNvbnMvYmRsb2dvLmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVhY3R9IGZyb20gXCJtb2R1bGVzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCRExvZ28gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiA8c3ZnIGNsYXNzTmFtZT17XCJiZC1sb2dvIFwiICsgdGhpcy5wcm9wcy5jbGFzc05hbWV9IGhlaWdodD1cIjEwMCVcIiB3aWR0aD17dGhpcy5wcm9wcy5zaXplIHx8IFwiMTZweFwifSB2aWV3Qm94PVwiMCAwIDIwMDAgMjAwMFwiIHN0eWxlPXt7ZmlsbFJ1bGU6IFwiZXZlbm9kZFwiLCBjbGlwUnVsZTogXCJldmVub2RkXCIsIHN0cm9rZUxpbmVjYXA6IFwicm91bmRcIiwgc3Ryb2tlTGluZWpvaW46IFwicm91bmRcIn19PlxyXG4gICAgICAgICAgICA8bWV0YWRhdGEgLz5cclxuICAgICAgICAgICAgPGRlZnM+XHJcbiAgICAgICAgICAgICAgICA8ZmlsdGVyIGlkPVwic2hhZG93MVwiPjxmZURyb3BTaGFkb3cgZHg9XCIyMFwiIGR5PVwiMFwiIHN0ZERldmlhdGlvbj1cIjIwXCIgZmxvb2RDb2xvcj1cInJnYmEoMCwwLDAsMC4zNSlcIiAvPjwvZmlsdGVyPlxyXG4gICAgICAgICAgICAgICAgPGZpbHRlciBpZD1cInNoYWRvdzJcIj48ZmVEcm9wU2hhZG93IGR4PVwiMTVcIiBkeT1cIjBcIiBzdGREZXZpYXRpb249XCIyMFwiIGZsb29kQ29sb3I9XCJyZ2JhKDI1NSwyNTUsMjU1LDAuMTUpXCIgLz48L2ZpbHRlcj5cclxuICAgICAgICAgICAgICAgIDxmaWx0ZXIgaWQ9XCJzaGFkb3czXCI+PGZlRHJvcFNoYWRvdyBkeD1cIjEwXCIgZHk9XCIwXCIgc3RkRGV2aWF0aW9uPVwiMjBcIiBmbG9vZENvbG9yPVwicmdiYSgwLDAsMCwwLjM1KVwiIC8+PC9maWx0ZXI+XHJcbiAgICAgICAgICAgIDwvZGVmcz5cclxuICAgICAgICAgICAgPGc+XHJcbiAgICAgICAgICAgICAgICA8cGF0aCBzdHlsZT17e2ZpbHRlcjogXCJ1cmwoI3NoYWRvdzMpXCJ9fSBmaWxsPVwiIzE3MTcxN1wiIG9wYWNpdHk9XCIxXCIgZD1cIk0xMTk1LjQ0KzEzNS40NDJMMTE5NS40NCsxMzUuNDQyTDk5Ny42KzEzNi40NDJDMTAyNC4yKzE0OS43NDIrMTE3MC4zNCsxNjMuNTQyKzExOTMuNjQrMTc5Ljc0MkMxMjY0LjM0KzIyOC44NDIrMTMxOS43NCsyOTEuMjQyKzEzNTguMjQrMzY1LjA0MkMxMzk4LjE0KzQ0MS42NDIrMTQxOS43NCs1MzAuNjQyKzE0MjIuNTQrNjI5LjY0MkwxNDIyLjU0KzYzMC44NDJMMTQyMi41NCs2MzIuMDQyQzE0MjIuNTQrNzczLjE0MisxNDIyLjU0KzEyMjguMTQrMTQyMi41NCsxMzY5LjE0TDE0MjIuNTQrMTM3MC4zNEwxNDIyLjU0KzEzNzEuNTRDMTQxOS44NCsxNDcwLjU0KzEzOTguMjQrMTU1OS41NCsxMzU4LjI0KzE2MzYuMTRDMTMxOS43NCsxNzA5Ljk0KzEyNjQuNDQrMTc3Mi4zNCsxMTkzLjY0KzE4MjEuNDRDMTE3MS4wNCsxODM3LjE0KzEwMjUuNysxODUwLjU0KzEwMDArMTg2My41NEwxMTkzLjU0KzE4NjQuNTRDMTUzOS43NCsxODY2LjQ0KzE4NjQuNTQrMTY5My4zNCsxODY0LjU0KzEyOTYuNjRMMTg2NC41NCs3MTYuOTQyQzE4NjYuNDQrMzEyLjQ0MisxNTQxLjY0KzEzNS40NDIrMTE5NS40NCsxMzUuNDQyWlwiIC8+XHJcbiAgICAgICAgICAgICAgICA8cGF0aCBzdHlsZT17e2ZpbHRlcjogXCJ1cmwoI3NoYWRvdzIpXCJ9fSBmaWxsPVwiIzNFODJFNVwiIG9wYWNpdHk9XCIxXCIgZD1cIk0xNjk1LjU0KzYzMS40NDJDMTY4NS44NCsyNzguMDQyKzE0MDkuMzQrMTM1LjQ0MisxMDUyLjk0KzEzNS40NDJMMzYxLjc0KzEzNi40NDJMODAzLjc0KzQ5MC40NDJMMTA2MC43NCs0OTAuNDQyQzEzMzUuMjQrNDkwLjQ0MisxMzM1LjI0KzgzNS4zNDIrMTA2MC43NCs4MzUuMzQyTDEwNjAuNzQrMTE2NC44NEMxMTUwLjIyKzExNjQuODQrMTIxMC41MysxMjAxLjQ4KzEyNDEuNjgrMTI1MC44N0MxMzA2LjA3KzEzNTMrMTI0NS43NisxNTA5LjY0KzEwNjAuNzQrMTUwOS42NEwzNjEuNzQrMTg2My41NEwxMDUyLjk0KzE4NjQuNTRDMTQwOS4yNCsxODY0LjU0KzE2ODUuNzQrMTcyMS45NCsxNjk1LjU0KzEzNjguNTRDMTY5NS41NCsxMjA1Ljk0KzE2NTEuMDQrMTA4NC40NCsxNTcyLjY0Kzk5OS45NDJDMTY1MS4wNCs5MTUuNTQyKzE2OTUuNTQrNzk0LjA0MisxNjk1LjU0KzYzMS40NDJaXCIgLz5cclxuICAgICAgICAgICAgICAgIDxwYXRoIHN0eWxlPXt7ZmlsdGVyOiBcInVybCgjc2hhZG93MSlcIn19IGZpbGw9XCIjRkZGRkZGXCIgb3BhY2l0eT1cIjFcIiBkPVwiTTE0NjkuMjUrNjMxLjQ0MkMxNDU5LjU1KzI3OC4wNDIrMTE4My4wNSsxMzUuNDQyKzgyNi42NSsxMzUuNDQyTDEzNS40NSsxMzUuNDQyTDEzNS40NSsxMDA0QzEzNS40NSsxMDA0KzEzNS40MjcrMTI1NS4yMSszNTUuNjI2KzEyNTUuMjFDNTc1LjgyNSsxMjU1LjIxKzU3NS44NDgrMTAwNCs1NzUuODQ4KzEwMDRMNTc3LjQ1KzQ5MC40NDJMODM0LjQ1KzQ5MC40NDJDMTEwOC45NSs0OTAuNDQyKzExMDguOTUrODM1LjM0Mis4MzQuNDUrODM1LjM0Mkw2NjQuNjUrODM1LjM0Mkw2NjQuNjUrMTE2NC44NEw4MzQuNDUrMTE2NC44NEM5MjMuOTMyKzExNjQuODQrOTg0LjI0NCsxMjAxLjQ4KzEwMTUuMzkrMTI1MC44N0MxMDc5Ljc4KzEzNTMrMTAxOS40NysxNTA5LjY0KzgzNC40NSsxNTA5LjY0TDEzNS40NSsxNTA5LjY0TDEzNS40NSsxODY0LjU0TDgyNi42NSsxODY0LjU0QzExODIuOTUrMTg2NC41NCsxNDU5LjQ1KzE3MjEuOTQrMTQ2OS4yNSsxMzY4LjU0QzE0NjkuMjUrMTIwNS45NCsxNDI0Ljc1KzEwODQuNDQrMTM0Ni4zNSs5OTkuOTQyQzE0MjQuNzUrOTE1LjU0MisxNDY5LjI1Kzc5NC4wNDIrMTQ2OS4yNSs2MzEuNDQyWlwiIC8+XHJcbiAgICAgICAgICAgIDwvZz5cclxuICAgICAgICA8L3N2Zz47XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/icons/bdlogo.jsx\n");

/***/ }),

/***/ "./src/ui/icons/close.jsx":
/*!********************************!*\
  !*** ./src/ui/icons/close.jsx ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return CloseButton; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass CloseButton extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"svg\", {\n      viewBox: \"0 0 12 12\",\n      style: {\n        width: \"18px\",\n        height: \"18px\"\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"g\", {\n      className: \"background\",\n      fill: \"none\",\n      fillRule: \"evenodd\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M0 0h12v12H0\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      className: \"fill\",\n      fill: \"#dcddde\",\n      d: \"M9.5 3.205L8.795 2.5 6 5.295 3.205 2.5l-.705.705L5.295 6 2.5 8.795l.705.705L6 6.705 8.795 9.5l.705-.705L6.705 6\"\n    })));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2ljb25zL2Nsb3NlLmpzeD9iY2UxIl0sIm5hbWVzIjpbIkNsb3NlQnV0dG9uIiwiUmVhY3QiLCJDb21wb25lbnQiLCJyZW5kZXIiLCJ3aWR0aCIsImhlaWdodCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFFZSxNQUFNQSxXQUFOLFNBQTBCQyw2Q0FBSyxDQUFDQyxTQUFoQyxDQUEwQztBQUNyREMsUUFBTSxHQUFHO0FBQ0wsV0FBTztBQUFLLGFBQU8sRUFBQyxXQUFiO0FBQXlCLFdBQUssRUFBRTtBQUFDQyxhQUFLLEVBQUUsTUFBUjtBQUFnQkMsY0FBTSxFQUFFO0FBQXhCO0FBQWhDLE9BQ0g7QUFBRyxlQUFTLEVBQUMsWUFBYjtBQUEwQixVQUFJLEVBQUMsTUFBL0I7QUFBc0MsY0FBUSxFQUFDO0FBQS9DLE9BQ0k7QUFBTSxPQUFDLEVBQUM7QUFBUixNQURKLEVBRUk7QUFBTSxlQUFTLEVBQUMsTUFBaEI7QUFBdUIsVUFBSSxFQUFDLFNBQTVCO0FBQXNDLE9BQUMsRUFBQztBQUF4QyxNQUZKLENBREcsQ0FBUDtBQU1IOztBQVJvRCIsImZpbGUiOiIuL3NyYy91aS9pY29ucy9jbG9zZS5qc3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JlYWN0fSBmcm9tIFwibW9kdWxlc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2xvc2VCdXR0b24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiA8c3ZnIHZpZXdCb3g9XCIwIDAgMTIgMTJcIiBzdHlsZT17e3dpZHRoOiBcIjE4cHhcIiwgaGVpZ2h0OiBcIjE4cHhcIn19PlxyXG4gICAgICAgICAgICA8ZyBjbGFzc05hbWU9XCJiYWNrZ3JvdW5kXCIgZmlsbD1cIm5vbmVcIiBmaWxsUnVsZT1cImV2ZW5vZGRcIj5cclxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMCAwaDEydjEySDBcIiAvPlxyXG4gICAgICAgICAgICAgICAgPHBhdGggY2xhc3NOYW1lPVwiZmlsbFwiIGZpbGw9XCIjZGNkZGRlXCIgZD1cIk05LjUgMy4yMDVMOC43OTUgMi41IDYgNS4yOTUgMy4yMDUgMi41bC0uNzA1LjcwNUw1LjI5NSA2IDIuNSA4Ljc5NWwuNzA1LjcwNUw2IDYuNzA1IDguNzk1IDkuNWwuNzA1LS43MDVMNi43MDUgNlwiIC8+XHJcbiAgICAgICAgICAgIDwvZz5cclxuICAgICAgICA8L3N2Zz47XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/icons/close.jsx\n");

/***/ }),

/***/ "./src/ui/icons/cog.jsx":
/*!******************************!*\
  !*** ./src/ui/icons/cog.jsx ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Cog; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass Cog extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    const size = this.props.size || \"20px\";\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"svg\", {\n      viewBox: \"0 0 20 20\",\n      style: {\n        width: size,\n        height: size\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h20v20H0V0z\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M15.95 10.78c.03-.25.05-.51.05-.78s-.02-.53-.06-.78l1.69-1.32c.15-.12.19-.34.1-.51l-1.6-2.77c-.1-.18-.31-.24-.49-.18l-1.99.8c-.42-.32-.86-.58-1.35-.78L12 2.34c-.03-.2-.2-.34-.4-.34H8.4c-.2 0-.36.14-.39.34l-.3 2.12c-.49.2-.94.47-1.35.78l-1.99-.8c-.18-.07-.39 0-.49.18l-1.6 2.77c-.1.18-.06.39.1.51l1.69 1.32c-.04.25-.07.52-.07.78s.02.53.06.78L2.37 12.1c-.15.12-.19.34-.1.51l1.6 2.77c.1.18.31.24.49.18l1.99-.8c.42.32.86.58 1.35.78l.3 2.12c.04.2.2.34.4.34h3.2c.2 0 .37-.14.39-.34l.3-2.12c.49-.2.94-.47 1.35-.78l1.99.8c.18.07.39 0 .49-.18l1.6-2.77c.1-.18.06-.39-.1-.51l-1.67-1.32zM10 13c-1.65 0-3-1.35-3-3s1.35-3 3-3 3 1.35 3 3-1.35 3-3 3z\"\n    }));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2ljb25zL2NvZy5qc3g/MGFiZCJdLCJuYW1lcyI6WyJDb2ciLCJSZWFjdCIsIkNvbXBvbmVudCIsInJlbmRlciIsInNpemUiLCJwcm9wcyIsIndpZHRoIiwiaGVpZ2h0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVlLE1BQU1BLEdBQU4sU0FBa0JDLDZDQUFLLENBQUNDLFNBQXhCLENBQWtDO0FBQzdDQyxRQUFNLEdBQUc7QUFDTCxVQUFNQyxJQUFJLEdBQUcsS0FBS0MsS0FBTCxDQUFXRCxJQUFYLElBQW1CLE1BQWhDO0FBQ0EsV0FBTztBQUFLLGFBQU8sRUFBQyxXQUFiO0FBQXlCLFdBQUssRUFBRTtBQUFDRSxhQUFLLEVBQUVGLElBQVI7QUFBY0csY0FBTSxFQUFFSDtBQUF0QjtBQUFoQyxPQUNDO0FBQU0sVUFBSSxFQUFDLE1BQVg7QUFBa0IsT0FBQyxFQUFDO0FBQXBCLE1BREQsRUFFQztBQUFNLE9BQUMsRUFBQztBQUFSLE1BRkQsQ0FBUDtBQUlIOztBQVA0QyIsImZpbGUiOiIuL3NyYy91aS9pY29ucy9jb2cuanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZWFjdH0gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvZyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgY29uc3Qgc2l6ZSA9IHRoaXMucHJvcHMuc2l6ZSB8fCBcIjIwcHhcIjtcclxuICAgICAgICByZXR1cm4gPHN2ZyB2aWV3Qm94PVwiMCAwIDIwIDIwXCIgc3R5bGU9e3t3aWR0aDogc2l6ZSwgaGVpZ2h0OiBzaXplfX0+XHJcbiAgICAgICAgICAgICAgICA8cGF0aCBmaWxsPVwibm9uZVwiIGQ9XCJNMCAwaDIwdjIwSDBWMHpcIiAvPlxyXG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xNS45NSAxMC43OGMuMDMtLjI1LjA1LS41MS4wNS0uNzhzLS4wMi0uNTMtLjA2LS43OGwxLjY5LTEuMzJjLjE1LS4xMi4xOS0uMzQuMS0uNTFsLTEuNi0yLjc3Yy0uMS0uMTgtLjMxLS4yNC0uNDktLjE4bC0xLjk5LjhjLS40Mi0uMzItLjg2LS41OC0xLjM1LS43OEwxMiAyLjM0Yy0uMDMtLjItLjItLjM0LS40LS4zNEg4LjRjLS4yIDAtLjM2LjE0LS4zOS4zNGwtLjMgMi4xMmMtLjQ5LjItLjk0LjQ3LTEuMzUuNzhsLTEuOTktLjhjLS4xOC0uMDctLjM5IDAtLjQ5LjE4bC0xLjYgMi43N2MtLjEuMTgtLjA2LjM5LjEuNTFsMS42OSAxLjMyYy0uMDQuMjUtLjA3LjUyLS4wNy43OHMuMDIuNTMuMDYuNzhMMi4zNyAxMi4xYy0uMTUuMTItLjE5LjM0LS4xLjUxbDEuNiAyLjc3Yy4xLjE4LjMxLjI0LjQ5LjE4bDEuOTktLjhjLjQyLjMyLjg2LjU4IDEuMzUuNzhsLjMgMi4xMmMuMDQuMi4yLjM0LjQuMzRoMy4yYy4yIDAgLjM3LS4xNC4zOS0uMzRsLjMtMi4xMmMuNDktLjIuOTQtLjQ3IDEuMzUtLjc4bDEuOTkuOGMuMTguMDcuMzkgMCAuNDktLjE4bDEuNi0yLjc3Yy4xLS4xOC4wNi0uMzktLjEtLjUxbC0xLjY3LTEuMzJ6TTEwIDEzYy0xLjY1IDAtMy0xLjM1LTMtM3MxLjM1LTMgMy0zIDMgMS4zNSAzIDMtMS4zNSAzLTMgM3pcIiAvPlxyXG4gICAgICAgICAgICAgICA8L3N2Zz47XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/icons/cog.jsx\n");

/***/ }),

/***/ "./src/ui/icons/detach.jsx":
/*!*********************************!*\
  !*** ./src/ui/icons/detach.jsx ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Detach; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass Detach extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    const size = this.props.size || \"24px\";\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      style: {\n        width: size,\n        height: size\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M0 0h24v24H0z\",\n      fill: \"none\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n    }));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2ljb25zL2RldGFjaC5qc3g/M2NlYSJdLCJuYW1lcyI6WyJEZXRhY2giLCJSZWFjdCIsIkNvbXBvbmVudCIsInJlbmRlciIsInNpemUiLCJwcm9wcyIsIndpZHRoIiwiaGVpZ2h0Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVlLE1BQU1BLE1BQU4sU0FBcUJDLDZDQUFLLENBQUNDLFNBQTNCLENBQXFDO0FBQ2hEQyxRQUFNLEdBQUc7QUFDTCxVQUFNQyxJQUFJLEdBQUcsS0FBS0MsS0FBTCxDQUFXRCxJQUFYLElBQW1CLE1BQWhDO0FBQ0EsV0FBTztBQUFLLGFBQU8sRUFBQyxXQUFiO0FBQXlCLFdBQUssRUFBRTtBQUFDRSxhQUFLLEVBQUVGLElBQVI7QUFBY0csY0FBTSxFQUFFSDtBQUF0QjtBQUFoQyxPQUNDO0FBQU0sT0FBQyxFQUFDLGVBQVI7QUFBd0IsVUFBSSxFQUFDO0FBQTdCLE1BREQsRUFFQztBQUFNLE9BQUMsRUFBQztBQUFSLE1BRkQsQ0FBUDtBQUlIOztBQVArQyIsImZpbGUiOiIuL3NyYy91aS9pY29ucy9kZXRhY2guanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZWFjdH0gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERldGFjaCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgY29uc3Qgc2l6ZSA9IHRoaXMucHJvcHMuc2l6ZSB8fCBcIjI0cHhcIjtcclxuICAgICAgICByZXR1cm4gPHN2ZyB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgc3R5bGU9e3t3aWR0aDogc2l6ZSwgaGVpZ2h0OiBzaXplfX0+XHJcbiAgICAgICAgICAgICAgICA8cGF0aCBkPVwiTTAgMGgyNHYyNEgwelwiIGZpbGw9XCJub25lXCIgLz5cclxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTkgMTlINVY1aDdWM0g1Yy0xLjExIDAtMiAuOS0yIDJ2MTRjMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJ2LTdoLTJ2N3pNMTQgM3YyaDMuNTlsLTkuODMgOS44MyAxLjQxIDEuNDFMMTkgNi40MVYxMGgyVjNoLTd6XCIgLz5cclxuICAgICAgICAgICAgICAgPC9zdmc+O1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ui/icons/detach.jsx\n");

/***/ }),

/***/ "./src/ui/icons/edit.jsx":
/*!*******************************!*\
  !*** ./src/ui/icons/edit.jsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Edit; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass Edit extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    const size = this.props.size || \"24px\";\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      style: {\n        width: size,\n        height: size\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M0 0h24v24H0z\",\n      fill: \"none\"\n    }));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2ljb25zL2VkaXQuanN4PzQ2ZTMiXSwibmFtZXMiOlsiRWRpdCIsIlJlYWN0IiwiQ29tcG9uZW50IiwicmVuZGVyIiwic2l6ZSIsInByb3BzIiwid2lkdGgiLCJoZWlnaHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWUsTUFBTUEsSUFBTixTQUFtQkMsNkNBQUssQ0FBQ0MsU0FBekIsQ0FBbUM7QUFDOUNDLFFBQU0sR0FBRztBQUNMLFVBQU1DLElBQUksR0FBRyxLQUFLQyxLQUFMLENBQVdELElBQVgsSUFBbUIsTUFBaEM7QUFDQSxXQUFPO0FBQUssYUFBTyxFQUFDLFdBQWI7QUFBeUIsV0FBSyxFQUFFO0FBQUNFLGFBQUssRUFBRUYsSUFBUjtBQUFjRyxjQUFNLEVBQUVIO0FBQXRCO0FBQWhDLE9BQ0M7QUFBTSxPQUFDLEVBQUM7QUFBUixNQURELEVBRUM7QUFBTSxPQUFDLEVBQUMsZUFBUjtBQUF3QixVQUFJLEVBQUM7QUFBN0IsTUFGRCxDQUFQO0FBSUg7O0FBUDZDIiwiZmlsZSI6Ii4vc3JjL3VpL2ljb25zL2VkaXQuanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZWFjdH0gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEVkaXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IHNpemUgPSB0aGlzLnByb3BzLnNpemUgfHwgXCIyNHB4XCI7XHJcbiAgICAgICAgcmV0dXJuIDxzdmcgdmlld0JveD1cIjAgMCAyNCAyNFwiIHN0eWxlPXt7d2lkdGg6IHNpemUsIGhlaWdodDogc2l6ZX19PlxyXG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0zIDE3LjI1VjIxaDMuNzVMMTcuODEgOS45NGwtMy43NS0zLjc1TDMgMTcuMjV6TTIwLjcxIDcuMDRjLjM5LS4zOS4zOS0xLjAyIDAtMS40MWwtMi4zNC0yLjM0Yy0uMzktLjM5LTEuMDItLjM5LTEuNDEgMGwtMS44MyAxLjgzIDMuNzUgMy43NSAxLjgzLTEuODN6XCIgLz5cclxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMCAwaDI0djI0SDB6XCIgZmlsbD1cIm5vbmVcIiAvPlxyXG4gICAgICAgICAgICAgICA8L3N2Zz47XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/icons/edit.jsx\n");

/***/ }),

/***/ "./src/ui/icons/reload.jsx":
/*!*********************************!*\
  !*** ./src/ui/icons/reload.jsx ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ReloadIcon; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass ReloadIcon extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    const size = this.props.size || \"24px\";\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"svg\", {\n      className: this.props.className || \"\",\n      onClick: this.props.onClick,\n      fill: \"#dcddde\",\n      viewBox: \"0 0 24 24\",\n      style: {\n        width: size,\n        height: size\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\"\n    }));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2ljb25zL3JlbG9hZC5qc3g/MzhiMiJdLCJuYW1lcyI6WyJSZWxvYWRJY29uIiwiUmVhY3QiLCJDb21wb25lbnQiLCJyZW5kZXIiLCJzaXplIiwicHJvcHMiLCJjbGFzc05hbWUiLCJvbkNsaWNrIiwid2lkdGgiLCJoZWlnaHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWUsTUFBTUEsVUFBTixTQUF5QkMsNkNBQUssQ0FBQ0MsU0FBL0IsQ0FBeUM7QUFDcERDLFFBQU0sR0FBRztBQUNMLFVBQU1DLElBQUksR0FBRyxLQUFLQyxLQUFMLENBQVdELElBQVgsSUFBbUIsTUFBaEM7QUFDQSxXQUFPO0FBQUssZUFBUyxFQUFFLEtBQUtDLEtBQUwsQ0FBV0MsU0FBWCxJQUF3QixFQUF4QztBQUE0QyxhQUFPLEVBQUUsS0FBS0QsS0FBTCxDQUFXRSxPQUFoRTtBQUF5RSxVQUFJLEVBQUMsU0FBOUU7QUFBd0YsYUFBTyxFQUFDLFdBQWhHO0FBQTRHLFdBQUssRUFBRTtBQUFDQyxhQUFLLEVBQUVKLElBQVI7QUFBY0ssY0FBTSxFQUFFTDtBQUF0QjtBQUFuSCxPQUNIO0FBQU0sT0FBQyxFQUFDO0FBQVIsTUFERyxFQUVIO0FBQU0sVUFBSSxFQUFDLE1BQVg7QUFBa0IsT0FBQyxFQUFDO0FBQXBCLE1BRkcsQ0FBUDtBQUlIOztBQVBtRCIsImZpbGUiOiIuL3NyYy91aS9pY29ucy9yZWxvYWQuanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZWFjdH0gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlbG9hZEljb24gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IHNpemUgPSB0aGlzLnByb3BzLnNpemUgfHwgXCIyNHB4XCI7XHJcbiAgICAgICAgcmV0dXJuIDxzdmcgY2xhc3NOYW1lPXt0aGlzLnByb3BzLmNsYXNzTmFtZSB8fCBcIlwifSBvbkNsaWNrPXt0aGlzLnByb3BzLm9uQ2xpY2t9IGZpbGw9XCIjZGNkZGRlXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiIHN0eWxlPXt7d2lkdGg6IHNpemUsIGhlaWdodDogc2l6ZX19PlxyXG4gICAgICAgICAgICA8cGF0aCBkPVwiTTE3LjY1IDYuMzVDMTYuMiA0LjkgMTQuMjEgNCAxMiA0Yy00LjQyIDAtNy45OSAzLjU4LTcuOTkgOHMzLjU3IDggNy45OSA4YzMuNzMgMCA2Ljg0LTIuNTUgNy43My02aC0yLjA4Yy0uODIgMi4zMy0zLjA0IDQtNS42NSA0LTMuMzEgMC02LTIuNjktNi02czIuNjktNiA2LTZjMS42NiAwIDMuMTQuNjkgNC4yMiAxLjc4TDEzIDExaDdWNGwtMi4zNSAyLjM1elwiIC8+XHJcbiAgICAgICAgICAgIDxwYXRoIGZpbGw9XCJub25lXCIgZD1cIk0wIDBoMjR2MjRIMHpcIiAvPlxyXG4gICAgICAgIDwvc3ZnPjtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ui/icons/reload.jsx\n");

/***/ }),

/***/ "./src/ui/icons/save.jsx":
/*!*******************************!*\
  !*** ./src/ui/icons/save.jsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Save; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass Save extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    const size = this.props.size || \"24px\";\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"svg\", {\n      viewBox: \"0 0 24 24\",\n      style: {\n        width: size,\n        height: size\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0V0z\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"path\", {\n      d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm2 16H5V5h11.17L19 7.83V19zm-7-7c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3zM6 6h9v4H6z\"\n    }));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL2ljb25zL3NhdmUuanN4PzU4MGYiXSwibmFtZXMiOlsiU2F2ZSIsIlJlYWN0IiwiQ29tcG9uZW50IiwicmVuZGVyIiwic2l6ZSIsInByb3BzIiwid2lkdGgiLCJoZWlnaHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRWUsTUFBTUEsSUFBTixTQUFtQkMsNkNBQUssQ0FBQ0MsU0FBekIsQ0FBbUM7QUFDOUNDLFFBQU0sR0FBRztBQUNMLFVBQU1DLElBQUksR0FBRyxLQUFLQyxLQUFMLENBQVdELElBQVgsSUFBbUIsTUFBaEM7QUFDQSxXQUFPO0FBQUssYUFBTyxFQUFDLFdBQWI7QUFBeUIsV0FBSyxFQUFFO0FBQUNFLGFBQUssRUFBRUYsSUFBUjtBQUFjRyxjQUFNLEVBQUVIO0FBQXRCO0FBQWhDLE9BQ0M7QUFBTSxVQUFJLEVBQUMsTUFBWDtBQUFrQixPQUFDLEVBQUM7QUFBcEIsTUFERCxFQUVDO0FBQU0sT0FBQyxFQUFDO0FBQVIsTUFGRCxDQUFQO0FBSUg7O0FBUDZDIiwiZmlsZSI6Ii4vc3JjL3VpL2ljb25zL3NhdmUuanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZWFjdH0gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNhdmUgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IHNpemUgPSB0aGlzLnByb3BzLnNpemUgfHwgXCIyNHB4XCI7XHJcbiAgICAgICAgcmV0dXJuIDxzdmcgdmlld0JveD1cIjAgMCAyNCAyNFwiIHN0eWxlPXt7d2lkdGg6IHNpemUsIGhlaWdodDogc2l6ZX19PlxyXG4gICAgICAgICAgICAgICAgPHBhdGggZmlsbD1cIm5vbmVcIiBkPVwiTTAgMGgyNHYyNEgwVjB6XCIgLz5cclxuICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMTcgM0g1Yy0xLjExIDAtMiAuOS0yIDJ2MTRjMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWN2wtNC00em0yIDE2SDVWNWgxMS4xN0wxOSA3LjgzVjE5em0tNy03Yy0xLjY2IDAtMyAxLjM0LTMgM3MxLjM0IDMgMyAzIDMtMS4zNCAzLTMtMS4zNC0zLTMtM3pNNiA2aDl2NEg2elwiIC8+XHJcbiAgICAgICAgICAgICAgIDwvc3ZnPjtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ui/icons/save.jsx\n");

/***/ }),

/***/ "./src/ui/modals.js":
/*!**************************!*\
  !*** ./src/ui/modals.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Modals; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass Modals {\n  static get shouldShowAddonErrors() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].get(\"settings\", \"addons\", \"addonErrors\");\n  }\n\n  static get ModalStack() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"push\", \"update\", \"pop\", \"popWithKey\");\n  }\n\n  static get AlertModal() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByPrototypes(\"handleCancel\", \"handleSubmit\", \"handleMinorConfirm\");\n  }\n\n  static get TextElement() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"Sizes\", \"Weights\");\n  }\n\n  static get ConfirmationModal() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getModule(m => m.defaultProps && m.key && m.key() == \"confirm-modal\");\n  }\n\n  static default(title, content) {\n    const backdrop = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"backdrop\") || {\n      backdrop: \"backdrop-1wrmKb\"\n    };\n    const baseModalClasses = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getModule(m => m.modal && m.inner && !m.sizeMedium) || {\n      modal: \"modal-36zFtW\",\n      inner: \"inner-2VEzy9\"\n    };\n    const modalClasses = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"sizeMedium\") || {\n      modal: \"backdrop-1wrmKb\",\n      sizeMedium: \"sizeMedium-ctncE5\",\n      content: \"content-2KoCOZ\",\n      header: \"header-2nhbou\",\n      footer: \"footer-30ewN8\",\n      close: \"close-hhyjWJ\",\n      inner: \"inner-2Z5QZX\"\n    };\n    const modal = modules__WEBPACK_IMPORTED_MODULE_0__[\"Utilities\"].parseHTML(`<div class=\"bd-modal-wrapper theme-dark\">\n                <div class=\"bd-backdrop ${backdrop.backdrop}\"></div>\n                <div class=\"bd-modal ${baseModalClasses.modal}\">\n                    <div class=\"bd-modal-inner ${baseModalClasses.inner}\">\n                        <div class=\"header header-1R_AjF\">\n                            <div class=\"title\">${title}</div>\n                        </div>\n                        <div class=\"bd-modal-body\">\n                            <div class=\"scroller-wrap fade\">\n                                <div class=\"scroller\">\n                                    ${content}\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"footer ${modalClasses.footer}\">\n                            <button type=\"button\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.okay}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>`);\n    modal.querySelector(\".footer button\").addEventListener(\"click\", () => {\n      modal.addClass(\"closing\");\n      setTimeout(() => {\n        modal.remove();\n      }, 300);\n    });\n    modal.querySelector(\".bd-backdrop\").addEventListener(\"click\", () => {\n      modal.addClass(\"closing\");\n      setTimeout(() => {\n        modal.remove();\n      }, 300);\n    });\n    document.querySelector(\"#app-mount\").append(modal);\n  }\n\n  static alert(title, content) {\n    if (this.ModalStack && this.AlertModal) return this.default(title, content);\n    this.ModalStack.push(function (props) {\n      return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(this.AlertModal, Object.assign({\n        title: title,\n        body: content\n      }, props));\n    });\n  }\n  /**\r\n   * Shows a generic but very customizable confirmation modal with optional confirm and cancel callbacks.\r\n   * @param {string} title - title of the modal\r\n   * @param {(string|ReactElement|Array<string|ReactElement>)} children - a single or mixed array of react elements and strings. Everything is wrapped in Discord's `TextElement` component so strings will show and render properly.\r\n   * @param {object} [options] - options to modify the modal\r\n   * @param {boolean} [options.danger=false] - whether the main button should be red or not\r\n   * @param {string} [options.confirmText=Okay] - text for the confirmation/submit button\r\n   * @param {string} [options.cancelText=Cancel] - text for the cancel button\r\n   * @param {callable} [options.onConfirm=NOOP] - callback to occur when clicking the submit button\r\n   * @param {callable} [options.onCancel=NOOP] - callback to occur when clicking the cancel button\r\n   */\n\n\n  static showConfirmationModal(title, content, options = {}) {\n    const TextElement = this.TextElement;\n    const ConfirmationModal = this.ConfirmationModal;\n    const ModalStack = this.ModalStack;\n    if (!this.ModalStack || !this.ConfirmationModal || !this.TextElement) return this.alert(title, content);\n    const {\n      onConfirm,\n      onCancel,\n      confirmText,\n      cancelText,\n      danger = false\n    } = options;\n    if (typeof content == \"string\") content = TextElement.default({\n      color: TextElement.Colors.PRIMARY,\n      children: [content]\n    });else if (Array.isArray(content)) content = TextElement.default({\n      color: TextElement.Colors.PRIMARY,\n      children: content\n    });\n    content = [content];\n\n    const emptyFunction = () => {};\n\n    ModalStack.push(function (props) {\n      return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(ConfirmationModal, Object.assign({\n        header: title,\n        children: content,\n        red: danger,\n        confirmText: confirmText ? confirmText : modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.okay,\n        cancelText: cancelText ? cancelText : modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.cancel,\n        onConfirm: onConfirm ? onConfirm : emptyFunction,\n        onCancel: onCancel ? onCancel : emptyFunction\n      }, props));\n    });\n  }\n\n  static showAddonErrors({\n    plugins: pluginErrors = [],\n    themes: themeErrors = []\n  }) {\n    if (!pluginErrors || !themeErrors || !this.shouldShowAddonErrors) return;\n    if (!pluginErrors.length && !themeErrors.length) return;\n    const backdrop = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"backdrop\") || {\n      backdrop: \"backdrop-1wrmKb\"\n    };\n    const baseModalClasses = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getModule(m => m.modal && m.inner && !m.sizeMedium) || {\n      modal: \"modal-36zFtW\",\n      inner: \"inner-2VEzy9\"\n    };\n    const modalClasses = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"sizeMedium\") || {\n      modal: \"modal-3v8ziU\",\n      sizeMedium: \"sizeMedium-ctncE5\",\n      content: \"content-2KoCOZ\",\n      header: \"header-2nhbou\",\n      footer: \"footer-30ewN8\",\n      close: \"close-hhyjWJ\",\n      inner: \"inner-2Z5QZX\"\n    };\n    const modal = $(`<div class=\"bd-modal-wrapper theme-dark\">\n                        <div class=\"bd-backdrop ${backdrop.backdrop}\"></div>\n                        <div class=\"bd-modal bd-content-modal ${baseModalClasses.modal}\">\n                            <div class=\"bd-modal-inner ${baseModalClasses.inner}\">\n                                <div class=\"header ${modalClasses.header}\"><div class=\"title\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.addonErrors}</div></div>\n                                <div class=\"bd-modal-body\">\n                                    <div class=\"tab-bar-container\">\n                                        <div class=\"tab-bar TOP\">\n                                            <div class=\"tab-bar-item\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Panels.plugins}</div>\n                                            <div class=\"tab-bar-item\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Panels.themes}</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"table-header\">\n                                        <div class=\"table-column column-name\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.name}</div>\n                                        <div class=\"table-column column-message\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.message}</div>\n                                        <div class=\"table-column column-error\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.error}</div>\n                                    </div>\n                                    <div class=\"scroller-wrap fade ${modalClasses.content}\">\n                                        <div class=\"scroller\">\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"footer ${modalClasses.footer}\">\n                                    <button type=\"button\">${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Modals.okay}</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>`);\n\n    const generateTab = function (errors) {\n      const container = $(`<div class=\"errors\">`);\n\n      for (const err of errors) {\n        const error = $(`<div class=\"error\">\n                                    <div class=\"table-column column-name\">${err.name ? err.name : err.file}</div>\n                                    <div class=\"table-column column-message\">${err.message}</div>\n                                    <div class=\"table-column column-error\"><a class=\"error-link\" href=\"\">${err.error ? err.error.message : \"\"}</a></div>\n                                </div>`);\n        container.append(error);\n\n        if (err.error) {\n          error.find(\"a\").on(\"click\", e => {\n            e.preventDefault();\n            modules__WEBPACK_IMPORTED_MODULE_0__[\"Logger\"].stacktrace(\"AddonError\", `Error details for ${err.name ? err.name : err.file}.`, err.error);\n          });\n        }\n      }\n\n      return container;\n    };\n\n    const tabs = [generateTab(pluginErrors), generateTab(themeErrors)];\n    modal.find(\".tab-bar-item\").on(\"click\", e => {\n      e.preventDefault();\n      modal.find(\".tab-bar-item\").removeClass(\"selected\");\n      $(e.target).addClass(\"selected\");\n      modal.find(\".scroller\").empty().append(tabs[$(e.target).index()]);\n    });\n    modal.find(\".footer button\").on(\"click\", () => {\n      modal.addClass(\"closing\");\n      setTimeout(() => {\n        modal.remove();\n      }, 300);\n    });\n    modal.find(\".bd-backdrop\").on(\"click\", () => {\n      modal.addClass(\"closing\");\n      setTimeout(() => {\n        modal.remove();\n      }, 300);\n    });\n    modal.appendTo(\"#app-mount\");\n    if (pluginErrors.length) modal.find(\".tab-bar-item\")[0].click();else modal.find(\".tab-bar-item\")[1].click();\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/modals.js\n");

/***/ }),

/***/ "./src/ui/publicservers/card.jsx":
/*!***************************************!*\
  !*** ./src/ui/publicservers/card.jsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ServerCard; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass ServerCard extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    if (!this.props.server.iconUrl) this.props.server.iconUrl = this.props.defaultAvatar();\n    this.state = {\n      imageError: false,\n      joined: this.props.joined\n    };\n    this.join = this.join.bind(this);\n    this.handleError = this.handleError.bind(this);\n  }\n\n  render() {\n    const {\n      server\n    } = this.props;\n    const buttonText = typeof this.state.joined == \"string\" ? `${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.joining}...` : this.state.joined ? modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.joined : modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.join;\n    const buttonClass = `bd-button${this.state.joined == true ? \" bd-button-success\" : \"\"}`;\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: `bd-server-card${server.pinned ? \" bd-server-card-pinned\" : \"\"}`\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"img\", {\n      className: \"bd-server-image\",\n      src: server.iconUrl,\n      onError: this.handleError\n    }), \",\", modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-server-content\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-server-header\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"h5\", {\n      className: \"bd-server-name\"\n    }, server.name), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"h5\", {\n      className: \"bd-server-member-count\"\n    }, server.members, \" Members\")), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-scroller-wrap bd-server-description-container\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-scroller bd-server-description\"\n    }, server.description)), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-server-footer\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-server-tags\"\n    }, server.categories.join(\", \")), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"button\", {\n      type: \"button\",\n      className: buttonClass,\n      onClick: this.join\n    }, buttonText))));\n  }\n\n  handleError() {\n    this.props.server.iconUrl = this.props.defaultAvatar();\n    this.setState({\n      imageError: true\n    });\n  }\n\n  async join() {\n    if (this.state.joined) return;\n    this.setState({\n      joined: \"joining\"\n    });\n    const didJoin = await this.props.join(this.props.server.identifier, this.props.server.nativejoin);\n    this.setState({\n      joined: didJoin\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3B1YmxpY3NlcnZlcnMvY2FyZC5qc3g/NzYwMiJdLCJuYW1lcyI6WyJTZXJ2ZXJDYXJkIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwic2VydmVyIiwiaWNvblVybCIsImRlZmF1bHRBdmF0YXIiLCJzdGF0ZSIsImltYWdlRXJyb3IiLCJqb2luZWQiLCJqb2luIiwiYmluZCIsImhhbmRsZUVycm9yIiwicmVuZGVyIiwiYnV0dG9uVGV4dCIsIlN0cmluZ3MiLCJQdWJsaWNTZXJ2ZXJzIiwiam9pbmluZyIsImJ1dHRvbkNsYXNzIiwicGlubmVkIiwibmFtZSIsIm1lbWJlcnMiLCJkZXNjcmlwdGlvbiIsImNhdGVnb3JpZXMiLCJzZXRTdGF0ZSIsImRpZEpvaW4iLCJpZGVudGlmaWVyIiwibmF0aXZlam9pbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFFZSxNQUFNQSxVQUFOLFNBQXlCQyw2Q0FBSyxDQUFDQyxTQUEvQixDQUF5QztBQUNwREMsYUFBVyxDQUFDQyxLQUFELEVBQVE7QUFDZixVQUFNQSxLQUFOO0FBQ0EsUUFBSSxDQUFDLEtBQUtBLEtBQUwsQ0FBV0MsTUFBWCxDQUFrQkMsT0FBdkIsRUFBZ0MsS0FBS0YsS0FBTCxDQUFXQyxNQUFYLENBQWtCQyxPQUFsQixHQUE0QixLQUFLRixLQUFMLENBQVdHLGFBQVgsRUFBNUI7QUFDaEMsU0FBS0MsS0FBTCxHQUFhO0FBQ1RDLGdCQUFVLEVBQUUsS0FESDtBQUVUQyxZQUFNLEVBQUUsS0FBS04sS0FBTCxDQUFXTTtBQUZWLEtBQWI7QUFJQSxTQUFLQyxJQUFMLEdBQVksS0FBS0EsSUFBTCxDQUFVQyxJQUFWLENBQWUsSUFBZixDQUFaO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLENBQWlCRCxJQUFqQixDQUFzQixJQUF0QixDQUFuQjtBQUNIOztBQUVERSxRQUFNLEdBQUc7QUFDTCxVQUFNO0FBQUNUO0FBQUQsUUFBVyxLQUFLRCxLQUF0QjtBQUNBLFVBQU1XLFVBQVUsR0FBRyxPQUFPLEtBQUtQLEtBQUwsQ0FBV0UsTUFBbEIsSUFBNkIsUUFBN0IsR0FBeUMsR0FBRU0sK0NBQU8sQ0FBQ0MsYUFBUixDQUFzQkMsT0FBUSxLQUF6RSxHQUFnRixLQUFLVixLQUFMLENBQVdFLE1BQVgsR0FBb0JNLCtDQUFPLENBQUNDLGFBQVIsQ0FBc0JQLE1BQTFDLEdBQW1ETSwrQ0FBTyxDQUFDQyxhQUFSLENBQXNCTixJQUE1SztBQUNBLFVBQU1RLFdBQVcsR0FBSSxZQUFXLEtBQUtYLEtBQUwsQ0FBV0UsTUFBWCxJQUFxQixJQUFyQixHQUE0QixvQkFBNUIsR0FBbUQsRUFBRyxFQUF0RjtBQUNBLFdBQU87QUFBSyxlQUFTLEVBQUcsaUJBQWdCTCxNQUFNLENBQUNlLE1BQVAsR0FBZ0Isd0JBQWhCLEdBQTJDLEVBQUc7QUFBL0UsT0FDQztBQUFLLGVBQVMsRUFBQyxpQkFBZjtBQUFpQyxTQUFHLEVBQUVmLE1BQU0sQ0FBQ0MsT0FBN0M7QUFBc0QsYUFBTyxFQUFFLEtBQUtPO0FBQXBFLE1BREQsT0FFQztBQUFLLGVBQVMsRUFBQztBQUFmLE9BQ0k7QUFBSyxlQUFTLEVBQUM7QUFBZixPQUNJO0FBQUksZUFBUyxFQUFDO0FBQWQsT0FBZ0NSLE1BQU0sQ0FBQ2dCLElBQXZDLENBREosRUFFSTtBQUFJLGVBQVMsRUFBQztBQUFkLE9BQXdDaEIsTUFBTSxDQUFDaUIsT0FBL0MsYUFGSixDQURKLEVBS0k7QUFBSyxlQUFTLEVBQUM7QUFBZixPQUNJO0FBQUssZUFBUyxFQUFDO0FBQWYsT0FBb0RqQixNQUFNLENBQUNrQixXQUEzRCxDQURKLENBTEosRUFRSTtBQUFLLGVBQVMsRUFBQztBQUFmLE9BQ0k7QUFBSyxlQUFTLEVBQUM7QUFBZixPQUFpQ2xCLE1BQU0sQ0FBQ21CLFVBQVAsQ0FBa0JiLElBQWxCLENBQXVCLElBQXZCLENBQWpDLENBREosRUFFSTtBQUFRLFVBQUksRUFBQyxRQUFiO0FBQXNCLGVBQVMsRUFBRVEsV0FBakM7QUFBOEMsYUFBTyxFQUFFLEtBQUtSO0FBQTVELE9BQW1FSSxVQUFuRSxDQUZKLENBUkosQ0FGRCxDQUFQO0FBZ0JIOztBQUVERixhQUFXLEdBQUc7QUFDVixTQUFLVCxLQUFMLENBQVdDLE1BQVgsQ0FBa0JDLE9BQWxCLEdBQTRCLEtBQUtGLEtBQUwsQ0FBV0csYUFBWCxFQUE1QjtBQUNBLFNBQUtrQixRQUFMLENBQWM7QUFBQ2hCLGdCQUFVLEVBQUU7QUFBYixLQUFkO0FBQ0g7O0FBRUQsUUFBTUUsSUFBTixHQUFhO0FBQ1QsUUFBSSxLQUFLSCxLQUFMLENBQVdFLE1BQWYsRUFBdUI7QUFDdkIsU0FBS2UsUUFBTCxDQUFjO0FBQUNmLFlBQU0sRUFBRTtBQUFULEtBQWQ7QUFDQSxVQUFNZ0IsT0FBTyxHQUFHLE1BQU0sS0FBS3RCLEtBQUwsQ0FBV08sSUFBWCxDQUFnQixLQUFLUCxLQUFMLENBQVdDLE1BQVgsQ0FBa0JzQixVQUFsQyxFQUE4QyxLQUFLdkIsS0FBTCxDQUFXQyxNQUFYLENBQWtCdUIsVUFBaEUsQ0FBdEI7QUFDQSxTQUFLSCxRQUFMLENBQWM7QUFBQ2YsWUFBTSxFQUFFZ0I7QUFBVCxLQUFkO0FBQ0g7O0FBNUNtRCIsImZpbGUiOiIuL3NyYy91aS9wdWJsaWNzZXJ2ZXJzL2NhcmQuanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZWFjdCwgU3RyaW5nc30gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlcnZlckNhcmQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcbiAgICAgICAgaWYgKCF0aGlzLnByb3BzLnNlcnZlci5pY29uVXJsKSB0aGlzLnByb3BzLnNlcnZlci5pY29uVXJsID0gdGhpcy5wcm9wcy5kZWZhdWx0QXZhdGFyKCk7XHJcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcclxuICAgICAgICAgICAgaW1hZ2VFcnJvcjogZmFsc2UsXHJcbiAgICAgICAgICAgIGpvaW5lZDogdGhpcy5wcm9wcy5qb2luZWRcclxuICAgICAgICB9O1xyXG4gICAgICAgIHRoaXMuam9pbiA9IHRoaXMuam9pbi5iaW5kKHRoaXMpO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlRXJyb3IgPSB0aGlzLmhhbmRsZUVycm9yLmJpbmQodGhpcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IHtzZXJ2ZXJ9ID0gdGhpcy5wcm9wcztcclxuICAgICAgICBjb25zdCBidXR0b25UZXh0ID0gdHlwZW9mKHRoaXMuc3RhdGUuam9pbmVkKSA9PSBcInN0cmluZ1wiID8gYCR7U3RyaW5ncy5QdWJsaWNTZXJ2ZXJzLmpvaW5pbmd9Li4uYCA6IHRoaXMuc3RhdGUuam9pbmVkID8gU3RyaW5ncy5QdWJsaWNTZXJ2ZXJzLmpvaW5lZCA6IFN0cmluZ3MuUHVibGljU2VydmVycy5qb2luO1xyXG4gICAgICAgIGNvbnN0IGJ1dHRvbkNsYXNzID0gYGJkLWJ1dHRvbiR7dGhpcy5zdGF0ZS5qb2luZWQgPT0gdHJ1ZSA/IFwiIGJkLWJ1dHRvbi1zdWNjZXNzXCIgOiBcIlwifWA7XHJcbiAgICAgICAgcmV0dXJuIDxkaXYgY2xhc3NOYW1lPXtgYmQtc2VydmVyLWNhcmQke3NlcnZlci5waW5uZWQgPyBcIiBiZC1zZXJ2ZXItY2FyZC1waW5uZWRcIiA6IFwiXCJ9YH0+XHJcbiAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT1cImJkLXNlcnZlci1pbWFnZVwiIHNyYz17c2VydmVyLmljb25Vcmx9IG9uRXJyb3I9e3RoaXMuaGFuZGxlRXJyb3J9IC8+LFxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZC1zZXJ2ZXItY29udGVudFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmQtc2VydmVyLWhlYWRlclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3NOYW1lPVwiYmQtc2VydmVyLW5hbWVcIj57c2VydmVyLm5hbWV9PC9oNT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGg1IGNsYXNzTmFtZT1cImJkLXNlcnZlci1tZW1iZXItY291bnRcIj57c2VydmVyLm1lbWJlcnN9IE1lbWJlcnM8L2g1PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJkLXNjcm9sbGVyLXdyYXAgYmQtc2VydmVyLWRlc2NyaXB0aW9uLWNvbnRhaW5lclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJkLXNjcm9sbGVyIGJkLXNlcnZlci1kZXNjcmlwdGlvblwiPntzZXJ2ZXIuZGVzY3JpcHRpb259PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZC1zZXJ2ZXItZm9vdGVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYmQtc2VydmVyLXRhZ3NcIj57c2VydmVyLmNhdGVnb3JpZXMuam9pbihcIiwgXCIpfTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzc05hbWU9e2J1dHRvbkNsYXNzfSBvbkNsaWNrPXt0aGlzLmpvaW59PntidXR0b25UZXh0fTwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PjtcclxuICAgIH1cclxuXHJcbiAgICBoYW5kbGVFcnJvcigpIHtcclxuICAgICAgICB0aGlzLnByb3BzLnNlcnZlci5pY29uVXJsID0gdGhpcy5wcm9wcy5kZWZhdWx0QXZhdGFyKCk7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7aW1hZ2VFcnJvcjogdHJ1ZX0pO1xyXG4gICAgfVxyXG5cclxuICAgIGFzeW5jIGpvaW4oKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuam9pbmVkKSByZXR1cm47XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7am9pbmVkOiBcImpvaW5pbmdcIn0pO1xyXG4gICAgICAgIGNvbnN0IGRpZEpvaW4gPSBhd2FpdCB0aGlzLnByb3BzLmpvaW4odGhpcy5wcm9wcy5zZXJ2ZXIuaWRlbnRpZmllciwgdGhpcy5wcm9wcy5zZXJ2ZXIubmF0aXZlam9pbik7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7am9pbmVkOiBkaWRKb2lufSk7XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/publicservers/card.jsx\n");

/***/ }),

/***/ "./src/ui/publicservers/menu.js":
/*!**************************************!*\
  !*** ./src/ui/publicservers/menu.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return PublicServers; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _settings_title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../settings/title */ \"./src/ui/settings/title.jsx\");\n/* harmony import */ var _card__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./card */ \"./src/ui/publicservers/card.jsx\");\n/* harmony import */ var _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../structs/psconnection */ \"./src/structs/psconnection.js\");\n\n\n\n\nconst SettingsView = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByDisplayName(\"SettingsView\");\nclass PublicServers extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  get categoryButtons() {\n    return [\"All\", \"FPS Games\", \"MMO Games\", \"Strategy Games\", \"MOBA Games\", \"RPG Games\", \"Tabletop Games\", \"Sandbox Games\", \"Simulation Games\", \"Music\", \"Community\", \"Language\", \"Programming\", \"Other\"];\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: \"All\",\n      query: \"\",\n      loading: true,\n      user: null,\n      results: {\n        servers: [],\n        size: 0,\n        from: 0,\n        total: 0,\n        next: null\n      }\n    };\n    this.changeCategory = this.changeCategory.bind(this);\n    this.searchKeyDown = this.searchKeyDown.bind(this);\n    this.connect = this.connect.bind(this);\n    this.loadNextPage = this.loadNextPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.checkConnection();\n  }\n\n  async checkConnection() {\n    const userData = await _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].checkConnection();\n\n    if (!userData) {\n      return this.setState({\n        loading: true,\n        user: null\n      });\n    }\n\n    this.setState({\n      user: userData\n    });\n    this.search();\n  }\n\n  async connect() {\n    await _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].connect();\n    this.checkConnection();\n  }\n\n  searchKeyDown(e) {\n    if (this.state.loading || e.which !== 13) return;\n    this.search(e.target.value);\n  }\n\n  async search(term = \"\", from = 0) {\n    this.setState({\n      query: term,\n      loading: true\n    });\n    const results = await _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].search({\n      term,\n      category: this.state.category == \"All\" ? \"\" : this.state.category,\n      from\n    });\n\n    if (!results) {\n      return this.setState({\n        results: {\n          servers: [],\n          size: 0,\n          from: 0,\n          total: 0,\n          next: null\n        }\n      });\n    }\n\n    this.setState({\n      loading: false,\n      results\n    });\n  }\n\n  async changeCategory(id) {\n    if (this.state.loading) return;\n    await new Promise(resolve => this.setState({\n      category: id\n    }, resolve));\n    this.search();\n  }\n\n  loadNextPage() {\n    if (this.state.loading) return;\n    this.search(this.state.query, this.state.results.next);\n  }\n\n  async join(id, native = false) {\n    return await _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].join(id, native);\n  }\n\n  get searchBox() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"input\", {\n      onKeyDown: this.searchKeyDown,\n      type: \"text\",\n      className: \"bd-search\",\n      placeholder: `${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.search}...`,\n      maxLength: \"50\"\n    });\n  }\n\n  get title() {\n    if (!this.state.user) return modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.notConnected;\n    if (this.state.loading) return `${modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.loading}...`;\n    const start = this.state.results.from + 1;\n    const total = this.state.results.total;\n    const end = this.state.results.next ? this.state.results.next : total;\n    let title = modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.results.format({\n      start,\n      end,\n      total,\n      category: this.state.category\n    });\n    if (this.state.query) title += \" \" + modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.query.format({\n      query: this.state.query\n    });\n    return title;\n  }\n\n  get content() {\n    const connectButton = this.state.user ? null : {\n      title: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.connect,\n      onClick: this.connect\n    };\n    const pinned = this.state.category == \"All\" || !this.state.user ? this.bdServer : null;\n    const servers = this.state.results.servers.map(server => {\n      return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_card__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        key: server.identifier,\n        server: server,\n        joined: _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].hasJoined(server.identifier),\n        defaultAvatar: _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getDefaultAvatar\n      });\n    });\n    return [modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_settings_title__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      text: this.title,\n      button: connectButton\n    }), pinned, servers, this.state.results.next ? this.nextButton : null, this.state.results.servers.length > 0 && modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_settings_title__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      text: this.title\n    })];\n  }\n\n  get nextButton() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"button\", {\n      type: \"button\",\n      className: \"bd-button bd-button-next\",\n      onClick: this.loadNextPage\n    }, this.state.loading ? modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.loading : modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.loadMore);\n  }\n\n  get connection() {\n    const {\n      user\n    } = this.state;\n    if (!user) return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      id: \"bd-connection\"\n    });\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      id: \"bd-connection\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-footnote\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.connection.format(user)), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"button\", {\n      type: \"button\",\n      className: \"bd-button bd-button-reconnect\",\n      onClick: this.connect\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.reconnect));\n  }\n\n  get bdServer() {\n    const server = {\n      name: \"BetterDiscord\",\n      online: \"7500+\",\n      members: \"20000+\",\n      categories: [\"community\", \"programming\", \"support\"],\n      description: \"Official BetterDiscord server for plugins, themes, support, etc\",\n      identifier: \"86004744966914048\",\n      iconUrl: \"https://cdn.discordapp.com/icons/86004744966914048/292e7f6bfff2b71dfd13e508a859aedd.webp\",\n      nativejoin: true,\n      invite_code: \"0Tmfo5ZbORCRqbAd\",\n      pinned: true\n    };\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_card__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      server: server,\n      pinned: true,\n      joined: _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].hasJoined(server.identifier),\n      defaultAvatar: _structs_psconnection__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getDefaultAvatar\n    });\n  }\n\n  render() {\n    const categories = this.categoryButtons.map(name => ({\n      section: name,\n      label: name,\n      element: () => this.content\n    }));\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(SettingsView, {\n      onClose: this.props.close,\n      onSetSection: this.changeCategory,\n      section: this.state.category,\n      sections: [{\n        section: \"HEADER\",\n        label: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.search\n      }, {\n        section: \"CUSTOM\",\n        element: () => this.searchBox\n      }, {\n        section: \"HEADER\",\n        label: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].PublicServers.categories\n      }, ...categories, {\n        section: \"DIVIDER\"\n      }, {\n        section: \"HEADER\",\n        label: modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"a\", {\n          href: \"https://discordservers.com\",\n          target: \"_blank\"\n        }, \"DiscordServers.com\")\n      }, {\n        section: \"DIVIDER\"\n      }, {\n        section: \"CUSTOM\",\n        element: () => this.connection\n      }],\n      theme: \"dark\"\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/publicservers/menu.js\n");

/***/ }),

/***/ "./src/ui/settings.js":
/*!****************************!*\
  !*** ./src/ui/settings.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _settings_addonlist__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings/addonlist */ \"./src/ui/settings/addonlist.jsx\");\n/* harmony import */ var _settings_group__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings/group */ \"./src/ui/settings/group.jsx\");\n/* harmony import */ var _settings_title__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settings/title */ \"./src/ui/settings/title.jsx\");\n/* harmony import */ var _settings_attribution__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./settings/attribution */ \"./src/ui/settings/attribution.jsx\");\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (new class SettingsRenderer {\n  constructor() {\n    this.patchSections();\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Events\"].on(\"strings-updated\", this.forceUpdate);\n  }\n\n  onChange(onChange) {\n    return (collection, category, id) => {\n      const before = modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].collections.length + modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].panels.length;\n      onChange(collection, category, id);\n      const after = modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].collections.length + modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].panels.length;\n      if (before != after) setTimeout(this.forceUpdate.bind(this), 50);\n    };\n  }\n\n  buildSettingsPanel(title, config, state, onChange, button = null) {\n    config.forEach(section => {\n      section.settings.forEach(item => item.value = state[section.id][item.id]);\n    });\n    return this.getSettingsPanel(title, config, this.onChange(onChange), button);\n  }\n\n  getSettingsPanel(title, groups, onChange, button = null) {\n    return [modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_settings_title__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n      text: title,\n      button: button\n    }), groups.map(section => {\n      return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_settings_group__WEBPACK_IMPORTED_MODULE_2__[\"default\"], Object.assign({}, section, {\n        onChange\n      }));\n    })];\n  }\n\n  getAddonPanel(title, addonList, addonState, options = {}) {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_settings_addonlist__WEBPACK_IMPORTED_MODULE_1__[\"default\"], Object.assign({}, {\n      title: title,\n      addonList: addonList,\n      addonState: addonState\n    }, options));\n  }\n\n  async patchSections() {\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Patcher\"].after(\"SettingsManager\", modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByDisplayName(\"FluxContainer(GuildSettings)\").prototype, \"render\", thisObject => {\n      thisObject._reactInternalFiber.return.return.return.return.return.return.memoizedProps.id = \"guild-settings\";\n    });\n    const UserSettings = await modules__WEBPACK_IMPORTED_MODULE_0__[\"ReactComponents\"].get(\"UserSettings\", m => m.prototype && m.prototype.generateSections);\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Patcher\"].after(\"SettingsManager\", UserSettings.prototype, \"render\", thisObject => {\n      thisObject._reactInternalFiber.return.return.return.return.return.return.return.memoizedProps.id = \"user-settings\";\n    });\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Patcher\"].after(\"SettingsManager\", UserSettings.prototype, \"generateSections\", (thisObject, args, returnValue) => {\n      let location = returnValue.findIndex(s => s.section.toLowerCase() == \"linux\") + 1;\n\n      const insert = section => {\n        returnValue.splice(location, 0, section);\n        location++;\n      };\n\n      insert({\n        section: \"DIVIDER\"\n      });\n      insert({\n        section: \"HEADER\",\n        label: \"BandagedBD\"\n      });\n\n      for (const collection of modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].collections) {\n        if (collection.disabled) continue;\n        insert({\n          section: collection.name,\n          label: collection.name,\n          element: () => this.buildSettingsPanel(collection.name, collection.settings, modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].state[collection.id], modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].onSettingChange.bind(modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"], collection.id), collection.button ? collection.button : null)\n        });\n      }\n\n      for (const panel of modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].panels.sort((a, b) => a.order > b.order)) {\n        if (panel.clickListener) panel.onClick = event => panel.clickListener(thisObject, event, returnValue);\n        insert(panel);\n      }\n\n      insert({\n        section: \"CUSTOM\",\n        element: _settings_attribution__WEBPACK_IMPORTED_MODULE_4__[\"default\"]\n      });\n    });\n    this.forceUpdate();\n  }\n\n  forceUpdate() {\n    const viewClass = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"standardSidebarView\").standardSidebarView.split(\" \")[0];\n    const node = document.querySelector(`.${viewClass}`);\n    if (!node) return;\n    modules__WEBPACK_IMPORTED_MODULE_0__[\"Utilities\"].getReactInstance(node).return.return.return.return.return.return.stateNode.forceUpdate();\n    const stateNode = modules__WEBPACK_IMPORTED_MODULE_0__[\"Utilities\"].findInReactTree(modules__WEBPACK_IMPORTED_MODULE_0__[\"Utilities\"].getReactInstance(node), m => m && m.generateSections, {\n      walkable: [\"return\", \"stateNode\"]\n    });\n    if (stateNode) stateNode.forceUpdate();\n  }\n\n}());//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3NldHRpbmdzLmpzPzc2YmUiXSwibmFtZXMiOlsiU2V0dGluZ3NSZW5kZXJlciIsImNvbnN0cnVjdG9yIiwicGF0Y2hTZWN0aW9ucyIsIkV2ZW50cyIsIm9uIiwiZm9yY2VVcGRhdGUiLCJvbkNoYW5nZSIsImNvbGxlY3Rpb24iLCJjYXRlZ29yeSIsImlkIiwiYmVmb3JlIiwiU2V0dGluZ3MiLCJjb2xsZWN0aW9ucyIsImxlbmd0aCIsInBhbmVscyIsImFmdGVyIiwic2V0VGltZW91dCIsImJpbmQiLCJidWlsZFNldHRpbmdzUGFuZWwiLCJ0aXRsZSIsImNvbmZpZyIsInN0YXRlIiwiYnV0dG9uIiwiZm9yRWFjaCIsInNlY3Rpb24iLCJzZXR0aW5ncyIsIml0ZW0iLCJ2YWx1ZSIsImdldFNldHRpbmdzUGFuZWwiLCJncm91cHMiLCJSZWFjdCIsImNyZWF0ZUVsZW1lbnQiLCJTZXR0aW5nc1RpdGxlIiwidGV4dCIsIm1hcCIsIlNldHRpbmdzR3JvdXAiLCJPYmplY3QiLCJhc3NpZ24iLCJnZXRBZGRvblBhbmVsIiwiYWRkb25MaXN0IiwiYWRkb25TdGF0ZSIsIm9wdGlvbnMiLCJBZGRvbkxpc3QiLCJQYXRjaGVyIiwiV2VicGFja01vZHVsZXMiLCJnZXRCeURpc3BsYXlOYW1lIiwicHJvdG90eXBlIiwidGhpc09iamVjdCIsIl9yZWFjdEludGVybmFsRmliZXIiLCJyZXR1cm4iLCJtZW1vaXplZFByb3BzIiwiVXNlclNldHRpbmdzIiwiUmVhY3RDb21wb25lbnRzIiwiZ2V0IiwibSIsImdlbmVyYXRlU2VjdGlvbnMiLCJhcmdzIiwicmV0dXJuVmFsdWUiLCJsb2NhdGlvbiIsImZpbmRJbmRleCIsInMiLCJ0b0xvd2VyQ2FzZSIsImluc2VydCIsInNwbGljZSIsImxhYmVsIiwiZGlzYWJsZWQiLCJuYW1lIiwiZWxlbWVudCIsIm9uU2V0dGluZ0NoYW5nZSIsInBhbmVsIiwic29ydCIsImEiLCJiIiwib3JkZXIiLCJjbGlja0xpc3RlbmVyIiwib25DbGljayIsImV2ZW50IiwiQXR0cmlidXRpb24iLCJ2aWV3Q2xhc3MiLCJnZXRCeVByb3BzIiwic3RhbmRhcmRTaWRlYmFyVmlldyIsInNwbGl0Iiwibm9kZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIlV0aWxpdGllcyIsImdldFJlYWN0SW5zdGFuY2UiLCJzdGF0ZU5vZGUiLCJmaW5kSW5SZWFjdFRyZWUiLCJ3YWxrYWJsZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVlLG1FQUFJLE1BQU1BLGdCQUFOLENBQXVCO0FBRXRDQyxhQUFXLEdBQUc7QUFDVixTQUFLQyxhQUFMO0FBQ0FDLGtEQUFNLENBQUNDLEVBQVAsQ0FBVSxpQkFBVixFQUE2QixLQUFLQyxXQUFsQztBQUNIOztBQUVEQyxVQUFRLENBQUNBLFFBQUQsRUFBVztBQUNmLFdBQU8sQ0FBQ0MsVUFBRCxFQUFhQyxRQUFiLEVBQXVCQyxFQUF2QixLQUE4QjtBQUNqQyxZQUFNQyxNQUFNLEdBQUdDLGdEQUFRLENBQUNDLFdBQVQsQ0FBcUJDLE1BQXJCLEdBQThCRixnREFBUSxDQUFDRyxNQUFULENBQWdCRCxNQUE3RDtBQUNBUCxjQUFRLENBQUNDLFVBQUQsRUFBYUMsUUFBYixFQUF1QkMsRUFBdkIsQ0FBUjtBQUNBLFlBQU1NLEtBQUssR0FBR0osZ0RBQVEsQ0FBQ0MsV0FBVCxDQUFxQkMsTUFBckIsR0FBOEJGLGdEQUFRLENBQUNHLE1BQVQsQ0FBZ0JELE1BQTVEO0FBQ0EsVUFBSUgsTUFBTSxJQUFJSyxLQUFkLEVBQXFCQyxVQUFVLENBQUMsS0FBS1gsV0FBTCxDQUFpQlksSUFBakIsQ0FBc0IsSUFBdEIsQ0FBRCxFQUE4QixFQUE5QixDQUFWO0FBQ3hCLEtBTEQ7QUFNSDs7QUFFREMsb0JBQWtCLENBQUNDLEtBQUQsRUFBUUMsTUFBUixFQUFnQkMsS0FBaEIsRUFBdUJmLFFBQXZCLEVBQWlDZ0IsTUFBTSxHQUFH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QUFlQSxTQUFTLENBQUNsRixXQUFWO0FBQ2xCOztBQTdFcUMsQ0FBM0IsRUFBZiIsImZpbGUiOiIuL3NyYy91aS9zZXR0aW5ncy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVhY3QsIFdlYnBhY2tNb2R1bGVzLCBQYXRjaGVyLCBSZWFjdENvbXBvbmVudHMsIFV0aWxpdGllcywgU2V0dGluZ3MsIEV2ZW50c30gZnJvbSBcIm1vZHVsZXNcIjtcclxuXHJcbmltcG9ydCBBZGRvbkxpc3QgZnJvbSBcIi4vc2V0dGluZ3MvYWRkb25saXN0XCI7XHJcbmltcG9ydCBTZXR0aW5nc0dyb3VwIGZyb20gXCIuL3NldHRpbmdzL2dyb3VwXCI7XHJcbmltcG9ydCBTZXR0aW5nc1RpdGxlIGZyb20gXCIuL3NldHRpbmdzL3RpdGxlXCI7XHJcbmltcG9ydCBBdHRyaWJ1dGlvbiBmcm9tIFwiLi9zZXR0aW5ncy9hdHRyaWJ1dGlvblwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgbmV3IGNsYXNzIFNldHRpbmdzUmVuZGVyZXIge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMucGF0Y2hTZWN0aW9ucygpO1xyXG4gICAgICAgIEV2ZW50cy5vbihcInN0cmluZ3MtdXBkYXRlZFwiLCB0aGlzLmZvcmNlVXBkYXRlKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNoYW5nZShvbkNoYW5nZSkge1xyXG4gICAgICAgIHJldHVybiAoY29sbGVjdGlvbiwgY2F0ZWdvcnksIGlkKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJlZm9yZSA9IFNldHRpbmdzLmNvbGxlY3Rpb25zLmxlbmd0aCArIFNldHRpbmdzLnBhbmVscy5sZW5ndGg7XHJcbiAgICAgICAgICAgIG9uQ2hhbmdlKGNvbGxlY3Rpb24sIGNhdGVnb3J5LCBpZCk7XHJcbiAgICAgICAgICAgIGNvbnN0IGFmdGVyID0gU2V0dGluZ3MuY29sbGVjdGlvbnMubGVuZ3RoICsgU2V0dGluZ3MucGFuZWxzLmxlbmd0aDtcclxuICAgICAgICAgICAgaWYgKGJlZm9yZSAhPSBhZnRlcikgc2V0VGltZW91dCh0aGlzLmZvcmNlVXBkYXRlLmJpbmQodGhpcyksIDUwKTtcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIGJ1aWxkU2V0dGluZ3NQYW5lbCh0aXRsZSwgY29uZmlnLCBzdGF0ZSwgb25DaGFuZ2UsIGJ1dHRvbiA9IG51bGwpIHtcclxuICAgICAgICBjb25maWcuZm9yRWFjaChzZWN0aW9uID0+IHtcclxuICAgICAgICAgICAgc2VjdGlvbi5zZXR0aW5ncy5mb3JFYWNoKGl0ZW0gPT4gaXRlbS52YWx1ZSA9IHN0YXRlW3NlY3Rpb24uaWRdW2l0ZW0uaWRdKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICByZXR1cm4gdGhpcy5nZXRTZXR0aW5nc1BhbmVsKHRpdGxlLCBjb25maWcsIHRoaXMub25DaGFuZ2Uob25DaGFuZ2UpLCBidXR0b24pO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFNldHRpbmdzUGFuZWwodGl0bGUsIGdyb3Vwcywgb25DaGFuZ2UsIGJ1dHRvbiA9IG51bGwpIHtcclxuICAgICAgICByZXR1cm4gW1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dGluZ3NUaXRsZSwge3RleHQ6IHRpdGxlLCBidXR0b246IGJ1dHRvbn0pLCBncm91cHMubWFwKHNlY3Rpb24gPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTZXR0aW5nc0dyb3VwLCBPYmplY3QuYXNzaWduKHt9LCBzZWN0aW9uLCB7b25DaGFuZ2V9KSk7XHJcbiAgICAgICAgfSldO1xyXG4gICAgfVxyXG5cclxuICAgIGdldEFkZG9uUGFuZWwodGl0bGUsIGFkZG9uTGlzdCwgYWRkb25TdGF0ZSwgb3B0aW9ucyA9IHt9KSB7XHJcbiAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQWRkb25MaXN0LCBPYmplY3QuYXNzaWduKHt9LCB7XHJcbiAgICAgICAgICAgIHRpdGxlOiB0aXRsZSxcclxuICAgICAgICAgICAgYWRkb25MaXN0OiBhZGRvbkxpc3QsXHJcbiAgICAgICAgICAgIGFkZG9uU3RhdGU6IGFkZG9uU3RhdGVcclxuICAgICAgICB9LCBvcHRpb25zKSk7XHJcbiAgICB9XHJcblxyXG4gICAgYXN5bmMgcGF0Y2hTZWN0aW9ucygpIHtcclxuICAgICAgICBQYXRjaGVyLmFmdGVyKFwiU2V0dGluZ3NNYW5hZ2VyXCIsIFdlYnBhY2tNb2R1bGVzLmdldEJ5RGlzcGxheU5hbWUoXCJGbHV4Q29udGFpbmVyKEd1aWxkU2V0dGluZ3MpXCIpLnByb3RvdHlwZSwgXCJyZW5kZXJcIiwgKHRoaXNPYmplY3QpID0+IHtcclxuICAgICAgICAgICAgdGhpc09iamVjdC5fcmVhY3RJbnRlcm5hbEZpYmVyLnJldHVybi5yZXR1cm4ucmV0dXJuLnJldHVybi5yZXR1cm4ucmV0dXJuLm1lbW9pemVkUHJvcHMuaWQgPSBcImd1aWxkLXNldHRpbmdzXCI7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgY29uc3QgVXNlclNldHRpbmdzID0gYXdhaXQgUmVhY3RDb21wb25lbnRzLmdldChcIlVzZXJTZXR0aW5nc1wiLCBtID0+IG0ucHJvdG90eXBlICYmIG0ucHJvdG90eXBlLmdlbmVyYXRlU2VjdGlvbnMpO1xyXG4gICAgICAgIFBhdGNoZXIuYWZ0ZXIoXCJTZXR0aW5nc01hbmFnZXJcIiwgVXNlclNldHRpbmdzLnByb3RvdHlwZSwgXCJyZW5kZXJcIiwgKHRoaXNPYmplY3QpID0+IHtcclxuICAgICAgICAgICAgdGhpc09iamVjdC5fcmVhY3RJbnRlcm5hbEZpYmVyLnJldHVybi5yZXR1cm4ucmV0dXJuLnJldHVybi5yZXR1cm4ucmV0dXJuLnJldHVybi5tZW1vaXplZFByb3BzLmlkID0gXCJ1c2VyLXNldHRpbmdzXCI7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgUGF0Y2hlci5hZnRlcihcIlNldHRpbmdzTWFuYWdlclwiLCBVc2VyU2V0dGluZ3MucHJvdG90eXBlLCBcImdlbmVyYXRlU2VjdGlvbnNcIiwgKHRoaXNPYmplY3QsIGFyZ3MsIHJldHVyblZhbHVlKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBsb2NhdGlvbiA9IHJldHVyblZhbHVlLmZpbmRJbmRleChzID0+IHMuc2VjdGlvbi50b0xvd2VyQ2FzZSgpID09IFwibGludXhcIikgKyAxO1xyXG4gICAgICAgICAgICBjb25zdCBpbnNlcnQgPSAoc2VjdGlvbikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuVmFsdWUuc3BsaWNlKGxvY2F0aW9uLCAwLCBzZWN0aW9uKTtcclxuICAgICAgICAgICAgICAgIGxvY2F0aW9uKys7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIGluc2VydCh7c2VjdGlvbjogXCJESVZJREVSXCJ9KTtcclxuICAgICAgICAgICAgaW5zZXJ0KHtzZWN0aW9uOiBcIkhFQURFUlwiLCBsYWJlbDogXCJCYW5kYWdlZEJEXCJ9KTtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBjb2xsZWN0aW9uIG9mIFNldHRpbmdzLmNvbGxlY3Rpb25zKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29sbGVjdGlvbi5kaXNhYmxlZCkgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICBpbnNlcnQoe1xyXG4gICAgICAgICAgICAgICAgICAgIHNlY3Rpb246IGNvbGxlY3Rpb24ubmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBsYWJlbDogY29sbGVjdGlvbi5uYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQ6ICgpID0+IHRoaXMuYnVpbGRTZXR0aW5nc1BhbmVsKGNvbGxlY3Rpb24ubmFtZSwgY29sbGVjdGlvbi5zZXR0aW5ncywgU2V0dGluZ3Muc3RhdGVbY29sbGVjdGlvbi5pZF0sIFNldHRpbmdzLm9uU2V0dGluZ0NoYW5nZS5iaW5kKFNldHRpbmdzLCBjb2xsZWN0aW9uLmlkKSwgY29sbGVjdGlvbi5idXR0b24gPyBjb2xsZWN0aW9uLmJ1dHRvbiA6IG51bGwpXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmb3IgKGNvbnN0IHBhbmVsIG9mIFNldHRpbmdzLnBhbmVscy5zb3J0KChhLGIpID0+IGEub3JkZXIgPiBiLm9yZGVyKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHBhbmVsLmNsaWNrTGlzdGVuZXIpIHBhbmVsLm9uQ2xpY2sgPSAoZXZlbnQpID0+IHBhbmVsLmNsaWNrTGlzdGVuZXIodGhpc09iamVjdCwgZXZlbnQsIHJldHVyblZhbHVlKTtcclxuICAgICAgICAgICAgICAgIGluc2VydChwYW5lbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaW5zZXJ0KHtzZWN0aW9uOiBcIkNVU1RPTVwiLCBlbGVtZW50OiBBdHRyaWJ1dGlvbn0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuZm9yY2VVcGRhdGUoKTtcclxuICAgIH1cclxuXHJcbiAgICBmb3JjZVVwZGF0ZSgpIHtcclxuICAgICAgICBjb25zdCB2aWV3Q2xhc3MgPSBXZWJwYWNrTW9kdWxlcy5nZXRCeVByb3BzKFwic3RhbmRhcmRTaWRlYmFyVmlld1wiKS5zdGFuZGFyZFNpZGViYXJWaWV3LnNwbGl0KFwiIFwiKVswXTtcclxuICAgICAgICBjb25zdCBub2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dmlld0NsYXNzfWApO1xyXG4gICAgICAgIGlmICghbm9kZSkgcmV0dXJuO1xyXG4gICAgICAgIFV0aWxpdGllcy5nZXRSZWFjdEluc3RhbmNlKG5vZGUpLnJldHVybi5yZXR1cm4ucmV0dXJuLnJldHVybi5yZXR1cm4ucmV0dXJuLnN0YXRlTm9kZS5mb3JjZVVwZGF0ZSgpO1xyXG4gICAgICAgIGNvbnN0IHN0YXRlTm9kZSA9IFV0aWxpdGllcy5maW5kSW5SZWFjdFRyZWUoVXRpbGl0aWVzLmdldFJlYWN0SW5zdGFuY2Uobm9kZSksIG0gPT4gbSAmJiBtLmdlbmVyYXRlU2VjdGlvbnMsIHt3YWxrYWJsZTogW1wicmV0dXJuXCIsIFwic3RhdGVOb2RlXCJdfSk7XHJcbiAgICAgICAgaWYgKHN0YXRlTm9kZSkgc3RhdGVOb2RlLmZvcmNlVXBkYXRlKCk7XHJcbiAgICB9XHJcbn07Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ui/settings.js\n");

/***/ }),

/***/ "./src/ui/settings/addoncard.jsx":
/*!***************************************!*\
  !*** ./src/ui/settings/addoncard.jsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AddonCard; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _icons_close__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../icons/close */ \"./src/ui/icons/close.jsx\");\n/* harmony import */ var _icons_reload__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icons/reload */ \"./src/ui/icons/reload.jsx\");\n\n\n\nclass AddonCard extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: this.props.enabled,\n      settingsOpen: false\n    };\n    this.settingsPanel = \"\";\n    this.panelRef = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createRef();\n    this.onChange = this.onChange.bind(this);\n    this.reload = this.reload.bind(this);\n    this.showSettings = this.showSettings.bind(this);\n    this.closeSettings = this.closeSettings.bind(this);\n  }\n\n  reload() {\n    if (!this.props.reload) return;\n    this.props.addon = this.props.reload(this.props.addon.id);\n    this.forceUpdate();\n  }\n\n  componentDidUpdate() {\n    if (!this.state.settingsOpen) return;\n    if (this.settingsPanel instanceof Node) this.panelRef.current.appendChild(this.settingsPanel); // if (!SettingsCookie[\"fork-ps-3\"]) return;\n\n    const isHidden = (container, element) => {\n      const cTop = container.scrollTop;\n      const cBottom = cTop + container.clientHeight;\n      const eTop = element.offsetTop;\n      const eBottom = eTop + element.clientHeight;\n      return eTop < cTop || eBottom > cBottom;\n    };\n\n    const panel = $(this.panelRef.current);\n    const container = panel.parents(\".scroller-2FKFPG\");\n    if (!isHidden(container[0], panel[0])) return;\n    container.animate({\n      scrollTop: panel.offset().top - container.offset().top + container.scrollTop() - 30\n    }, 300);\n  }\n\n  getString(value) {\n    return typeof value == \"string\" ? value : value.toString();\n  }\n\n  onChange() {\n    this.setState({\n      checked: !this.state.checked\n    });\n    this.props.onChange && this.props.onChange(this.props.addon.id);\n  }\n\n  showSettings() {\n    if (!this.props.hasSettings) return;\n    this.setState({\n      settingsOpen: true\n    });\n  }\n\n  closeSettings() {\n    this.panelRef.current.innerHTML = \"\";\n    this.setState({\n      settingsOpen: false\n    });\n  }\n\n  buildTitle(name, version, author) {\n    const title = modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Addons.title.split(/({{[A-Za-z]+}})/);\n    const nameIndex = title.findIndex(s => s == \"{{name}}\");\n    if (nameIndex) title[nameIndex] = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", {\n      className: \"bd-name\"\n    }, name);\n    const versionIndex = title.findIndex(s => s == \"{{version}}\");\n    if (nameIndex) title[versionIndex] = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", {\n      className: \"bd-version\"\n    }, version);\n    const authorIndex = title.findIndex(s => s == \"{{author}}\");\n    if (nameIndex) title[authorIndex] = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", {\n      className: \"bd-author\"\n    }, author);\n    return title.flat();\n  }\n\n  get settingsComponent() {\n    const addon = this.props.addon;\n    const name = this.getString(addon.name);\n\n    try {\n      this.settingsPanel = this.props.getSettingsPanel();\n    } catch (err) {\n      modules__WEBPACK_IMPORTED_MODULE_0__[\"Logger\"].stacktrace(\"Addon Settings\", \"Unable to get settings panel for \" + name + \".\", err);\n    }\n\n    const props = {\n      id: `${name}-settings`,\n      className: \"addon-settings\",\n      ref: this.panelRef\n    };\n    if (typeof settingsPanel == \"string\") props.dangerouslySetInnerHTML = this.settingsPanel;\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"li\", {\n      className: \"settings-open bd-switch-item\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-close\",\n      onClick: this.closeSettings\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_close__WEBPACK_IMPORTED_MODULE_1__[\"default\"], null)), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", props, this.settingsPanel instanceof modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component ? this.settingsPanel : null));\n  }\n\n  buildLink(which) {\n    const url = this.props.addon[which];\n    if (!url) return null;\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"a\", {\n      className: \"bd-link bd-link-website\",\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Addons[which]);\n  }\n\n  get footer() {\n    const links = [\"website\", \"source\"];\n    if (!links.some(l => this.props.addon[l]) && !this.props.hasSettings) return null;\n    const linkComponents = links.map(this.buildLink.bind(this)).filter(c => c);\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-footer\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", {\n      className: \"bd-links\"\n    }, linkComponents.map((comp, i) => i < linkComponents.length - 1 ? [comp, \" | \"] : [comp]).flat()), this.props.hasSettings && modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"button\", {\n      onClick: this.showSettings,\n      className: \"bd-button bd-button-addon-settings\",\n      disabled: !this.state.checked\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Addons.addonSettings));\n  }\n\n  render() {\n    if (this.state.settingsOpen) return this.settingsComponent;\n    const addon = this.props.addon;\n    const name = this.getString(addon.name);\n    const author = this.getString(addon.author);\n    const description = this.getString(addon.description);\n    const version = this.getString(addon.version);\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"li\", {\n      dataName: name,\n      dataVersion: version,\n      className: \"settings-closed bd-switch-item\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-header\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"span\", {\n      className: \"bd-header-title\"\n    }, this.buildTitle(name, version, author)), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-controls\"\n    }, this.props.showReloadIcon && modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_reload__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n      className: \"bd-reload bd-reload-card\",\n      onClick: this.reload\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"label\", {\n      className: \"bd-switch-wrapper\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"input\", {\n      className: \"bd-switch-checkbox\",\n      checked: this.state.checked,\n      onChange: this.onChange,\n      type: \"checkbox\"\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: this.state.checked ? \"bd-switch checked\" : \"bd-switch\"\n    })))), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-description-wrap scroller-wrap fade\"\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-description scroller\"\n    }, description)), this.footer);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/settings/addoncard.jsx\n");

/***/ }),

/***/ "./src/ui/settings/addonlist.jsx":
/*!***************************************!*\
  !*** ./src/ui/settings/addonlist.jsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AddonList; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./title */ \"./src/ui/settings/title.jsx\");\n/* harmony import */ var _icons_reload__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../icons/reload */ \"./src/ui/icons/reload.jsx\");\n/* harmony import */ var _addoncard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./addoncard */ \"./src/ui/settings/addoncard.jsx\");\n\n\n\n\nclass AddonList extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  reload() {\n    if (this.props.refreshList) this.props.refreshList();\n    this.forceUpdate();\n  }\n\n  render() {\n    const {\n      title,\n      folder,\n      addonList,\n      addonState,\n      onChange,\n      reload\n    } = this.props;\n    const showReloadIcon = !modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].get(\"settings\", \"addons\", \"autoReload\");\n    const button = folder ? {\n      title: modules__WEBPACK_IMPORTED_MODULE_0__[\"Strings\"].Addons.openFolder.format({\n        type: title\n      }),\n      onClick: () => {\n        __webpack_require__(/*! electron */ \"electron\").shell.openItem(folder);\n      }\n    } : null;\n    return [modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_title__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      key: \"title\",\n      text: title,\n      button: button,\n      otherChildren: showReloadIcon && modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_icons_reload__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        className: \"bd-reload\",\n        onClick: this.reload.bind(this)\n      })\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"ul\", {\n      key: \"addonList\",\n      className: \"bd-slist\"\n    }, addonList.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())).map(addon => {\n      const hasSettings = addon.type && typeof addon.plugin.getSettingsPanel === \"function\";\n      const getSettings = hasSettings && addon.plugin.getSettingsPanel.bind(addon.plugin);\n      return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_addoncard__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        showReloadIcon: showReloadIcon,\n        key: addon.id,\n        enabled: addonState[addon.id],\n        addon: addon,\n        onChange: onChange,\n        reload: reload,\n        hasSettings: hasSettings,\n        getSettingsPanel: getSettings\n      });\n    }))];\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3NldHRpbmdzL2FkZG9ubGlzdC5qc3g/NjRkMiJdLCJuYW1lcyI6WyJBZGRvbkxpc3QiLCJSZWFjdCIsIkNvbXBvbmVudCIsInJlbG9hZCIsInByb3BzIiwicmVmcmVzaExpc3QiLCJmb3JjZVVwZGF0ZSIsInJlbmRlciIsInRpdGxlIiwiZm9sZGVyIiwiYWRkb25MaXN0IiwiYWRkb25TdGF0ZSIsIm9uQ2hhbmdlIiwic2hvd1JlbG9hZEljb24iLCJTZXR0aW5ncyIsImdldCIsImJ1dHRvbiIsIlN0cmluZ3MiLCJBZGRvbnMiLCJvcGVuRm9sZGVyIiwiZm9ybWF0IiwidHlwZSIsIm9uQ2xpY2siLCJyZXF1aXJlIiwic2hlbGwiLCJvcGVuSXRlbSIsImJpbmQiLCJzb3J0IiwiYSIsImIiLCJuYW1lIiwidG9Mb3dlckNhc2UiLCJsb2NhbGVDb21wYXJlIiwibWFwIiwiYWRkb24iLCJoYXNTZXR0aW5ncyIsInBsdWdpbiIsImdldFNldHRpbmdzUGFuZWwiLCJnZXRTZXR0aW5ncyIsImlkIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVlLE1BQU1BLFNBQU4sU0FBd0JDLDZDQUFLLENBQUNDLFNBQTlCLENBQXdDO0FBRW5EQyxRQUFNLEdBQUc7QUFDTCxRQUFJLEtBQUtDLEtBQUwsQ0FBV0MsV0FBZixFQUE0QixLQUFLRCxLQUFMLENBQVdDLFdBQVg7QUFDNUIsU0FBS0MsV0FBTDtBQUNIOztBQUVEQyxRQUFNLEdBQUc7QUFDTCxVQUFNO0FBQUNDLFdBQUQ7QUFBUUMsWUFBUjtBQUFnQkMsZUFBaEI7QUFBMkJDLGdCQUEzQjtBQUF1Q0MsY0FBdkM7QUFBaURUO0FBQWpELFFBQTJELEtBQUtDLEtBQXRFO0FBQ0EsVUFBTVMsY0FBYyxHQUFHLENBQUNDLGdEQUFRLENBQUNDLEdBQVQsQ0FBYSxVQUFiLEVBQXlCLFFBQXpCLEVBQW1DLFlBQW5DLENBQXhCO0FBQ0EsVUFBTUMsTUFBTSxHQUFHUCxNQUFNLEdBQUc7QUFBQ0QsV0FBSyxFQUFFUywrQ0FBTyxDQUFDQyxNQUFSLENBQWVDLFVBQWYsQ0FBMEJDLE1BQTFCLENBQWlDO0FBQUNDLFlBQUksRUFBRWI7QUFBUCxPQUFqQyxDQUFSO0FBQXlEYyxhQUFPLEVBQUUsTUFBTTtBQUFDQywyQkFBTyxDQUFDLDBCQUFELENBQVAsQ0FBb0JDLEtBQXBCLENBQTBCQyxRQUExQixDQUFtQ2hCLE1BQW5DO0FBQTRDO0FBQXJILEtBQUgsR0FBNEgsSUFBako7QUFDQSxXQUFPLENBQ0gsNERBQUMsOENBQUQ7QUFBZSxTQUFHLEVBQUMsT0FBbkI7QUFBMkIsVUFBSSxFQUFFRCxLQUFqQztBQUF3QyxZQUFNLEVBQUVRLE1BQWhEO0FBQXdELG1CQUFhLEVBQUVILGNBQWMsSUFBSSw0REFBQyxxREFBRDtBQUFZLGlCQUFTLEVBQUMsV0FBdEI7QUFBa0MsZUFBTyxFQUFFLEtBQUtWLE1BQUwsQ0FBWXVCLElBQVosQ0FBaUIsSUFBakI7QUFBM0M7QUFBekYsTUFERyxFQUVIO0FBQUksU0FBRyxFQUFDLFdBQVI7QUFBb0IsZUFBUyxFQUFFO0FBQS9CLE9BQ0NoQixTQUFTLENBQUNpQixJQUFWLENBQWUsQ0FBQ0MsQ0FBRCxFQUFJQyxDQUFKLEtBQVVELENBQUMsQ0FBQ0UsSUFBRixDQUFPQyxXQUFQLEdBQXFCQyxhQUFyQixDQUFtQ0gsQ0FBQyxDQUFDQyxJQUFGLENBQU9DLFdBQVAsRUFBbkMsQ0FBekIsRUFBbUZFLEdBQW5GLENBQXVGQyxLQUFLLElBQUk7QUFDN0YsWUFBTUMsV0FBVyxHQUFHRCxLQUFLLENBQUNiLElBQU4sSUFBYyxPQUFPYSxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsZ0JBQXBCLEtBQTBDLFVBQTVFO0FBQ0EsWUFBTUMsV0FBVyxHQUFHSCxXQUFXLElBQUlELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxnQkFBYixDQUE4QlgsSUFBOUIsQ0FBbUNRLEtBQUssQ0FBQ0UsTUFBekMsQ0FBbkM7QUFDQSxhQUFPLDREQUFDLGtEQUFEO0FBQVcsc0JBQWMsRUFBRXZCLGNBQTNCO0FBQTJDLFdBQUcsRUFBRXFCLEtBQUssQ0FBQ0ssRUFBdEQ7QUFBMEQsZUFBTyxFQUFFNUIsVUFBVSxDQUFDdUIsS0FBSyxDQUFDSyxFQUFQLENBQTdFO0FBQXlGLGFBQUssRUFBRUwsS0FBaEc7QUFBdUcsZ0JBQVEsRUFBRXRCLFFBQWpIO0FBQTJILGNBQU0sRUFBRVQsTUFBbkk7QUFBMkksbUJBQVcsRUFBRWdDLFdBQXhKO0FBQXFLLHdCQUFnQixFQUFFRztBQUF2TCxRQUFQO0FBQ0gsS0FKQSxDQURELENBRkcsQ0FBUDtBQVVIOztBQXJCa0QiLCJmaWxlIjoiLi9zcmMvdWkvc2V0dGluZ3MvYWRkb25saXN0LmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVhY3QsIFNldHRpbmdzLCBTdHJpbmdzfSBmcm9tIFwibW9kdWxlc1wiO1xyXG5cclxuaW1wb3J0IFNldHRpbmdzVGl0bGUgZnJvbSBcIi4vdGl0bGVcIjtcclxuaW1wb3J0IFJlbG9hZEljb24gZnJvbSBcIi4uL2ljb25zL3JlbG9hZFwiO1xyXG5pbXBvcnQgQWRkb25DYXJkIGZyb20gXCIuL2FkZG9uY2FyZFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWRkb25MaXN0IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuXHJcbiAgICByZWxvYWQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMucmVmcmVzaExpc3QpIHRoaXMucHJvcHMucmVmcmVzaExpc3QoKTtcclxuICAgICAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IHt0aXRsZSwgZm9sZGVyLCBhZGRvbkxpc3QsIGFkZG9uU3RhdGUsIG9uQ2hhbmdlLCByZWxvYWR9ID0gdGhpcy5wcm9wcztcclxuICAgICAgICBjb25zdCBzaG93UmVsb2FkSWNvbiA9ICFTZXR0aW5ncy5nZXQoXCJzZXR0aW5nc1wiLCBcImFkZG9uc1wiLCBcImF1dG9SZWxvYWRcIik7XHJcbiAgICAgICAgY29uc3QgYnV0dG9uID0gZm9sZGVyID8ge3RpdGxlOiBTdHJpbmdzLkFkZG9ucy5vcGVuRm9sZGVyLmZvcm1hdCh7dHlwZTogdGl0bGV9KSwgb25DbGljazogKCkgPT4ge3JlcXVpcmUoXCJlbGVjdHJvblwiKS5zaGVsbC5vcGVuSXRlbShmb2xkZXIpO319IDogbnVsbDtcclxuICAgICAgICByZXR1cm4gW1xyXG4gICAgICAgICAgICA8U2V0dGluZ3NUaXRsZSBrZXk9XCJ0aXRsZVwiIHRleHQ9e3RpdGxlfSBidXR0b249e2J1dHRvbn0gb3RoZXJDaGlsZHJlbj17c2hvd1JlbG9hZEljb24gJiYgPFJlbG9hZEljb24gY2xhc3NOYW1lPVwiYmQtcmVsb2FkXCIgb25DbGljaz17dGhpcy5yZWxvYWQuYmluZCh0aGlzKX0gLz59IC8+LFxyXG4gICAgICAgICAgICA8dWwga2V5PVwiYWRkb25MaXN0XCIgY2xhc3NOYW1lPXtcImJkLXNsaXN0XCJ9PlxyXG4gICAgICAgICAgICB7YWRkb25MaXN0LnNvcnQoKGEsIGIpID0+IGEubmFtZS50b0xvd2VyQ2FzZSgpLmxvY2FsZUNvbXBhcmUoYi5uYW1lLnRvTG93ZXJDYXNlKCkpKS5tYXAoYWRkb24gPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaGFzU2V0dGluZ3MgPSBhZGRvbi50eXBlICYmIHR5cGVvZihhZGRvbi5wbHVnaW4uZ2V0U2V0dGluZ3NQYW5lbCkgPT09IFwiZnVuY3Rpb25cIjtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGdldFNldHRpbmdzID0gaGFzU2V0dGluZ3MgJiYgYWRkb24ucGx1Z2luLmdldFNldHRpbmdzUGFuZWwuYmluZChhZGRvbi5wbHVnaW4pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIDxBZGRvbkNhcmQgc2hvd1JlbG9hZEljb249e3Nob3dSZWxvYWRJY29ufSBrZXk9e2FkZG9uLmlkfSBlbmFibGVkPXthZGRvblN0YXRlW2FkZG9uLmlkXX0gYWRkb249e2FkZG9ufSBvbkNoYW5nZT17b25DaGFuZ2V9IHJlbG9hZD17cmVsb2FkfSBoYXNTZXR0aW5ncz17aGFzU2V0dGluZ3N9IGdldFNldHRpbmdzUGFuZWw9e2dldFNldHRpbmdzfSAvPjtcclxuICAgICAgICAgICAgfSl9XHJcbiAgICAgICAgICAgIDwvdWw+XHJcbiAgICAgICAgXTtcclxuICAgIH1cclxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/ui/settings/addonlist.jsx\n");

/***/ }),

/***/ "./src/ui/settings/attribution.jsx":
/*!*****************************************!*\
  !*** ./src/ui/settings/attribution.jsx ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BBDAttribution; });\n/* harmony import */ var data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! data */ \"./src/data/data.js\");\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\n\nclass BBDAttribution extends modules__WEBPACK_IMPORTED_MODULE_1__[\"React\"].Component {\n  buildTitle(name, version, author) {\n    const title = modules__WEBPACK_IMPORTED_MODULE_1__[\"Strings\"].Addons.title.split(/({{[A-Za-z]+}})/);\n    const nameIndex = title.findIndex(s => s == \"{{name}}\");\n    if (nameIndex) title[nameIndex] = name;\n    const versionIndex = title.findIndex(s => s == \"{{version}}\");\n    if (nameIndex) title[versionIndex] = version;\n    const authorIndex = title.findIndex(s => s == \"{{author}}\");\n    if (nameIndex) title[authorIndex] = author;\n    return title.flat();\n  }\n\n  render() {\n    return modules__WEBPACK_IMPORTED_MODULE_1__[\"React\"].createElement(\"div\", {\n      id: \"bbd-version\"\n    }, this.buildTitle(\"BBD\", data__WEBPACK_IMPORTED_MODULE_0__[\"Config\"].bbdVersion, modules__WEBPACK_IMPORTED_MODULE_1__[\"React\"].createElement(\"a\", {\n      href: \"https://github.com/rauenzi\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, \"Zerebos\")));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3NldHRpbmdzL2F0dHJpYnV0aW9uLmpzeD8xNzg0Il0sIm5hbWVzIjpbIkJCREF0dHJpYnV0aW9uIiwiUmVhY3QiLCJDb21wb25lbnQiLCJidWlsZFRpdGxlIiwibmFtZSIsInZlcnNpb24iLCJhdXRob3IiLCJ0aXRsZSIsIlN0cmluZ3MiLCJBZGRvbnMiLCJzcGxpdCIsIm5hbWVJbmRleCIsImZpbmRJbmRleCIsInMiLCJ2ZXJzaW9uSW5kZXgiLCJhdXRob3JJbmRleCIsImZsYXQiLCJyZW5kZXIiLCJDb25maWciLCJiYmRWZXJzaW9uIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFZSxNQUFNQSxjQUFOLFNBQTZCQyw2Q0FBSyxDQUFDQyxTQUFuQyxDQUE2QztBQUV4REMsWUFBVSxDQUFDQyxJQUFELEVBQU9DLE9BQVAsRUFBZ0JDLE1BQWhCLEVBQXdCO0FBQzlCLFVBQU1DLEtBQUssR0FBR0MsK0NBQU8sQ0FBQ0MsTUFBUixDQUFlRixLQUFmLENBQXFCRyxLQUFyQixDQUEyQixpQkFBM0IsQ0FBZDtBQUNBLFVBQU1DLFNBQVMsR0FBR0osS0FBSyxDQUFDSyxTQUFOLENBQWdCQyxDQUFDLElBQUlBLENBQUMsSUFBSSxVQUExQixDQUFsQjtBQUNBLFFBQUlGLFNBQUosRUFBZUosS0FBSyxDQUFDSSxTQUFELENBQUwsR0FBbUJQLElBQW5CO0FBQ2YsVUFBTVUsWUFBWSxHQUFHUCxLQUFLLENBQUNLLFNBQU4sQ0FBZ0JDLENBQUMsSUFBSUEsQ0FBQyxJQUFJLGFBQTFCLENBQXJCO0FBQ0EsUUFBSUYsU0FBSixFQUFlSixLQUFLLENBQUNPLFlBQUQsQ0FBTCxHQUFzQlQsT0FBdEI7QUFDZixVQUFNVSxXQUFXLEdBQUdSLEtBQUssQ0FBQ0ssU0FBTixDQUFnQkMsQ0FBQyxJQUFJQSxDQUFDLElBQUksWUFBMUIsQ0FBcEI7QUFDQSxRQUFJRixTQUFKLEVBQWVKLEtBQUssQ0FBQ1EsV0FBRCxDQUFMLEdBQXFCVCxNQUFyQjtBQUNmLFdBQU9DLEtBQUssQ0FBQ1MsSUFBTixFQUFQO0FBQ0g7O0FBRURDLFFBQU0sR0FBRztBQUNMLFdBQU87QUFBSyxRQUFFLEVBQUM7QUFBUixPQUNGLEtBQUtkLFVBQUwsQ0FBZ0IsS0FBaEIsRUFBdUJlLDJDQUFNLENBQUNDLFVBQTlCLEVBQTBDO0FBQUcsVUFBSSxFQUFDLDRCQUFSO0FBQXFDLFlBQU0sRUFBQyxRQUE1QztBQUFxRCxTQUFHLEVBQUM7QUFBekQsaUJBQTFDLENBREUsQ0FBUDtBQUdIOztBQWpCdUQiLCJmaWxlIjoiLi9zcmMvdWkvc2V0dGluZ3MvYXR0cmlidXRpb24uanN4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb25maWd9IGZyb20gXCJkYXRhXCI7XHJcbmltcG9ydCB7UmVhY3QsIFN0cmluZ3N9IGZyb20gXCJtb2R1bGVzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCQkRBdHRyaWJ1dGlvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcblxyXG4gICAgYnVpbGRUaXRsZShuYW1lLCB2ZXJzaW9uLCBhdXRob3IpIHtcclxuICAgICAgICBjb25zdCB0aXRsZSA9IFN0cmluZ3MuQWRkb25zLnRpdGxlLnNwbGl0KC8oe3tbQS1aYS16XSt9fSkvKTtcclxuICAgICAgICBjb25zdCBuYW1lSW5kZXggPSB0aXRsZS5maW5kSW5kZXgocyA9PiBzID09IFwie3tuYW1lfX1cIik7XHJcbiAgICAgICAgaWYgKG5hbWVJbmRleCkgdGl0bGVbbmFtZUluZGV4XSA9IG5hbWU7XHJcbiAgICAgICAgY29uc3QgdmVyc2lvbkluZGV4ID0gdGl0bGUuZmluZEluZGV4KHMgPT4gcyA9PSBcInt7dmVyc2lvbn19XCIpO1xyXG4gICAgICAgIGlmIChuYW1lSW5kZXgpIHRpdGxlW3ZlcnNpb25JbmRleF0gPSB2ZXJzaW9uO1xyXG4gICAgICAgIGNvbnN0IGF1dGhvckluZGV4ID0gdGl0bGUuZmluZEluZGV4KHMgPT4gcyA9PSBcInt7YXV0aG9yfX1cIik7XHJcbiAgICAgICAgaWYgKG5hbWVJbmRleCkgdGl0bGVbYXV0aG9ySW5kZXhdID0gYXV0aG9yO1xyXG4gICAgICAgIHJldHVybiB0aXRsZS5mbGF0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIHJldHVybiA8ZGl2IGlkPVwiYmJkLXZlcnNpb25cIj5cclxuICAgICAgICAgICAge3RoaXMuYnVpbGRUaXRsZShcIkJCRFwiLCBDb25maWcuYmJkVmVyc2lvbiwgPGEgaHJlZj1cImh0dHBzOi8vZ2l0aHViLmNvbS9yYXVlbnppXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPlplcmVib3M8L2E+KX1cclxuICAgICAgICA8L2Rpdj47XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/settings/attribution.jsx\n");

/***/ }),

/***/ "./src/ui/settings/divider.jsx":
/*!*************************************!*\
  !*** ./src/ui/settings/divider.jsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Divider; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nclass Divider extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  render() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-divider divider-3573oO marginTop8-1DLZ1n marginBottom40-2vIwTv\"\n    });\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3NldHRpbmdzL2RpdmlkZXIuanN4P2M4Y2MiXSwibmFtZXMiOlsiRGl2aWRlciIsIlJlYWN0IiwiQ29tcG9uZW50IiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVlLE1BQU1BLE9BQU4sU0FBc0JDLDZDQUFLLENBQUNDLFNBQTVCLENBQXNDO0FBQ2pEQyxRQUFNLEdBQUc7QUFDTCxXQUFPO0FBQUssZUFBUyxFQUFDO0FBQWYsTUFBUDtBQUNIOztBQUhnRCIsImZpbGUiOiIuL3NyYy91aS9zZXR0aW5ncy9kaXZpZGVyLmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVhY3R9IGZyb20gXCJtb2R1bGVzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaXZpZGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9XCJiZC1kaXZpZGVyIGRpdmlkZXItMzU3M29PIG1hcmdpblRvcDgtMURMWjFuIG1hcmdpbkJvdHRvbTQwLTJ2SXdUdlwiIC8+O1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ui/settings/divider.jsx\n");

/***/ }),

/***/ "./src/ui/settings/group.jsx":
/*!***********************************!*\
  !*** ./src/ui/settings/group.jsx ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Group; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./title */ \"./src/ui/settings/title.jsx\");\n/* harmony import */ var _divider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./divider */ \"./src/ui/settings/divider.jsx\");\n/* harmony import */ var _switch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./switch */ \"./src/ui/settings/switch.jsx\");\n\n\n\n\nconst baseClassName = \"bd-settings-group\";\nclass Group extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n\n    if (this.props.button && this.props.collapsible) {\n      const original = this.props.button.onClick;\n\n      this.props.button.onClick = event => {\n        event.stopPropagation();\n        original(...arguments);\n      };\n    }\n\n    if (!this.props.hasOwnProperty(\"shown\")) this.props.shown = true;\n    this.container = modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createRef();\n    this.state = {\n      collapsed: this.props.collapsible && !this.props.shown\n    };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  toggleCollapse() {\n    const container = this.container.current;\n    const timeout = this.state.collapsed ? 300 : 1;\n    container.style.setProperty(\"height\", container.scrollHeight + \"px\");\n    this.setState({\n      collapsed: !this.state.collapsed\n    }, () => setTimeout(() => container.style.setProperty(\"height\", \"\"), timeout));\n  }\n\n  onChange(id, value) {\n    if (!this.props.onChange) return;\n    if (this.props.id) this.props.onChange(this.props.id, id, value);else this.props.onChange(id, value);\n    this.forceUpdate();\n  }\n\n  render() {\n    const {\n      settings\n    } = this.props;\n    const collapseClass = this.props.collapsible ? `collapsible ${this.state.collapsed && \"collapsed\"}` : \"\";\n    const groupClass = `${baseClassName} ${collapseClass}`;\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: groupClass\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_title__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n      text: this.props.name,\n      collapsible: this.props.collapsible,\n      onClick: () => this.toggleCollapse(),\n      button: this.props.button,\n      isGroup: true\n    }), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: \"bd-settings-container\",\n      ref: this.container\n    }, settings.filter(s => !s.hidden).map(setting => modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_switch__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n      disabled: setting.disabled,\n      id: setting.id,\n      key: setting.id,\n      name: setting.name,\n      note: setting.note,\n      checked: setting.value,\n      onChange: this.onChange\n    }))), this.props.showDivider && modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(_divider__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3NldHRpbmdzL2dyb3VwLmpzeD8xYjcyIl0sIm5hbWVzIjpbImJhc2VDbGFzc05hbWUiLCJHcm91cCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsImJ1dHRvbiIsImNvbGxhcHNpYmxlIiwib3JpZ2luYWwiLCJvbkNsaWNrIiwiZXZlbnQiLCJzdG9wUHJvcGFnYXRpb24iLCJhcmd1bWVudHMiLCJoYXNPd25Qcm9wZXJ0eSIsInNob3duIiwiY29udGFpbmVyIiwiY3JlYXRlUmVmIiwic3RhdGUiLCJjb2xsYXBzZWQiLCJvbkNoYW5nZSIsImJpbmQiLCJ0b2dnbGVDb2xsYXBzZSIsImN1cnJlbnQiLCJ0aW1lb3V0Iiwic3R5bGUiLCJzZXRQcm9wZXJ0eSIsInNjcm9sbEhlaWdodCIsInNldFN0YXRlIiwic2V0VGltZW91dCIsImlkIiwidmFsdWUiLCJmb3JjZVVwZGF0ZSIsInJlbmRlciIsInNldHRpbmdzIiwiY29sbGFwc2VDbGFzcyIsImdyb3VwQ2xhc3MiLCJuYW1lIiwiZmlsdGVyIiwicyIsImhpZGRlbiIsIm1hcCIsInNldHRpbmciLCJkaXNhYmxlZCIsIm5vdGUiLCJzaG93RGl2aWRlciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQSxNQUFNQSxhQUFhLEdBQUcsbUJBQXRCO0FBRWUsTUFBTUMsS0FBTixTQUFvQkMsNkNBQUssQ0FBQ0MsU0FBMUIsQ0FBb0M7QUFDL0NDLGFBQVcsQ0FBQ0MsS0FBRCxFQUFRO0FBQ2YsVUFBTUEsS0FBTjs7QUFFQSxRQUFJLEtBQUtBLEtBQUwsQ0FBV0MsTUFBWCxJQUFxQixLQUFLRCxLQUFMLENBQVdFLFdBQXBDLEVBQWlEO0FBQzdDLFlBQU1DLFFBQVEsR0FBRyxLQUFLSCxLQUFMLENBQVdDLE1BQVgsQ0FBa0JHLE9BQW5DOztBQUNBLFdBQUtKLEtBQUwsQ0FBV0Ms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QUFBcUUsVUFBSSxFQUFFWSxPQUFPLENBQUNMLElBQW5GO0FBQXlGLFVBQUksRUFBRUssT0FBTyxDQUFDRSxJQUF2RztBQUE2RyxhQUFPLEVBQUVGLE9BQU8sQ0FBQ1gsS0FBOUg7QUFBcUksY0FBUSxFQUFFLEtBQUtYO0FBQXBKLE1BREgsQ0FETCxDQUZMLEVBT00sS0FBS2QsS0FBTCxDQUFXdUMsV0FBWCxJQUEwQiw0REFBQyxnREFBRCxPQVBoQyxDQUFQO0FBU0g7O0FBbEQ4QyIsImZpbGUiOiIuL3NyYy91aS9zZXR0aW5ncy9ncm91cC5qc3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JlYWN0fSBmcm9tIFwibW9kdWxlc1wiO1xyXG5pbXBvcnQgVGl0bGUgZnJvbSBcIi4vdGl0bGVcIjtcclxuaW1wb3J0IERpdmlkZXIgZnJvbSBcIi4vZGl2aWRlclwiO1xyXG5pbXBvcnQgU3dpdGNoIGZyb20gXCIuL3N3aXRjaFwiO1xyXG5cclxuY29uc3QgYmFzZUNsYXNzTmFtZSA9IFwiYmQtc2V0dGluZ3MtZ3JvdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyb3VwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5wcm9wcy5idXR0b24gJiYgdGhpcy5wcm9wcy5jb2xsYXBzaWJsZSkge1xyXG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbCA9IHRoaXMucHJvcHMuYnV0dG9uLm9uQ2xpY2s7XHJcbiAgICAgICAgICAgIHRoaXMucHJvcHMuYnV0dG9uLm9uQ2xpY2sgPSAoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgb3JpZ2luYWwoLi4uYXJndW1lbnRzKTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghdGhpcy5wcm9wcy5oYXNPd25Qcm9wZXJ0eShcInNob3duXCIpKSB0aGlzLnByb3BzLnNob3duID0gdHJ1ZTtcclxuXHJcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBSZWFjdC5jcmVhdGVSZWYoKTtcclxuICAgICAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICAgICAgICBjb2xsYXBzZWQ6IHRoaXMucHJvcHMuY29sbGFwc2libGUgJiYgIXRoaXMucHJvcHMuc2hvd25cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gdGhpcy5vbkNoYW5nZS5iaW5kKHRoaXMpO1xyXG4gICAgfVxyXG5cclxuICAgIHRvZ2dsZUNvbGxhcHNlKCkge1xyXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9IHRoaXMuY29udGFpbmVyLmN1cnJlbnQ7XHJcbiAgICAgICAgY29uc3QgdGltZW91dCA9IHRoaXMuc3RhdGUuY29sbGFwc2VkID8gMzAwIDogMTtcclxuICAgICAgICBjb250YWluZXIuc3R5bGUuc2V0UHJvcGVydHkoXCJoZWlnaHRcIiwgY29udGFpbmVyLnNjcm9sbEhlaWdodCArIFwicHhcIik7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7Y29sbGFwc2VkOiAhdGhpcy5zdGF0ZS5jb2xsYXBzZWR9LCAoKSA9PiBzZXRUaW1lb3V0KCgpID0+IGNvbnRhaW5lci5zdHlsZS5zZXRQcm9wZXJ0eShcImhlaWdodFwiLCBcIlwiKSwgdGltZW91dCkpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ2hhbmdlKGlkLCB2YWx1ZSkge1xyXG4gICAgICAgIGlmICghdGhpcy5wcm9wcy5vbkNoYW5nZSkgcmV0dXJuO1xyXG4gICAgICAgIGlmICh0aGlzLnByb3BzLmlkKSB0aGlzLnByb3BzLm9uQ2hhbmdlKHRoaXMucHJvcHMuaWQsIGlkLCB2YWx1ZSk7XHJcbiAgICAgICAgZWxzZSB0aGlzLnByb3BzLm9uQ2hhbmdlKGlkLCB2YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5mb3JjZVVwZGF0ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICBjb25zdCB7c2V0dGluZ3N9ID0gdGhpcy5wcm9wcztcclxuICAgICAgICBjb25zdCBjb2xsYXBzZUNsYXNzID0gdGhpcy5wcm9wcy5jb2xsYXBzaWJsZSA/IGBjb2xsYXBzaWJsZSAke3RoaXMuc3RhdGUuY29sbGFwc2VkICYmIFwiY29sbGFwc2VkXCJ9YCA6IFwiXCI7XHJcbiAgICAgICAgY29uc3QgZ3JvdXBDbGFzcyA9IGAke2Jhc2VDbGFzc05hbWV9ICR7Y29sbGFwc2VDbGFzc31gO1xyXG5cclxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9e2dyb3VwQ2xhc3N9PlxyXG4gICAgICAgICAgICAgICAgICAgIDxUaXRsZSB0ZXh0PXt0aGlzLnByb3BzLm5hbWV9IGNvbGxhcHNpYmxlPXt0aGlzLnByb3BzLmNvbGxhcHNpYmxlfSBvbkNsaWNrPXsoKSA9PiB0aGlzLnRvZ2dsZUNvbGxhcHNlKCl9IGJ1dHRvbj17dGhpcy5wcm9wcy5idXR0b259IGlzR3JvdXA9e3RydWV9IC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJiZC1zZXR0aW5ncy1jb250YWluZXJcIiByZWY9e3RoaXMuY29udGFpbmVyfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAge3NldHRpbmdzLmZpbHRlcihzID0+ICFzLmhpZGRlbikubWFwKChzZXR0aW5nKSA9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN3aXRjaCBkaXNhYmxlZD17c2V0dGluZy5kaXNhYmxlZH0gaWQ9e3NldHRpbmcuaWR9IGtleT17c2V0dGluZy5pZH0gbmFtZT17c2V0dGluZy5uYW1lfSBub3RlPXtzZXR0aW5nLm5vdGV9IGNoZWNrZWQ9e3NldHRpbmcudmFsdWV9IG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlfSAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIHt0aGlzLnByb3BzLnNob3dEaXZpZGVyICYmIDxEaXZpZGVyIC8+fVxyXG4gICAgICAgICAgICAgICAgPC9kaXY+O1xyXG4gICAgfVxyXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/ui/settings/group.jsx\n");

/***/ }),

/***/ "./src/ui/settings/switch.jsx":
/*!************************************!*\
  !*** ./src/ui/settings/switch.jsx ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Switch; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nconst flexContainer = \"flex-1xMQg5 flex-1O1GKY vertical-V37hAW flex-1O1GKY directionColumn-35P_nr justifyStart-2NDFzi alignStretch-DpGPf3 noWrap-3jynv6 switchItem-2hKKKK\";\nconst flexWrap = \"flex-1xMQg5 flex-1O1GKY horizontal-1ae9ci horizontal-2EEEnY flex-1O1GKY directionRow-3v3tfG justifyStart-2NDFzi alignStart-H-X2h- noWrap-3jynv6\";\nconst flexChild = \"flexChild-faoVW3\";\nconst title = \"titleDefault-a8-ZSr title-31JmR4 da-titleDefault da-title\";\nconst switchWrapperDisabled = \"flexChild-faoVW3 da-flexChild switchDisabled-3HsXAJ switch-3wwwcV da-switchDisabled da-switch valueUnchecked-2lU_20  value-2hFrkk sizeDefault-2YlOZr size-3rFEHg themeDefault-24hCdX\";\nconst switchWrapperDisabledChecked = \"flexChild-faoVW3 da-flexChild switchDisabled-3HsXAJ switch-3wwwcV da-switchDisabled da-switch valueChecked-m-4IJZ value-2hFrkk sizeDefault-2YlOZr size-3rFEHg themeDefault-24hCdX\";\nconst switchWrapper = \"flexChild-faoVW3 da-flexChild switchEnabled-V2WDBB switch-3wwwcV da-switchEnabled da-switch valueUnchecked-2lU_20 value-2hFrkk sizeDefault-2YlOZr size-3rFEHg themeDefault-24hCdX\";\nconst switchWrapperChecked = \"flexChild-faoVW3 da-flexChild switchEnabled-V2WDBB switch-3wwwcV da-switchEnabled da-switch valueChecked-m-4IJZ value-2hFrkk sizeDefault-2YlOZr size-3rFEHg themeDefault-24hCdX\";\nconst switchClass = \"checkboxEnabled-CtinEn checkbox-2tyjJg\";\nconst switchClassDisabled = \"checkboxDisabled-1MA81A checkbox-2tyjJg\";\nconst description = \"description-3_Ncsb formText-3fs7AJ note-1V3kyJ modeDefault-3a2Ph1 primary-jw0I4K\";\nconst divider = \"divider-3573oO dividerDefault-3rvLe-\";\nclass Switch extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: this.props.checked\n    };\n  }\n\n  onChange() {\n    if (this.props.disabled) return;\n    this.props.onChange(this.props.id, !this.state.checked);\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n\n  render() {\n    const wrapperClass = this.props.disabled ? this.state.checked ? switchWrapperDisabledChecked : switchWrapperDisabled : this.state.checked ? switchWrapperChecked : switchWrapper;\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: flexContainer,\n      style: {\n        flex: \"1 1 auto\"\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: flexWrap,\n      style: {\n        flex: \"1 1 auto\"\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: flexChild,\n      style: {\n        flex: \"1 1 auto\"\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"label\", {\n      htmlFor: this.props.id,\n      className: title\n    }, this.props.name || this.props.data.text)), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: wrapperClass,\n      tabIndex: \"0\",\n      style: {\n        flex: \"0 0 auto\"\n      }\n    }, modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"input\", {\n      id: this.props.id,\n      className: this.props.disabled ? switchClassDisabled : switchClass,\n      type: \"checkbox\",\n      tabIndex: \"-1\",\n      checked: this.state.checked,\n      onChange: e => this.onChange(e)\n    }))), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: description,\n      style: {\n        flex: \"1 1 auto\"\n      }\n    }, this.props.note || this.props.data.info), modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"div\", {\n      className: divider\n    }));\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3NldHRpbmdzL3N3aXRjaC5qc3g/OTMxYyJdLCJuYW1lcyI6WyJmbGV4Q29udGFpbmVyIiwiZmxleFdyYXAiLCJmbGV4Q2hpbGQiLCJ0aXRsZSIsInN3aXRjaFdyYXBwZXJEaXNhYmxlZCIsInN3aXRjaFdyYXBwZXJEaXNhYmxlZENoZWNrZWQiLCJzd2l0Y2hXcmFwcGVyIiwic3dpdGNoV3JhcHBlckNoZWNrZWQiLCJzd2l0Y2hDbGFzcyIsInN3aXRjaENsYXNzRGlzYWJsZWQiLCJkZXNjcmlwdGlvbiIsImRpdmlkZXIiLCJTd2l0Y2giLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsImNoZWNrZWQiLCJvbkNoYW5nZSIsImRpc2FibGVkIiwiaWQiLCJzZXRTdGF0ZSIsInJlbmRlciIsIndyYXBwZXJDbGFzcyIsImZsZXgiLCJuYW1lIiwiZGF0YSIsInRleHQiLCJlIiwibm90ZSIsImluZm8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUEsTUFBTUEsYUFBYSxHQUFHLG9KQUF0QjtBQUNBLE1BQU1DLFFBQVEsR0FBRyxpSkFBakI7QUFDQSxNQUFNQyxTQUFTLEdBQUcsa0JBQWxCO0FBQ0EsTUFBTUMsS0FBSyxHQUFHLDJEQUFkO0FBQ0EsTUFBTUMscUJBQXFCLEdBQUcsc0xBQTlCO0FBQ0EsTUFBTUMsNEJBQTRCLEdBQUcsbUxBQXJDO0FBQ0EsTUFBTUMsYUFBYSxHQUFHLG1MQUF0QjtBQUNBLE1BQU1DLG9CQUFvQixHQUFHLGlMQUE3QjtBQUNBLE1BQU1DLFdBQVcsR0FBRyx3Q0FBcEI7QUFDQSxNQUFNQyxtQkFBbUIsR0FBRyx5Q0FBNUI7QUFDQSxNQUFNQyxXQUFXLEdBQUcsa0ZBQXBCO0FBQ0EsTUFBTUMsT0FBTyxHQUFHLHNDQUFoQjtBQUVlLE1BQU1DLE1BQU4sU0FBcUJDLDZDQUFLLENBQUNDLFNBQTNCLENBQXFDO0FBQ2hEQyxhQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNmLFVBQU1BLEtBQU47QUFFQSxTQUFLQyxLQUFMLEdBQWE7QUFDVEMsYUFBTyxFQUFFLEtBQUtGLEtBQUwsQ0FBV0U7QUFEWCxLQUFiO0FBR0g7O0FBRURDLFVBQVEsR0FBRztBQUNQLFFBQUksS0FBS0gsS0FBTCxDQUFXSSxRQUFmLEVBQXlCO0FBQ3pCLFNBQUtKLEtBQUwsQ0FBV0csUUFBWCxDQUFvQixLQUFLSCxLQUFMLENBQVdLLEVBQS9CLEVBQW1DLENBQUMsS0FBS0osS0FBTCxDQUFXQyxPQUEvQztBQUNBLFNBQUtJLFFBQUwsQ0FBYztBQUNWSixhQUFPLEVBQUUsQ0FBQyxLQUFLRCxLQUFMLENBQVdDO0FBRFgsS0FBZDtBQUdIOztBQUVESyxRQUFNLEdBQUc7QUFDTCxVQUFNQyxZQUFZLEdBQUcsS0FBS1IsS0FBTCxDQUFXSSxRQUFYLEdBQXVCLEtBQUtILEtBQUwsQ0FBV0MsT0FBWCxHQUFxQmIsNEJBQXJCLEdBQW9ERCxxQkFBM0UsR0FBcUcsS0FBS2EsS0FBTCxDQUFXQyxPQUFYLEdBQXFCWCxvQkFBckIsR0FBNENELGFBQXRLO0FBQ0EsV0FBTztBQUFLLGVBQVMsRUFBRU4sYUFBaEI7QUFBK0IsV0FBSyxFQUFFO0FBQUN5QixZQUFJLEVBQUU7QUFBUDtBQUF0QyxPQUNLO0FBQUssZUFBUyxFQUFFeEIsUUFBaEI7QUFBMEIsV0FBSyxFQUFFO0FBQUN3QixZQUFJLEVBQUU7QUFBUDtBQUFqQyxPQUNJO0FBQUssZUFBUyxFQUFFdkIsU0FBaEI7QUFBMkIsV0FBSyxFQUFFO0FBQUN1QixZQUFJLEVBQUU7QUFBUDtBQUFsQyxPQUNJO0FBQU8sYUFBTyxFQUFFLEtBQUtULEtBQUwsQ0FBV0ssRUFBM0I7QUFBK0IsZUFBUyxFQUFFbEI7QUFBMUMsT0FBa0QsS0FBS2EsS0FBTCxDQUFXVSxJQUFYLElBQW1CLEtBQUtWLEtBQUwsQ0FBV1csSUFBWCxDQUFnQkMsSUFBckYsQ0FESixDQURKLEVBSUk7QUFBSyxlQUFTLEVBQUVKLFlBQWhCO0FBQThCLGNBQVEsRUFBQyxHQUF2QztBQUEyQyxXQUFLLEVBQUU7QUFBQ0MsWUFBSSxFQUFFO0FBQVA7QUFBbEQsT0FDSTtBQUFPLFFBQUUsRUFBRSxLQUFLVCxLQUFMLENBQVdLLEVBQXRCO0FBQTBCLGVBQVMsRUFBRSxLQUFLTCxLQUFMLENBQVdJLFFBQVgsR0FBc0JYLG1CQUF0QixHQUE0Q0QsV0FBakY7QUFBOEYsVUFBSSxFQUFDLFVBQW5HO0FBQThHLGNBQVEsRUFBQyxJQUF2SDtBQUE0SCxhQUFPLEVBQUUsS0FBS1MsS0FBTCxDQUFXQyxPQUFoSjtBQUF5SixjQUFRLEVBQUVXLENBQUMsSUFBSSxLQUFLVixRQUFMLENBQWNVLENBQWQ7QUFBeEssTUFESixDQUpKLENBREwsRUFTSztBQUFLLGVBQVMsRUFBRW5CLFdBQWhCO0FBQTZCLFdBQUssRUFBRTtBQUFDZSxZQUFJLEVBQUU7QUFBUDtBQUFwQyxPQUF5RCxLQUFLVCxLQUFMLENBQVdjLElBQVgsSUFBbUIsS0FBS2QsS0FBTCxDQUFXVyxJQUFYLENBQWdCSSxJQUE1RixDQVRMLEVBVUs7QUFBSyxlQUFTLEVBQUVwQjtBQUFoQixNQVZMLENBQVA7QUFZSDs7QUEvQitDIiwiZmlsZSI6Ii4vc3JjL3VpL3NldHRpbmdzL3N3aXRjaC5qc3guanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1JlYWN0fSBmcm9tIFwibW9kdWxlc1wiO1xyXG5cclxuY29uc3QgZmxleENvbnRhaW5lciA9IFwiZmxleC0xeE1RZzUgZmxleC0xTzFHS1kgdmVydGljYWwtVjM3aEFXIGZsZXgtMU8xR0tZIGRpcmVjdGlvbkNvbHVtbi0zNVBfbnIganVzdGlmeVN0YXJ0LTJOREZ6aSBhbGlnblN0cmV0Y2gtRHBHUGYzIG5vV3JhcC0zanludjYgc3dpdGNoSXRlbS0yaEtLS0tcIjtcclxuY29uc3QgZmxleFdyYXAgPSBcImZsZXgtMXhNUWc1IGZsZXgtMU8xR0tZIGhvcml6b250YWwtMWFlOWNpIGhvcml6b250YWwtMkVFRW5ZIGZsZXgtMU8xR0tZIGRpcmVjdGlvblJvdy0zdjN0ZkcganVzdGlmeVN0YXJ0LTJOREZ6aSBhbGlnblN0YXJ0LUgtWDJoLSBub1dyYXAtM2p5bnY2XCI7XHJcbmNvbnN0IGZsZXhDaGlsZCA9IFwiZmxleENoaWxkLWZhb1ZXM1wiO1xyXG5jb25zdCB0aXRsZSA9IFwidGl0bGVEZWZhdWx0LWE4LVpTciB0aXRsZS0zMUptUjQgZGEtdGl0bGVEZWZhdWx0IGRhLXRpdGxlXCI7XHJcbmNvbnN0IHN3aXRjaFdyYXBwZXJEaXNhYmxlZCA9IFwiZmxleENoaWxkLWZhb1ZXMyBkYS1mbGV4Q2hpbGQgc3dpdGNoRGlzYWJsZWQtM0hzWEFKIHN3aXRjaC0zd3d3Y1YgZGEtc3dpdGNoRGlzYWJsZWQgZGEtc3dpdGNoIHZhbHVlVW5jaGVja2VkLTJsVV8yMCAgdmFsdWUtMmhGcmtrIHNpemVEZWZhdWx0LTJZbE9aciBzaXplLTNyRkVIZyB0aGVtZURlZmF1bHQtMjRoQ2RYXCI7XHJcbmNvbnN0IHN3aXRjaFdyYXBwZXJEaXNhYmxlZENoZWNrZWQgPSBcImZsZXhDaGlsZC1mYW9WVzMgZGEtZmxleENoaWxkIHN3aXRjaERpc2FibGVkLTNIc1hBSiBzd2l0Y2gtM3d3d2NWIGRhLXN3aXRjaERpc2FibGVkIGRhLXN3aXRjaCB2YWx1ZUNoZWNrZWQtbS00SUpaIHZhbHVlLTJoRnJrayBzaXplRGVmYXVsdC0yWWxPWnIgc2l6ZS0zckZFSGcgdGhlbWVEZWZhdWx0LTI0aENkWFwiO1xyXG5jb25zdCBzd2l0Y2hXcmFwcGVyID0gXCJmbGV4Q2hpbGQtZmFvVlczIGRhLWZsZXhDaGlsZCBzd2l0Y2hFbmFibGVkLVYyV0RCQiBzd2l0Y2gtM3d3d2NWIGRhLXN3aXRjaEVuYWJsZWQgZGEtc3dpdGNoIHZhbHVlVW5jaGVja2VkLTJsVV8yMCB2YWx1ZS0yaEZya2sgc2l6ZURlZmF1bHQtMllsT1pyIHNpemUtM3JGRUhnIHRoZW1lRGVmYXVsdC0yNGhDZFhcIjtcclxuY29uc3Qgc3dpdGNoV3JhcHBlckNoZWNrZWQgPSBcImZsZXhDaGlsZC1mYW9WVzMgZGEtZmxleENoaWxkIHN3aXRjaEVuYWJsZWQtVjJXREJCIHN3aXRjaC0zd3d3Y1YgZGEtc3dpdGNoRW5hYmxlZCBkYS1zd2l0Y2ggdmFsdWVDaGVja2VkLW0tNElKWiB2YWx1ZS0yaEZya2sgc2l6ZURlZmF1bHQtMllsT1pyIHNpemUtM3JGRUhnIHRoZW1lRGVmYXVsdC0yNGhDZFhcIjtcclxuY29uc3Qgc3dpdGNoQ2xhc3MgPSBcImNoZWNrYm94RW5hYmxlZC1DdGluRW4gY2hlY2tib3gtMnR5akpnXCI7XHJcbmNvbnN0IHN3aXRjaENsYXNzRGlzYWJsZWQgPSBcImNoZWNrYm94RGlzYWJsZWQtMU1BODFBIGNoZWNrYm94LTJ0eWpKZ1wiO1xyXG5jb25zdCBkZXNjcmlwdGlvbiA9IFwiZGVzY3JpcHRpb24tM19OY3NiIGZvcm1UZXh0LTNmczdBSiBub3RlLTFWM2t5SiBtb2RlRGVmYXVsdC0zYTJQaDEgcHJpbWFyeS1qdzBJNEtcIjtcclxuY29uc3QgZGl2aWRlciA9IFwiZGl2aWRlci0zNTczb08gZGl2aWRlckRlZmF1bHQtM3J2TGUtXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTd2l0Y2ggZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgICAgICBzdXBlcihwcm9wcyk7XHJcblxyXG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XHJcbiAgICAgICAgICAgIGNoZWNrZWQ6IHRoaXMucHJvcHMuY2hlY2tlZFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgb25DaGFuZ2UoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvcHMuZGlzYWJsZWQpIHJldHVybjtcclxuICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKHRoaXMucHJvcHMuaWQsICF0aGlzLnN0YXRlLmNoZWNrZWQpO1xyXG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xyXG4gICAgICAgICAgICBjaGVja2VkOiAhdGhpcy5zdGF0ZS5jaGVja2VkXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IHdyYXBwZXJDbGFzcyA9IHRoaXMucHJvcHMuZGlzYWJsZWQgPyAodGhpcy5zdGF0ZS5jaGVja2VkID8gc3dpdGNoV3JhcHBlckRpc2FibGVkQ2hlY2tlZCA6IHN3aXRjaFdyYXBwZXJEaXNhYmxlZCkgOiAodGhpcy5zdGF0ZS5jaGVja2VkID8gc3dpdGNoV3JhcHBlckNoZWNrZWQgOiBzd2l0Y2hXcmFwcGVyKTtcclxuICAgICAgICByZXR1cm4gPGRpdiBjbGFzc05hbWU9e2ZsZXhDb250YWluZXJ9IHN0eWxlPXt7ZmxleDogXCIxIDEgYXV0b1wifX0+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2ZsZXhXcmFwfSBzdHlsZT17e2ZsZXg6IFwiMSAxIGF1dG9cIn19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17ZmxleENoaWxkfSBzdHlsZT17e2ZsZXg6IFwiMSAxIGF1dG9cIn19PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9e3RoaXMucHJvcHMuaWR9IGNsYXNzTmFtZT17dGl0bGV9Pnt0aGlzLnByb3BzLm5hbWUgfHwgdGhpcy5wcm9wcy5kYXRhLnRleHR9PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPXt3cmFwcGVyQ2xhc3N9IHRhYkluZGV4PVwiMFwiIHN0eWxlPXt7ZmxleDogXCIwIDAgYXV0b1wifX0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9e3RoaXMucHJvcHMuaWR9IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5kaXNhYmxlZCA/IHN3aXRjaENsYXNzRGlzYWJsZWQgOiBzd2l0Y2hDbGFzc30gdHlwZT1cImNoZWNrYm94XCIgdGFiSW5kZXg9XCItMVwiIGNoZWNrZWQ9e3RoaXMuc3RhdGUuY2hlY2tlZH0gb25DaGFuZ2U9e2UgPT4gdGhpcy5vbkNoYW5nZShlKX0gLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2Rlc2NyaXB0aW9ufSBzdHlsZT17e2ZsZXg6IFwiMSAxIGF1dG9cIn19Pnt0aGlzLnByb3BzLm5vdGUgfHwgdGhpcy5wcm9wcy5kYXRhLmluZm99PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e2RpdmlkZXJ9IC8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj47XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/settings/switch.jsx\n");

/***/ }),

/***/ "./src/ui/settings/title.jsx":
/*!***********************************!*\
  !*** ./src/ui/settings/title.jsx ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SettingsTitle; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nconst className = \"bd-settings-title h2-2gWE-o title-3sZWYQ size16-14cGz5 height20-mO2eIN weightSemiBold-NJexzi defaultColor-1_ajX0 defaultMarginh2-2LTaUL marginBottom20-32qID7\";\nconst className2 = \"bd-settings-title bd-settings-group-title h5-18_1nd title-3sZWYQ size12-3R0845 height16-2Lv3qA weightSemiBold-NJexzi da-h5 da-title da-size12 da-height16 da-weightSemiBold marginBottom4-2qk4Hy da-marginBottom4 marginTop8-1DLZ1n da-marginTop8\";\nclass SettingsTitle extends modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].Component {\n  constructor(props) {\n    super(props);\n  } //h2-2gWE-o title-3sZWYQ size16-14cGz5 height20-mO2eIN weightSemiBold-NJexzi da-h2 da-title da-size16 da-height20 da-weightSemiBold defaultColor-1_ajX0 da-defaultColor marginTop60-3PGbtK da-marginTop60 marginBottom20-32qID7 da-marginBottom20\n\n\n  render() {\n    const baseClass = this.props.isGroup ? className2 : className;\n    const titleClass = this.props.className ? `${baseClass} ${this.props.className}` : baseClass;\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"h2\", {\n      className: titleClass,\n      onClick: () => {\n        this.props.onClick && this.props.onClick();\n      }\n    }, this.props.text, this.props.button && modules__WEBPACK_IMPORTED_MODULE_0__[\"React\"].createElement(\"button\", {\n      className: \"bd-button bd-button-title\",\n      onClick: this.props.button.onClick\n    }, this.props.button.title), this.props.otherChildren);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlLy4vc3JjL3VpL3NldHRpbmdzL3RpdGxlLmpzeD9iNTliIl0sIm5hbWVzIjpbImNsYXNzTmFtZSIsImNsYXNzTmFtZTIiLCJTZXR0aW5nc1RpdGxlIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwicmVuZGVyIiwiYmFzZUNsYXNzIiwiaXNHcm91cCIsInRpdGxlQ2xhc3MiLCJvbkNsaWNrIiwidGV4dCIsImJ1dHRvbiIsInRpdGxlIiwib3RoZXJDaGlsZHJlbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQSxNQUFNQSxTQUFTLEdBQUcsK0pBQWxCO0FBQ0EsTUFBTUMsVUFBVSxHQUFHLG1QQUFuQjtBQUVlLE1BQU1DLGFBQU4sU0FBNEJDLDZDQUFLLENBQUNDLFNBQWxDLENBQTRDO0FBQ3ZEQyxhQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNmLFVBQU1BLEtBQU47QUFDSCxHQUhzRCxDQUkzRDs7O0FBQ0lDLFFBQU0sR0FBRztBQUNMLFVBQU1DLFNBQVMsR0FBRyxLQUFLRixLQUFMLENBQVdHLE9BQVgsR0FBcUJSLFVBQXJCLEdBQWtDRCxTQUFwRDtBQUNBLFVBQU1VLFVBQVUsR0FBRyxLQUFLSixLQUFMLENBQVdOLFNBQVgsR0FBd0IsR0FBRVEsU0FBVSxJQUFHLEtBQUtGLEtBQUwsQ0FBV04sU0FBVSxFQUE1RCxHQUFnRVEsU0FBbkY7QUFDQSxXQUFPO0FBQUksZUFBUyxFQUFFRSxVQUFmO0FBQTJCLGFBQU8sRUFBRSxNQUFNO0FBQUMsYUFBS0osS0FBTCxDQUFXSyxPQUFYLElBQXNCLEtBQUtMLEtBQUwsQ0FBV0ssT0FBWCxFQUF0QjtBQUE0QztBQUF2RixPQUNFLEtBQUtMLEtBQUwsQ0FBV00sSUFEYixFQUVFLEtBQUtOLEtBQUwsQ0FBV08sTUFBWCxJQUFxQjtBQUFRLGVBQVMsRUFBQywyQkFBbEI7QUFBOEMsYUFBTyxFQUFFLEtBQUtQLEtBQUwsQ0FBV08sTUFBWCxDQUFrQkY7QUFBekUsT0FBbUYsS0FBS0wsS0FBTCxDQUFXTyxNQUFYLENBQWtCQyxLQUFyRyxDQUZ2QixFQUdFLEtBQUtSLEtBQUwsQ0FBV1MsYUFIYixDQUFQO0FBS0g7O0FBYnNEIiwiZmlsZSI6Ii4vc3JjL3VpL3NldHRpbmdzL3RpdGxlLmpzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVhY3R9IGZyb20gXCJtb2R1bGVzXCI7XHJcblxyXG5jb25zdCBjbGFzc05hbWUgPSBcImJkLXNldHRpbmdzLXRpdGxlIGgyLTJnV0UtbyB0aXRsZS0zc1pXWVEgc2l6ZTE2LTE0Y0d6NSBoZWlnaHQyMC1tTzJlSU4gd2VpZ2h0U2VtaUJvbGQtTkpleHppIGRlZmF1bHRDb2xvci0xX2FqWDAgZGVmYXVsdE1hcmdpbmgyLTJMVGFVTCBtYXJnaW5Cb3R0b20yMC0zMnFJRDdcIjtcclxuY29uc3QgY2xhc3NOYW1lMiA9IFwiYmQtc2V0dGluZ3MtdGl0bGUgYmQtc2V0dGluZ3MtZ3JvdXAtdGl0bGUgaDUtMThfMW5kIHRpdGxlLTNzWldZUSBzaXplMTItM1IwODQ1IGhlaWdodDE2LTJMdjNxQSB3ZWlnaHRTZW1pQm9sZC1OSmV4emkgZGEtaDUgZGEtdGl0bGUgZGEtc2l6ZTEyIGRhLWhlaWdodDE2IGRhLXdlaWdodFNlbWlCb2xkIG1hcmdpbkJvdHRvbTQtMnFrNEh5IGRhLW1hcmdpbkJvdHRvbTQgbWFyZ2luVG9wOC0xRExaMW4gZGEtbWFyZ2luVG9wOFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2V0dGluZ3NUaXRsZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xyXG4gICAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgIH1cclxuLy9oMi0yZ1dFLW8gdGl0bGUtM3NaV1lRIHNpemUxNi0xNGNHejUgaGVpZ2h0MjAtbU8yZUlOIHdlaWdodFNlbWlCb2xkLU5KZXh6aSBkYS1oMiBkYS10aXRsZSBkYS1zaXplMTYgZGEtaGVpZ2h0MjAgZGEtd2VpZ2h0U2VtaUJvbGQgZGVmYXVsdENvbG9yLTFfYWpYMCBkYS1kZWZhdWx0Q29sb3IgbWFyZ2luVG9wNjAtM1BHYnRLIGRhLW1hcmdpblRvcDYwIG1hcmdpbkJvdHRvbTIwLTMycUlENyBkYS1tYXJnaW5Cb3R0b20yMFxyXG4gICAgcmVuZGVyKCkge1xyXG4gICAgICAgIGNvbnN0IGJhc2VDbGFzcyA9IHRoaXMucHJvcHMuaXNHcm91cCA/IGNsYXNzTmFtZTIgOiBjbGFzc05hbWU7XHJcbiAgICAgICAgY29uc3QgdGl0bGVDbGFzcyA9IHRoaXMucHJvcHMuY2xhc3NOYW1lID8gYCR7YmFzZUNsYXNzfSAke3RoaXMucHJvcHMuY2xhc3NOYW1lfWAgOiBiYXNlQ2xhc3M7XHJcbiAgICAgICAgcmV0dXJuIDxoMiBjbGFzc05hbWU9e3RpdGxlQ2xhc3N9IG9uQ2xpY2s9eygpID0+IHt0aGlzLnByb3BzLm9uQ2xpY2sgJiYgdGhpcy5wcm9wcy5vbkNsaWNrKCk7fX0+XHJcbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy50ZXh0fVxyXG4gICAgICAgICAgICAgICAge3RoaXMucHJvcHMuYnV0dG9uICYmIDxidXR0b24gY2xhc3NOYW1lPVwiYmQtYnV0dG9uIGJkLWJ1dHRvbi10aXRsZVwiIG9uQ2xpY2s9e3RoaXMucHJvcHMuYnV0dG9uLm9uQ2xpY2t9Pnt0aGlzLnByb3BzLmJ1dHRvbi50aXRsZX08L2J1dHRvbj59XHJcbiAgICAgICAgICAgICAgICB7dGhpcy5wcm9wcy5vdGhlckNoaWxkcmVufVxyXG4gICAgICAgICAgICAgICAgPC9oMj47XHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/ui/settings/title.jsx\n");

/***/ }),

/***/ "./src/ui/toasts.js":
/*!**************************!*\
  !*** ./src/ui/toasts.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Toasts; });\n/* harmony import */ var modules__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! modules */ \"./src/modules/modules.js\");\n\nconst channelsClass = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"channels\").channels.split(\" \")[0];\nconst membersWrapClass = modules__WEBPACK_IMPORTED_MODULE_0__[\"WebpackModules\"].getByProps(\"membersWrap\").membersWrap.split(\" \")[0];\nclass Toasts {\n  static get shouldShowToasts() {\n    return modules__WEBPACK_IMPORTED_MODULE_0__[\"Settings\"].get(\"settings\", \"general\", \"showToasts\");\n  }\n  /** Shorthand for `type = \"success\"` for {@link module:Toasts.show} */\n\n\n  static async success(content, options = {}) {\n    return this.show(content, Object.assign(options, {\n      type: \"success\"\n    }));\n  }\n  /** Shorthand for `type = \"info\"` for {@link module:Toasts.show} */\n\n\n  static async info(content, options = {}) {\n    return this.show(content, Object.assign(options, {\n      type: \"info\"\n    }));\n  }\n  /** Shorthand for `type = \"warning\"` for {@link module:Toasts.show} */\n\n\n  static async warning(content, options = {}) {\n    return this.show(content, Object.assign(options, {\n      type: \"warning\"\n    }));\n  }\n  /** Shorthand for `type = \"error\"` for {@link module:Toasts.show} */\n\n\n  static async error(content, options = {}) {\n    return this.show(content, Object.assign(options, {\n      type: \"error\"\n    }));\n  }\n  /** Shorthand for `type = \"default\"` for {@link module:Toasts.show} */\n\n\n  static async default(content, options = {}) {\n    return this.show(content, Object.assign(options, {\n      type: \"\"\n    }));\n  }\n  /**\r\n   * This shows a toast similar to android towards the bottom of the screen.\r\n   *\r\n   * @param {string} content The string to show in the toast.\r\n   * @param {object} options Options object. Optional parameter.\r\n   * @param {string} [options.type=\"\"] Changes the type of the toast stylistically and semantically. Choices: \"\", \"info\", \"success\", \"danger\"/\"error\", \"warning\"/\"warn\". Default: \"\"\r\n   * @param {boolean} [options.icon=true] Determines whether the icon should show corresponding to the type. A toast without type will always have no icon. Default: true\r\n   * @param {number} [options.timeout=3000] Adjusts the time (in ms) the toast should be shown for before disappearing automatically. Default: 3000\r\n   * @param {boolean} [options.forceShow=false] Whether to force showing the toast and ignore the bd setting\r\n   */\n\n\n  static show(content, options = {}) {\n    const {\n      type = \"\",\n      icon = true,\n      timeout = 3000,\n      forceShow = false\n    } = options;\n    if (!this.shouldShowToasts && !forceShow) return;\n    this.ensureContainer();\n    const toastElem = document.createElement(\"div\");\n    toastElem.classList.add(\"bd-toast\");\n    if (type) toastElem.classList.add(\"toast-\" + type);\n    if (type && icon) toastElem.classList.add(\"icon\");\n    toastElem.innerText = content;\n    document.querySelector(\".bd-toasts\").appendChild(toastElem);\n    setTimeout(() => {\n      toastElem.classList.add(\"closing\");\n      setTimeout(() => {\n        toastElem.remove();\n        if (!document.querySelectorAll(\".bd-toasts .bd-toast\").length) document.querySelector(\".bd-toasts\").remove();\n      }, 300);\n    }, timeout);\n  }\n\n  static ensureContainer() {\n    if (document.querySelector(\".bd-toasts\")) return;\n    const container = document.querySelector(`.${channelsClass} + div`);\n    const memberlist = container.querySelector(`.${membersWrapClass}`);\n    const form = container ? container.querySelector(\"form\") : null;\n    const left = container ? container.getBoundingClientRect().left : 310;\n    const right = memberlist ? memberlist.getBoundingClientRect().left : 0;\n    const width = right ? right - container.getBoundingClientRect().left : container.offsetWidth;\n    const bottom = form ? form.offsetHeight : 80;\n    const toastWrapper = document.createElement(\"div\");\n    toastWrapper.classList.add(\"bd-toasts\");\n    toastWrapper.style.setProperty(\"left\", left + \"px\");\n    toastWrapper.style.setProperty(\"width\", width + \"px\");\n    toastWrapper.style.setProperty(\"bottom\", bottom + \"px\");\n    document.querySelector(\"#app-mount\").appendChild(toastWrapper);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/ui/toasts.js\n");

/***/ }),

/***/ "electron":
/*!****************************************!*\
  !*** external "require(\"electron\")" ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"electron\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlL2V4dGVybmFsIFwicmVxdWlyZShcXFwiZWxlY3Ryb25cXFwiKVwiP2ZhMWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZWxlY3Ryb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJlbGVjdHJvblwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///electron\n");

/***/ }),

/***/ "events":
/*!**************************************!*\
  !*** external "require(\"events\")" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"events\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlL2V4dGVybmFsIFwicmVxdWlyZShcXFwiZXZlbnRzXFxcIilcIj85NjE2Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6ImV2ZW50cy5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImV2ZW50c1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///events\n");

/***/ }),

/***/ "fs":
/*!**********************************!*\
  !*** external "require(\"fs\")" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"fs\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlL2V4dGVybmFsIFwicmVxdWlyZShcXFwiZnNcXFwiKVwiP2QzMGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiZnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJmc1wiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///fs\n");

/***/ }),

/***/ "module":
/*!*************************!*\
  !*** external "module" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"module\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlL2V4dGVybmFsIFwibW9kdWxlXCI/N2M0OCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJtb2R1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJtb2R1bGVcIik7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///module\n");

/***/ }),

/***/ "path":
/*!************************************!*\
  !*** external "require(\"path\")" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"path\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlL2V4dGVybmFsIFwicmVxdWlyZShcXFwicGF0aFxcXCIpXCI/MmYzNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJwYXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicGF0aFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///path\n");

/***/ }),

/***/ "request":
/*!***************************************!*\
  !*** external "require(\"request\")" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"request\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Db3JlL2V4dGVybmFsIFwicmVxdWlyZShcXFwicmVxdWVzdFxcXCIpXCI/MmM1ZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiJyZXF1ZXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVxdWVzdFwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///request\n");

/***/ })

/******/ })["default"];